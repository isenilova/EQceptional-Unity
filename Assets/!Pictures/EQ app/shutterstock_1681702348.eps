%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: tinymonsters.eps
%%Creator: Adobe Illustrator(R) 22.1
%%For: 
%%CreationDate: 3/24/2020
%%BoundingBox: 0 0 2800 1700
%%HiResBoundingBox: 0 0 2800 1700
%%CropBox: 0 0 2800 1700
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.1.0 x312 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 80 8%%BeginData: 22990 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCA
%CFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8
%FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCA
%CFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8
%FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFFFCAFFCFFFCAFFCFFFCAFF
%CFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFF
%CAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFF
%CFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFF
%CAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFCACFA8
%FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCA
%CFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8
%FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCA
%CFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8
%FFCACFA8FFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCA
%CFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8
%FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCA
%CFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8
%FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFFFCFFFCAFFCFFFCAFF
%CFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFF
%CAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFF
%CFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFF
%CAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAA8
%FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCA
%CFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8
%FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCA
%CFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8
%FFCACFA8FFCACFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFA8FFCACFA8FFCACFA8FFCACFA8FFCA
%CFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8
%FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCA
%CFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8
%FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFFFCAFFCFFFCAFF
%CFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFF
%CAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFF
%CFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFF
%CAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFF
%CFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCA
%CFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8
%FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCA
%CFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8
%FFCACFA8FFCACFA8FFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFCACFA8FFCACFA8FFCACFA8FFCA
%CFA8FFCACFCAFFA8CFA8FFCACFA8FFCACFA8FFCACFCAFFCAFFCAFFCAFFCA
%FFCACFA8FFCACFA8FFCACFA8FFCAFFA8FFCACFA8FFCACFA8FFCACFA8FFCA
%CFA8FFCFCFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8
%FFCACFCAAF84A9A8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFFFCFFFCAFF
%CFFFCAFFCFFFCAFFCFFFCAFFCFFF7DA87DA1CAFFCFFFCAFFCFFFCAFFCFFF
%A8AFA8AEA8AFA8AFCFFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCBFFCFFFCAFF
%CFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFF
%CAFFCFFFCAFFCFFFCAFFCFAF60856161A8FFCFFFCAFFCFFFCAFFCFFFCAFF
%CFFFCAA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FF7DA77C7D52A8CAFFCA
%CFA8FFCACFCACF3B191219131912191260CAFFCACFA8FFCACFA8FFCACEC7
%CCC7CDA8FFCACFA8FFCACFA8FFCACFA8FFC3C3BDCACACFA8FFCACFA8FFCA
%CFA8FFCACFA8A8A8CFCAFFCACFA8FFCACFCAFF5A5A355A5985A8FFCACFA8
%FFCACFA8FFCACFA8FFCACFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFC4C4
%C376527DA8FFCFFFCFFFCFFFCFFF6019121913191319131913FFCFFFCFFF
%CFFFCFFFFFCDC6FEC6FEC6CCCFFFCFFFCFFFCFFFCFFFCFFFCAC4C3C4C4FF
%CFFFCFFFCFFFCFFFCFFFCFFF5A30070E30FFCFFFCFFFCFFFCFFFA8858485
%608561FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFA8FFCACFA8FFCACFA8FFCA
%CFA8FFCFCABDC4BDC49B9B9BCAA8FFCACFA8FFCACFCA8412191219121912
%191219A8FFCACFA8FFCACFA8CEC6C69EA4C0C6C6CDCACFA8FFCACFA8FFCA
%FFCAC4BDC4BDC4CAFFA8FFCACFA8FFCACFCAFF5A07070E070707FFCFCFA8
%FFCACFCAAF606160856085A8FFCACFA8FFCACFA8FFCACFA8FFCACFFFCAFF
%CFFFCAFFCFFFCAFFCFFFCFFFC3C4C3C4C3C4C3C4C3FFCFFFCFFFCAFFCFFF
%5F19131912191319121913AECFFFCFFFCAFFCFFFC7FEC6C6C6FEC6FEC6FF
%CFFFCAFFCFFFCFFFCAC4BDC4C4C4BDC4CAFFCFFFCFFFCAFFCFFF840E070E
%070E07072FFFCFFFCAFFCFFFCA8B6161608584FFCAFFCFFFCAFFCFFFCAFF
%CFFFCAFFCFCACFA8FFCACFA8FFCACFA8FFCACFC3C4BDC4BDC4BDC4BDC4C4
%CFA8FFCACFA8FFCA6012192E190B1212341219A8CFA8FFCACFA8FFC9C6C6
%C6C7CEFD04C6A7FFCACFA8FFCAA87DC4BDC39B9BBDC39BC4A1A8CAFFCACF
%A8FFCA30070D070E070D070DA8FFCACFA8FFCACFA885848560FFCACFA8FF
%CACFA8FFCACFA8FFCACFA8FFFFCFFFCFFFCFFFCFFFCFFFCFFFCFCAC3C4C3
%C4C3C4C3C4C3C4CFFFCFFFCFFFCFFF6019133B13191319121913AECFFFCF
%FFCFFFFFCEC6FEC6CFFFCDC6FEC6CEFFFFCFFFCFA87DCAC3C4BDC476C4BD
%C3C3C47DA8CFFFCFFFCFAF070E070D060D070E0784CFFFCFFFCFFFCFAF85
%CFCA8BCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFCACFA8FFCACFA8FFCACF
%A8FFCACFC3C4BDBD9B9BBDBDBDC4C3CFA8FFCACFA8FFCA84121912191219
%12191219A8FFA8FFCACFA8FFC7C6C6FECAFFC9C6C6C6C8FFCACFCAFF7DA8
%9BC4BDC3BDC4BDC4BDC49BA87DA8CFCFA8FF5A07073007000630290759FF
%CACFA8FFCACFA8A2BDC4A2FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFFFCF
%FFCAFFCFFFCAFFCFFFCAFFCFC4BDC4BDC4BDC4C3C4BDC4CFFFCAFFCFFFCA
%FF8419133B1319133B133B13AECFFFCAFFCFFFCACCC6FEC6FFFFCFC6FEC6
%CDCBFFCFFFCFA87DA1BDC4C3C4C3C4C3C4C3C3A17DA8FFCFFFCF7E073007
%0E070E0730075ACFFFCFFFCAFFCFC4BDC4C3C4C4FFCFFFCAFFCFFFCAFFCF
%FFCAFFCFFFCAA8FFCACFA8FFCACFA8FFCACFA8FFC4C3BDC4BDC4BDC4BDC3
%C3FFCACFA8FFCACFCAAE1260353B5F193B3B5F19A8FFCACFA8FFCACFFD04
%C6A8FFCAC6C6C6C7FFA8FFCACFCAA8769BBDC4BDC3BDC4BDC376A7A8FFA8
%FFCACF2FFD04070EFD04072FCFA8FFCACFA8CABDBD76A1BDC3A8FFCACFA8
%FFCACFA8FFCACFA8FFCACFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFC3C4C3C4
%C3C4C3C4C3FFCFFFCFFFCFFFCFFFAE1960603B84198A196613FFCFFFCFFF
%CFFFCFCCC6FEC6FFFFFFC7FEC6CCCFFFCFFFCFFFA777BDC4C3C4C3C4C3C4
%BD7D7DFFCFFFCFFFCF5A070E070E070E070E075ACFFFCFFFCFFFCAC4BDC4
%C3C4C3FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFA8FFCACFA8FFCACFA8FFCA
%CFA8FFCFCABDC4BDC4BDC4BDCAA8FFCACFA8FFCACFCAFF138413605F3B5F
%3B5F19A8FFCACFA8FFCACFC6C6C6C7A8FFCAC7C6C6C6CFA8FFCACFCAA87D
%CABDC4BDC4BDC4BDCA7D7DCFCFA8FFCAFF59FD04070EFD04072FCFCAFFCA
%CFA8CFC3C4BDC4BDC4A8FFCACFA8FFCACFA8FFCACFA8FFCACFFFCAFFCFFF
%CAFFCFFFCAFFCFFFCAFFCFCAC3C4C3C4BDCACFFFCAFFCFFFCAFFCFFFA819
%603B5F843B60196619FFCAFFCFFFCAFFCFCCC6FEC8FFCAFFC8C6C6FECFFF
%CAFFCFFFCFFFCAC4C3C4C3C4C3C4CAFFCFFFCFFFCAFFCFAF0D0E3030070E
%300E07A8CFFFCAFFCFFFCFCAC3C4BDC4CAFFCAFFCFFFCAFFCFFFCAFFCFFF
%CAFFCFCACFA8FFCACFA8FFCACFA8FFCACFA8FFA1A1CACFCA9BA1FFCACFA8
%FFCACFA8FFCACF138A3B605F8484605F60CACFA8FFCACFA8FFC8C6C6CFCA
%CFA8CFC7C6C8FFCACFA8FFCACFA8CAC3CAA8CACACFC3CACFCFA8FFCACFA8
%FFCACF7EFFA87E7EFFA8A8CAFFCACFA8FFCAFFA1A1CACA9ACFCACFA8FFCA
%CFA8FFCACFA8FFCACFA8FFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFC4A1FF
%CFFFC3CACFFFCFFFCFFFCFFFCFFFCFFFCFFFA8FFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCAFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CAFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFCACAFF
%CFCACAFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFCACFA8FFCACFA8FFCACFA8
%FFCACFA8FFCACFA8FFCACFCAFFCACFA8FFCACFA8FFCACFCAFFCACFCAFFCA
%CFCAFFCACFA8FFCACFA8FFCAFFA8FFCACFA8FFCAFFA8FFCACFA8FFCACFA8
%FFCFCFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCA
%CFA8FFCACFCAFFCACFCAFFCACFA8FFCACFA8FFCACFA8FFCACFA8FFFFCFFF
%CAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFF
%CFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFF
%CAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFF
%CFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFF
%CAFFCFFFCAA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8
%FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCA
%CFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8
%FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCA
%CFA8FFCACFA8FFCACFA8FFCACFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFA8FFCACFA8FFCACFA8
%FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCA
%CFCAFFCACFA8FFCACFA8FFCACFA8FFCFFFA8FFCACFA8FFCACFA8FFCACFA8
%FFCACFA8FFCACFCAFFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCFFFCFFFCA
%CFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFFF
%CAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFF
%CFFFCAFFCFFFCAFFA8FFCAFFCFFFCAFFCFFFCAFFCFFFC3BCBCFFCFFFCFFF
%CAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCFFFCFFFCAFFCFFFCAFFCFFFCAFF
%CFFFCFA852A7CAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFF
%CAFFCFFFCAFFCFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCAFFA8FFCAFFA8
%FFCAFFA8FFCACFA8FFCACFA8FFA88560616085A8FFCACFA8FFCACFA8FFC3
%B0FCB0BCFFA8FFCACFA8FFCACFA8FFCACFA8FFCAFF843B1384A8FFCACFA8
%FFCACFA8FFCACFA8FFCFAE535252FFA8FFCACFA8FFCACFA8CFFD05CACFA8
%FFCACFA8FFCACFA8FFCACFA8FFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCECD
%CACDCFCEC7CFC8CFC9CDCFFFCFFFCFFFCFFFA885618561856185A8FFCFFF
%CFFFCFFFFFC3B0B5B0B6CAFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF5F3B1319
%131984FFCFFFCFFFCFFFCFFFCFCFC9C9A0C2C2C3C9FFCFFFCFFFCFFFCFFF
%FD06CACFFFCFFFCFFFCFFFCFFFCFFFCFFFCFCACFA8FFCACFA8FFCACFA8FF
%CACEC6FEC6C7C6CCFD05C6C7C6CFCACFA8FFCACFA8616061608560616061
%A8CFA8FFCACFA8FFBCB08DB5B0CAAEFFCAFFA8FFCACFA8FFCACFA8FF8413
%121912191260CFFFA8FFCACFA8FFCFC9BAC1BABBBAC1BAC1C9FFCACFA8FF
%CACFFD07CACFA8FFCACFA8FFCACFA8FFCACFA8FFFFCFFFCAFFCFFFCAFFCF
%FFCAFFC8C6C6FEC6FEC6FEC6FEC6FEC6FEC9FFCFFFCAFFCF856085618560
%856185608BCFFFCAFFCFFFCFBCB0B5B0B5C3FFCFFFCFFFCFFFCFFFCAFFCF
%FFA83B1319121913191360AEFFCAFFCFFFCAFFC2C1BBC1BBC1BBC1BBCACF
%FFCFFFCAFFCFFD08CAFFCAFFCFFFCAFFCFFFCAFFCFFFCAA8FFCACFA8FFCA
%CFA8FFCACFA8CDC6C6C6FEFD09C6CEA8FFCACFCAFF60615A856085608560
%615AFFCACFA8FFCACFB5B0B0B5B0B5B5BCB5BCB5BCA1FFCACFA8FFA83B12
%19121912191219123BCACFA8FFCACFA8C2BAC1BAC1BBBBBAC1C9FFA8FFCA
%CFA8FFCACAC4FD04CAFFCACFA8FFCACFA8FFCACFA8FFCACFFFCFFFCFFFCF
%FFCFFFCFFFCFFFC8FEC6FE9EC6C6A5C69EC6FEC6FEC9FFCFFFCFFFA88561
%856185358561856185A8FFCFFFCFFFCFBCB0B5B0B6B0B5B0B5B0B5FCBCCF
%FFCFFFCFAE1319131912351319131919FFCFFFCFFFCFFFC2C1BBC199C1BB
%C1BBCACFFFCFFFCFFFFD07CACBCAFFCFFFCFFFCFFFCFFFCFFFCFFFCFA8FF
%CACFA8FFCACFA8FFCACFA8CDC6C6C6C0C0A551C69EC6C6FEC6CFA8FFCACF
%CAAF60615A7E5A055A845A6160FFCACFA8FFCAFFB6B0B0B5B0B5B0B5B0B5
%B0B0B5FFCFCFA8FF591312191213121912191219A8CFA8FFCACFA8C9BABB
%BB99BBBBBAC1C9FFA8FFCACFFD04CAC3A1C3C4C4CACACFA8FFCACFA8FFCA
%CFA8FFCACFFFCAFFCFFFCAFFCFFFCAFFCFFFC8FEC6FEC6FEC6C6C6FEC6FE
%C6CCCFFFCAFFCFFFA88561855A85608560856185CAFFCFFFCAFFFFC3B0B5
%B0B5B0B5B0B5B0B5B0BCCFFFCFFFCA841319121913191219131935CACFFF
%CAFFCFFFC2C1BBC1BBC1BBC1BBCFCFFFCAFFCFFFCACAC3CAA1FD04CAFFCF
%FFCAFFCFFFCAFFCFFFCAFFCFCACFA8FFCACFA8FFCACFA8FFCACFFD0CC6A5
%FFCACFA8FFCACF6061606160856061606160AECAFFCACFA8FFCAB5FCB5B0
%B5B0B5B0B0FCB5C3FFA8FFCACAA184131912191219121935A87DFFCACFA8
%FFCAC2BAC1BBBBBAC1BAC1A8FFCACFA8FFCACFFD04CAC4CACACFA8FFCACF
%A8FFCACFA8FFCACFA8FFFFCFFFCFFFCFFFCFFFCFFFCFFFFFCDC6FEC6FEC6
%FEC6FEC6FEC6CFFFFFCFFFCFFFA88B6185618561856185858584FFCFFFCF
%FFCFFFB5BCB5B6B0B5B5B6B0B6CAFFCFFFCFFFA8A8A8FFA86619195FFFAE
%CFA1A8FFFFCFFFCFFFC2C1BBC1BBC1BBC1C2FFCFFFCFFFCFFFCAFFFD07CA
%FFCFFFCFFFCFFFCFFFCFFFCFFFCFCACFA8FFCACFA8FFCACFA8FFCAFFC9CE
%C8CEC9CEC9CEC9CDC9CDC9FFCACFA8FFCAA984FF84616061606184FFA8A9
%CAFFCACFA8FFCABCB6C3C3BCBCC3CAB6B5CACFCFA8FFCACF5252CAFF8460
%5F60CAFFA1527DFFCACFA8FFCFCABAC1BBBBBBC1BBCAA8FFCACFA8FFCACA
%C4FD07CAA8FFCACFA8FFCACFA8FFCACFA8FFFFCFFFCAFFCFFFCAFFCFFFCA
%FFCFFFCAFFFFFFCAFFFFFFCAFFCFFFCAFFCFFFCAFFCFFFCFFFA8AF84AFA8
%FFCAFFCFFFCAFFCFFFCFFFBDBDC3CAC3C3C3FFBCBCC9FFCFFFCAFFCFCA7D
%FFCFFFCAFFA8FFCFCA7DFFCAFFCFFFCAFFCFC2C9CFCACFC9C9CFFFCAFFCF
%FFCAFFCFFD07CACFFFCAFFCFFFCAFFCFFFCAFFCFFFCAA8FFCACFA8FFCACF
%A8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FF
%CACFCAFFCACFA8FFCACFA8FFCACFA8CFCACAA8CFCACFA8CFCACFA8FFCACF
%A8FFCAFFA8FFCACFCAFFCACFCAFFCACFA8FFCACFA8FFCAFFA8FFCACFA8FF
%CACFA8FFCACFA8FFFD06CAA8FFCACFA8FFCACFA8FFCACFA8FFCACFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8
%FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCA
%CFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8
%FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCA
%CFA8FFCACFA8FFCACFA8FFCACFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFF
%CAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCFFFCFFFCAFF
%CFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFF
%CAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFF
%CFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFCACFA8FFCACFA8FFCA
%CFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8
%FFA8A8CAFFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCFFFA8FFCACFA8FFCA
%CFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8
%FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFFF7D7CFFCFFFCFFFCFFFCFFFCFFFA17D7DCFCFFFA87D
%7DFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFCACFA8FFCACFA8FFCACFA8FFA87DA8FFCAFFA88484FFCA
%FFCACFA8FFCACFA8FFCACFA8FFCACAA2CB7752A1FFCACFA8FFCACFA8FF7D
%A8A852A7FFCF7D52CA7DCACFCFA8FFCACFA8FFCACFA8FFCFCFA1FFCFFFA8
%FFCACFA8FFCACFA8FFCACFCAFFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCA
%CFA8FFCACFA8FFCACFA8FFCACFA8FFFFCFFFCAFFCFFFCAFFCFFFCF7D52CF
%CFFF843B12193BFFCAFFCFFFCAFFCFFFCAFFCFFFCFFFA2CBA2CBA8FFCAFF
%CFFFCAFFCFFFA8A8FFA8A8FFCFFFCFA8A8AE7DFFCFFFCAFFCFFFCAFFFFFF
%CACF7D7D52A8CAFFCAFFCFFFCAFFCFFFCAFF858BA8FFCFFFCAFFCFFFCAFF
%CFFFCFFFC9CACFFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAA8FFCACFA8FFCA
%CFA8FFCACA7DA8A8FF35191219121913AECAFFCACFA8FFCACFA8FFCACFA2
%CAA2A8A2CBA8CFA8FFCACFA8FFCAA8A736077E595A2F5A2F075AA7A8FFCA
%CFA8FFCAFFA6CDC7C7A4A5755152A8CACFA8FFCACFA8FFA88536615A5A5A
%FFCACFA8FFCACFA8CFC9C9C9C8C2C9C2CACACFA8FFCACFA8FFCACFA8FFCA
%CFFFCFFFCFFFCFFFCFFFCFFFA8CAA8FF841913191319131960FFCFFFCFFF
%CFFFCFFFCFFFA8CBA2CBA2CBA2CBCFFFCFFFCFFFCFFFA7FF0D0E070E070E
%070E077EA7FFCFFFCFFFCFFFC8FEC6FEC6FEC6C69EC7A7FFCFFFCFFFCFFF
%CF85617E5A5A7E8561FFCFFFCFFFCFFFCFC9C2C9C2C9C2C9C9FFCFFFCFFF
%CFFFCFFFCFFFCFFFCFA8FFCACFA8FFCACFA8FFCACAA1A8A83B1219121912
%19123BA7A8CACFA8FFCACFA8FFCACAA2CBA2CBA2CBA2CACAFFCACFA8FFCF
%A8CA5A0707070E070D07075AA8A8FFCACFA8FFC8C6C6FEC6FEC6FEC6C6C6
%CECACFA8FFCACFCAAF606160858485606184CFCAFFCACFC9CAC2C8C2C9C2
%C8C2C9C9CFA8FFCACFA8FFCACFA8FFCACFFFCAFFCFFFCAFFCFFFCAFFCFA8
%A884131913190C19131913A87DA8CFFFCAFFCFFFCFCBA2C4A2A27DCAA2CB
%A2FFCAFFCFFFCAFFA8A80D0E070E070E070E07307DCFCFFFCFFFCACCC6FE
%C0FE9EFD04C6FEC7FFCFFFCAFFCFFF608561AFCFFFA8856085CFFFCAFFCF
%C9C2C9C2C9C2C9C2C9C2C9CAFFCAFFCFFFCAFFCFFFCAFFCFCACFA8FFCACF
%A8FFCACFA8FFA8A15913121912131219121959A77DCFCACFA8FFCACFA2CB
%A1C47DA2A2C4A2CAA8CFA8FFCACFA8CF530D070D0705010E0707077DCACF
%A8FFCACFC6C6C6C0C6A4A4C6C0FEC6C6A8FFCACFA8FFA8615AAFCACFA8FF
%84615AAFCACFA8FFCAC9C2C2C2A09AC2C2C8C9FFCACFA8FFCACFA8FFCACF
%A8FFFFCFFFCFFFCFFFCFFFCFFFCFFFCA5F1319131919191319135FA1A8CF
%FFCFFFCFFFCACBA2CBA2CBCACBA2CBA2CBCFFFCFFFCFFFCF5A07302F0E00
%290754070E7DFFCFFFCFFFC9CCC6FEC6FEC6FEC6FEC6FEC6CFFFFFCFFFCF
%AF618BCFFFA8FFCFAF618585FFCFFFCFCFC2C9C2C9A0C9C2C9C2C9CAFFCF
%FFCFFFCFFFCFFFCFFFCFCACFA8FFCACFA8FFCACFA8FFCAFF5F1912191219
%121912122EA8A8FFCACFA8FFCFCAA2CBA2CAA2CBA2CAA2CBA2CFCAFFCACF
%A8FF8407070E070E070E070707AFCFCFA8FFCACEC6FEFD07C6FEC6C6C9FF
%CACFCAFF846184FFA2A2A2FFA8616085CACFA8FFC2C2C2C9C2C9C2C9C2C8
%C2CACFCFA8FFCACFA8FFCACFA8FFFFCFFFCAFFCFFFCAFFCFFFCAFFCF8412
%191319121913191259CFFFCAFFCFFFCAFFCACBA2CBA2CBA2CBA2CBA2CBCF
%FFCAFFCFFFCFFF0D0E070E070E070E0736CFFFCFFFCAFFC9FEC6CDCECEC8
%CDC8CEC7FEC6CECAFFCFFFCA8561AFCACBCACBA8FF616184FFCFFFCACFC9
%C9C2C9C2C9C2C9C9CFCAFFCFFFCAFFCFFFCAFFCFFFCAA8FFCACFA8FFCACF
%A8FFCACFA8FF5F1312191213121912135FFFCACFA8FFCACFA8FFA8CAA2CA
%A8CAA2CAA8CFA8FFCACFA8FFCACFCA840707070D0707070EA8CFA8FFCACF
%A8CEC6C6A7FFCAFFA8FFCBCEC6C6C9FFA8FFCACF6061A8CAA2A2A2C4A885
%6085A8FFCACFA8FFC2C2C2C8C2C8C2C9CACFA8FFCACFA8FFCACFA8FFCACF
%FFCFFFCFFFCFFFCFFFCFFFCFFFCFAF193B5F603B603B193BAFCFFFCFFFCF
%FFCFFFCFFFCFFFCAFFCFCBCAFFCFFFCFFFCFFFCFFFCFFFCA0E070E070E07
%300DFFCFFFCFFFCFFFCFCCC8FFCFFFCFFFCFFFCFCEC6CFCFFFCFFFCFAF61
%FFA2CA7EC4A2FF856184FFCFFFCFFFCFC9C9CFC2C9CAFFCAFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFA8FFCACFA8FFCACFA8FFCACFA8FFCFAE84FFCAFFCAFF
%5FFFCAFFCACFA8FFCACFA8FFCACFA8CBCACFA8CACFCFA8FFCACFA8FFCACF
%CAFF5A300D300D0E2F7EA8CFA8FFCACFA8FFCAFFA8FFCACFA8FFCAFFA8CF
%CACFA8FFCACFA8AFCACAA2CBA8CFCAAF84CFCAFFCACFA8FFCAFFA8CAC9FF
%A8FFCACFA8FFCACFA8FFCACFA8FFCACFFFCAFFCFFFCAFFCFFFCAFFCFFFCA
%FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFCF7DFFCFA8A2FFCF
%FFCAFFCFFFCAFFCFFFCAFFA8A87E8484A8CFFFCFFFCAFFCFFFCAFFCFFFCA
%FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCFFFCFFFCAFFCFFFCAFFCFFFCAFFCF
%FFCAFFCFFFCFFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFCACFA8FFCACF
%A8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FF
%A8CAA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFCAFFCACFA8FFCACF
%A8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FF
%CACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACF
%A8FFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FF
%CACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACF
%A8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FF
%CACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACF
%A8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFFFCFFFCAFFCFFFCAFFCFFFCA
%FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCF
%FFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCA
%FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCF
%FFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAA8FFCACF
%A8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FF
%CACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACF
%A8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FF
%CACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACF
%A8FFCACFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFCFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FF
%CACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACF
%A8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FF
%CACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACF
%A8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFFFCAFFCFFFCAFFCFFFCA
%FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCF
%FFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCA
%FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCF
%FFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFCACF
%A8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FF
%CACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACF
%A8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FF
%CACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACF
%A8FFCACFA8FFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFCFFFCFCACFA8FFCACFA8FFCACFA8FFCACFA8FF
%CACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACF
%A8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FF
%CACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACF
%A8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFFFCFFFCAFFCFFFCA
%FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCF
%FFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCA
%FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCF
%FFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCA
%A8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FF
%CAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFF
%A8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FF
%CAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFF
%A8FFCAFFA8FFCAFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161356, 2017/09/07-01:11:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Basic RGB</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.1 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2020-03-24T17:49:23+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2020-03-24T17:49:23+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2020-03-24T17:49:23+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>156</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+ICQElDQ19QUk9GSUxFAAEBAAACMEFEQkUCEAAAbW50clJHQiBYWVogB88ABgAD&#xA;AAAAAAAAYWNzcEFQUEwAAAAAbm9uZQAAAAAAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1BREJFAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKY3BydAAAAPwAAAAy&#xA;ZGVzYwAAATAAAABrd3RwdAAAAZwAAAAUYmtwdAAAAbAAAAAUclRSQwAAAcQAAAAOZ1RSQwAAAdQA&#xA;AAAOYlRSQwAAAeQAAAAOclhZWgAAAfQAAAAUZ1hZWgAAAggAAAAUYlhZWgAAAhwAAAAUdGV4dAAA&#xA;AABDb3B5cmlnaHQgMTk5OSBBZG9iZSBTeXN0ZW1zIEluY29ycG9yYXRlZAAAAGRlc2MAAAAAAAAA&#xA;EUFkb2JlIFJHQiAoMTk5OCkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFhZWiAAAAAAAADzUQABAAAA&#xA;ARbMWFlaIAAAAAAAAAAAAAAAAAAAAABjdXJ2AAAAAAAAAAECMwAAY3VydgAAAAAAAAABAjMAAGN1&#xA;cnYAAAAAAAAAAQIzAABYWVogAAAAAAAAnBgAAE+lAAAE/FhZWiAAAAAAAAA0jQAAoCwAAA+VWFla&#xA;IAAAAAAAACYxAAAQLwAAvpz/7gAOQWRvYmUAZMAAAAAB/9sAhAAGBAQEBQQGBQUGCQYFBgkLCAYG&#xA;CAsMCgoLCgoMEAwMDAwMDBAMDg8QDw4MExMUFBMTHBsbGxwfHx8fHx8fHx8fAQcHBw0MDRgQEBga&#xA;FREVGh8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx//wAAR&#xA;CACcAQADAREAAhEBAxEB/8QBogAAAAcBAQEBAQAAAAAAAAAABAUDAgYBAAcICQoLAQACAgMBAQEB&#xA;AQAAAAAAAAABAAIDBAUGBwgJCgsQAAIBAwMCBAIGBwMEAgYCcwECAxEEAAUhEjFBUQYTYSJxgRQy&#xA;kaEHFbFCI8FS0eEzFmLwJHKC8SVDNFOSorJjc8I1RCeTo7M2F1RkdMPS4ggmgwkKGBmElEVGpLRW&#xA;01UoGvLj88TU5PRldYWVpbXF1eX1ZnaGlqa2xtbm9jdHV2d3h5ent8fX5/c4SFhoeIiYqLjI2Oj4&#xA;KTlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+hEAAgIBAgMFBQQFBgQIAwNtAQACEQMEIRIxQQVR&#xA;E2EiBnGBkTKhsfAUwdHhI0IVUmJy8TMkNEOCFpJTJaJjssIHc9I14kSDF1STCAkKGBkmNkUaJ2R0&#xA;VTfyo7PDKCnT4/OElKS0xNTk9GV1hZWltcXV5fVGVmZ2hpamtsbW5vZHV2d3h5ent8fX5/c4SFho&#xA;eIiYqLjI2Oj4OUlZaXmJmam5ydnp+So6SlpqeoqaqrrK2ur6/9oADAMBAAIRAxEAPwD0tmI3uxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxVLta1b9HwxCNVkurmVYLeNjxXk1SXdv2URFZj40oNyMIFsowlLkCWKaJ+ZDXu&#xA;rWllIkD29zO9ulxCJhIymP1ILlogsiQxS/YUPLUkjpuomYbNdm6LPMrZOxVI/MfnHRPL5hS/kYyz&#xA;VKQxLyfiP2iKigrtluPCZcnV9o9sYNIQJ2ZHoOdd/wCP1pD/AMri8r/74vP+Rcf/AFUyz8rLvH4+&#xA;Dqv9Fum/m5PlH/ilW0/NryrcXMcDC5gEh4+rKihFr/Nxdj+GJ0svJsxe1WllIAicb6kCvskWa5jP&#xA;SuxVZLLHEheRgqjqTlOo1OPDAzyERiOrKMTI0EKNXsC1PUpXuQQP1ZpY+1GhMq4/9ia+5vOkyVyR&#xA;gIYAg1B3BHTN9CYkAYmwXHIpvJIdiqA1bWbbTY0aUM7yV4IvU06k1+eSjG3L0uklmJrkF+manb6j&#xA;b+tDUUPF0bqDgIphqdNLFKijMDjuxVokAEk0A6nFUqtvNvlS6uxZ22tWE92x4rbx3MLyEjsEVi2X&#xA;y0uWIswkB7i0x1OImhKN+8JtlDc7FUk8zeYDpNunpRmWeUgKoFaAsFrSo8czdJphksy+kODrNTKF&#xA;RgLmb+QSHSfPdxNfCKZXlt+ckU0hiMQRomCn7QQtXl8JAIYDY5m5dBjI9F8Tr8Gvyg3OjHbuvdnG&#xA;aV3zeKuxV2KuxV2KuxVK/MGqNp9jzjp68p4R13p3LfRkoRsuboNMMs6P0hgksskrmSRi7tuzMak/&#xA;fl71EYiIobBBaJpOmaLqa6hY26xurh1hBIiX4AjcIx8CcgorQbkA9QMTu42XRY5giv2e78bvV7a4&#xA;juLeOeP7Eqhh9OYxDy2TGYSMT0VcWDx385f+UktP+YNf+TsmZ+m+j4/qfPPaz/Go/wDCx/upPO5L&#xA;lkMIELuJX4VUA8evxNvsu3X+OXg26CenMSQTG4i+YPyIsE/joVVWJLbEUNAfH3xtrniMREmvUL5g&#xA;9SN65HbkaNUeRBfTsEhkgjkIoXVWIHuK5qiH2PHLiiD3hUwM2O69O88z26OUVF4hh2Yj7X0Z5h7V&#xA;doHLqvDH0Y+neev6vh5u40OMRjxEc0uk0u6gc3Ek0vCd1kjQlOChUC8AAK0b7RrvXNNqtFmw44Sn&#xA;DhjMbHv6777H5bfFvx5YkkDdPdBnZo5ISahKMvyPXOx9jNZKUJ4Sdo0R8ef2/eXA10KIkm2du69K&#xA;b/zNpVo0sIl9e6i+F4og0gR+PILK6BliJG45kV7ZIRJbtPhOWYiGC615hEiyXuo3AjhgIVmOyR8i&#xA;B93xCp+/LoiuT1OPDDBHbYI3Q/MLafPwQiSGQCSSPuVO3JTgkAWGr0QzRvqORZvY6vpl+WW0uY5Z&#xA;EAaSJWHqID05J9pa9qjKSKeVnExkYnmEZgYvAv8AnIT8wLz68PKOnTGK3iRZNVZCQXaQckhNP2Qh&#xA;DEd6jwzquwdAOHxpDf8Ah/W8/wBras8XhjkOf4/H2PDwSDUdc6Z0r6X/ACD8+X2v6Nc6TqcxnvtK&#xA;4GK4c1eS3eoXkT1ZCtK+BGcZ25oo4picRUZff+16TsrVHJExlzj9z1bNE7Zjvm2waVILlN3U+kU7&#xA;nkfhp9ObXszNRMT73Tdr4DICQ58kjttGvJL2G2mjMPrE0Limy7tT6M2OTVQEDIG6dXj0UzMRkOG/&#xA;0c2egAAAdBsM5kvWgN4q7FXYq7FXYq7FWOedIHazgmAqsbkN7chsfwyzGd3b9kTAmR3hhFxaNNHI&#xA;nryRiRlYNGeLKFpVVNNg3Hf55a9BLcUrLGVd25MQ5B4mlBQU22rviknZ6LocLw6Tao4o3CpHhyPL&#xA;+OUS5vI62YllkR3o/IuK8t/NXS5L7zNotvGyo96otkZq0BMtKmnb95mbppVE+Tw3tPpjk1WIDnMC&#xA;P+y/48wGXR547W4ufUjaK2uls2Kknk7B2DLtuv7o5kg7gPKy08hGUrBEZCPz4uXl6Sq3ugyWkepN&#xA;JMpbTbtLN1UGjs3qfEp7AeieuIN15j9X62eXSmHHZ/u58B/2f/Evoa1VltoVYUZUUEe4Gao831zE&#xA;CIAHuCrgbGJTPzmkf+ZifvNc8N1WXxMsp/zpE/M29BAUAE/1iMNYOe6EMPvp+o56f7U4BLQyP8wx&#xA;I+dfcXU6OVZB5pdoT0vCP5kI/EHOT9j8nDqyP50CPtB/Q5utFw+Kf56e6h5hrUN/ojWelyBpolku&#xA;JfUjclJI7m6qJ5E3ImWSZRJy+EglkI+JMvib3dl2QaykeX6QotBCyujRqUlr6qkAhqih5Dvtkqel&#xA;JvYr6Ctab9K4raY+TV1DWJNNvuLx22n3L3JeYgMsdzY8UtI+PxMp9ZJ5Ofwq1FXlxqtc9njtVkGT&#xA;KZDlb0HKml8aeetQ+s+ePMNzLGJvUvbpIxIWBULIyRsODL8SKopWo9jnomjx1ggAa9MXjs2T97Mk&#xA;cVmXO9vkRy6dO+2KwWMEN3LdCrPNTmjGq7eA265bHTxjOUhdyYSzkxETVRevf8463dPzBugFWNbm&#xA;xmHprUKKSxuAoJPTj92ant6H+DjykPuLn9lSvOTVWD94L6XzjHpWMec9TaBbe1QHk7BywBJBrRSK&#xA;dO++XYZGNke52fZ/Z8M/qmLESCPeN/wGM6R5inW7juWjnPpzyRUnRgSFqHda1orAfC3fbLLIiYj+&#xA;J2ebQYtRuY8MoXR5eW3eHpgIIBHQ9MxXmiG8UOxV2KuxV2KuxVTnhinieGVQ8bijKe4xZwmYkEcw&#xA;wXT9Dm1M3htawra3ElvxuFZK8D1U0PIe42y8zp6PJ2jHHXEDuLRGkaQqeZX068iaQQQfWBKB+5Y8&#xA;lAWp3PU7U7fKolLbZp1OuJw8UNrNM2yl592KsT836Xe3fmLyxcwQNLDaXLm4dRUID6bBm8B+7O+Z&#xA;GGQEZX3PP9sabJk1GnlGJMYz38t4nf5FiVp5M1iXR5LZrR1mfXUMpYEf6PGjqZRyoClZDQjrl8sw&#xA;4rvo8/h7GyywGBieI5wD/VAI4t+nq5q+reSNfuRrHG3r9f1iOWIclP7ger+9O/2f3w98Y5oivKP6&#xA;v1M9X2JqZ+LUfrzgj+r+89Xu9Y83qWYD3rsVY/FpNybsK6UiDVL7UKg/xzy7T+zOoOqEJRrGJby6&#xA;cN/pdvLVR4LB3Tu5h9a3ki6F1IB9+2ei6/TePgnj/nRI+PR1mOfDIFKNMsLuK9V5E4qlak96gjbO&#xA;F9n+xtVi1kZ5IcMYXd+YI27+bsNTnhKFA808z0Z1aVan5c0a9uv0lPYwz6nFA8Fvcso9RUap4hu3&#xA;xHbwqfE5ISIbcE+DIJcqY3F5V1Oa2jnTiOYqY3qjDem4Iy3jD0Uu0sUZGJ6K8Xl26sbuxlmCTh5l&#xA;V41BKqPEnbBx21S18csJiNiop9oflrRNDFyNLthbi8kE1x8bvVlRY1A5s3FERFVEWiqBQAZUZE83&#xA;nAKTTAl4Z5o/5x51LVPOFzqNlqVvDpOoXD3NwJA/rxGVy8ixoq8HFT8NWX+vT6bt6MMIjKJ44ivI&#xA;uiz9kylkJBHCTaSW/wDzjX5obVmguNQtY9LBNL1ObyFd+NISF+LpUc6DxOZMvaHFwWIni7v2tA7H&#xA;ycVEiu/9jMvyp/JfVPKevS6zq17BNKkbQ2sNqXZSJPtM7OsdKAbAA/PNd2p2xDPj4IA+duZoOzpY&#xA;p8UiPh+A9czQO4Y75ytPUt7WWOJpLgzLAoTiNpO7ciuwI7b+2WYy7TszOYEjpV/JKY/L1xb6xY2l&#xA;2nqQ3PqMZYiCq+kvLi3Li3xdNgclx7bOfPtESxylAGx3+bOMpecdirsVdirsVdirsVdiqyOKKPl6&#xA;aBObF34gCrHqT74spTMuZ5O9OP1DJxHqEcS9Byp1pXwxXiNVey/Fi7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FVrIjU5AGhqK9iO+KQSOTiikqxAJXdT4VFNsVBIXYodirsVdirsVd&#xA;irsVaJABJNANyT4ZGUxEWTQCQLWCeE8KSL+8+xuN/llEdbhlw1OPr+ncer3d7I45b7cmhc25Dn1F&#xA;pH9s1G3zyA7Q05Ejxx9H1b8vf+OeyfClttzXerHyVea8mFVWoqR4jLhqMfEI8UeKQsCxZHeO8MeE&#xA;86X5cxWySJGjSSMFRRVmOwAwxiSaCJSAFnkkFz5wtUcrBA0yj9stwB+WzHNnj7LkR6jX2uoy9sQB&#xA;qI4vsRGn+aLK6kWKRTbytsvI1Unw5bfiMqz9nzgLHqDdp+1MeQ0fSU5zAdk7FXj/AJv/ADo1TTvM&#xA;s+naVBbva2chiczBmeV4zSSnFloA2w6+PtmPPMQdnvOzPZXDl08Z5ZSE5ixVbDp7/N6b5b1y313Q&#xA;7PVoFMcd0nIxncqyko6170ZSK5dGVi3j+0NHLTZ5YpbmJ/aPsTPJOG7FXYqx7zN530TQI3WaUT3y&#xA;042UZBk3oRy/kFDXfLceEy9zqO0e2sGlBBPFk/mjn8e74ofy/wDmN5c1gwweqbS+mbgtrMCKsegV&#xA;wOBr0G9fbDPBKPmGrQ+0Gn1FRJ4Mh2o/r5e7kT3Mpyl3jsVU5p4IE5zSLEnTk7BR95yMpiPM0zhC&#xA;UjUQSxHzj5w1K0SKDy19VvL6qPKJXQpxaRU4CssC8iCz/b2C7/aByMdRhvecfmGyWkz1YhL/AEpT&#xA;zyvqd7qeh215fRxRXrhhcRQtyjDK5X4SamhArlnFE/SbDVKEo7SFFNsWKnNMkScnO3YdzizhAyNB&#xA;DDVI67oaeOGnI/KnvRaOrqGU1U9DgcaUSDRXYsXYq7FXYq7FXYqkOuO31tVqQAg2+ZNc8z9sMsvz&#xA;YF7CA+0m3baKI4PilH123Fz9W9dRcxxib0eQDiPkRz49ePIdc5iIyUJC9jQPnzofe5e3JYNQsvVh&#xA;hE6GS5DmFAwPMRU50p141FcZYckbsEVV/HlaiQKZac7m/gJJNDQfKlKZtOw8sjrcW5518O5p1AHh&#xA;lk2evukY35wu3WOC1U0WSrye/HoM23ZeIEmXc6XtjKQBAdWI3F1bW0ZluJkhjBoXkYKtT0FTTNzb&#xA;oQCVQMp6EHYHbwPQ4oZ7oN291pcMkhrItUYnvxNAfuzmtbjEMpA5PW6DKZ4gTzTHMVzHyXqs8suq&#xA;3Uzk+oZpW3JqCzlj19zmvJ3fc9PADHED+aPuZ75E/NqDy7oaaTdae9wkLu0U0TgGjtyoysPEneuW&#xA;wy8Ip5jtn2ZOrzHLGfCSBsR3MkH5+aNXfS7mnf40yzxx3Oo/0FZf9Uj8i9H0fVbPVtMttSsyWtrp&#xA;BJHyFGFeoYb7g7HLgbFvJarTTwZJY5/VE0hPNWvpoOiT6iUEkiUSGImgaRzQD5DqctxQ4jTp+1Ne&#xA;NLgOTmeQHn+N3z/qmoy399c6hclVkuJGmlpUKvI1IFSaAfPNkBQp8rzZZZckpn6pEn5qVrcvBPFc&#xA;wMBJC4eNtjRkNR9xGNMfXjn/ADZRPyIe4fl/5xn8yWVwLqJY7yzZBK0dQjrJXiQCSQfgNcwM2IR5&#xA;PpHYXa0tZCQmKnCuXI3dfduyzKHfPM/zElk/ToEjUiSFSgJ2ANan785ntck5q8nsuwgPAsd5YqJ4&#xA;S7oJFLx09RQQSvLcch2rmr4S7kGzQZt+WjN9cvVqeJjQkdqhj/XN12KfVL3PPe0I9ET5vQM6B5VA&#xA;ak8bKoDfGpoV79MIczTRIS/JOWmununoKvIFqn4e+RLgagHitFYHHdirsVdirsVdiqS6/Aecc46E&#xA;cD8xuM8+9s9IROGYciOE/DcfOz8nZ6CexikM9ja3AmEyc1uIvQmQk8WjNfhK1p+0c4zHnnAgxNGJ&#xA;seR/AdhLePCeS210uwtI4o7eERpAXMQBOxlYs53O/JjU1yefVZM0jOcjKUuZ9yMfojwx2CdaJAXv&#xA;PU/ZiBJ+Z2GdB7J6Q5NXx/w4xfxOw/X8HE1k6hXeyDPUXUMW84qGnt+IJdUZnoNgtQAfvzc9lmgf&#xA;e6HtgXKNc6LCda8u6Nrenz6fqlsLqzuWR5oWZ1BaMgqQVZSKcR0zZnGDd9XVx1Exw1Q4eWw69+2/&#xA;xvu5JhFAocCNfiYKiqvgPsgD6cNAbsfElKIh0B22F2a68zyZz5ZIXTPRKlJYJHSZT15Vr/HNB2h/&#xA;eX0IFPSdmbYuHrEkH3ptmC7B80/mB5flsvOGrQ2kTyWwuU4lRWkl1H66xgDrSpA+WYWSNEvsHYmu&#xA;GTSYzM1LhPyieG2LlHD8CpD1pxpvXwplbubFWjdN0TVNR1KHTbWBjdzsERH+DcqX3LUA+EVwiJJp&#xA;x9Rq8eLGckj6Y/Hy+99NeU9FfRPLlhpUjiSS1j4yOv2S7Es1K9qttmdCNCnx3tPVjUaieUChIpF+&#xA;ZWnSarZw6ejlDHFPfR0rQyQNFEA1P2OFw5Ph17ZkYZ8Jt53tfQ/msBxg1LmPeHl2r+TPMmkRLPf2&#xA;RiidxGsgeNwWatB8DNmdDJGRoF841fZeo08RLLHhB8wfuJb0nyV5l1aF5rCz9SKKRoZGMkScZFAL&#xA;KVdlbavhjLJGJ3KdL2VqdREyxx4gDXMDf4kd70L8udIm0K/ksZpFa4vEuWuEU1UGyeBE4VA/5am5&#xA;H5Zh58nFye87C7KOkgeIgznzry5D7S9CzHd680/MeMHXEDqCrW6Gh3BHJs5rtexmB/o/rey7Al+4&#xA;2/nH9DFDDCWdjGvKQAOaCrBegPjSuaviLuRsbHNnn5ZwH/T5yNv3aKff4if4ZvOxY/Ufc817Qz+i&#xA;PvP3M6zevMpVrECyhl58ealG4kBhUdR9+EOw0kq6JYdOgM083KTncCMOObcQYiSpVa0U+NOtBknJ&#xA;iaNp5psaiMtUFm8OoHvkS4GpkbpGYHFdirsVdirsVdiq1lVqcgDxNRXsfHITxxlXEAaNjyPekEho&#xA;RRr0UCpqaDuchHTY48ogdeXekzJ6uaKNlKsoKkUIpgnpsc4mMogg+SiZHVsIgYsAAxABPsOmTjhh&#xA;GRkBuQB8By+9BkSKXZYhSa2gab1mQGTgY+R/kJqRTpkxkkBV7XbA4omXERvVfBLLjytpUz8wHhr1&#xA;EZAH3ENmXDtHLEVsfe4OTsvDI3uPciLDQ9OsWDxIWlHSRzyYfLsPoyvNrMmTYnZu0+hx4jYG/eUZ&#xA;HDFGXMahTI3NyO7UpX8Mx5TJq+jkxgI3XVUyLJjV75KgudfGr+vxf63bXjRlKittC8PGtR9rmDXt&#xA;TKzDe3cYe1zDB4NbcEo8/wCdIS/QfmtPke1N49z67DlqyawFCgDmkXp+mfYklq48H3p/liXAI1/k&#xA;Ti+Zu/0NzeR7STzWvmMXDi4EyTNDQcfhtzb0+n4T9Hvjwb2sO2JDS/l+EcPCRf8AncX62TZY6ZJv&#xA;MnlHQfMcVvHq0DS/VZPVt3jlkhdTUEjlEyFlbiOStVT4bDJRkRyQYgpje2FnfRJFdxLNGkiSqrdA&#xA;8Z5KfoOCMiOTVn08MoAmLAIPxC2x0yxsPXFpEIhczNcTAEkGVwAzUJNK8egwykTzRg02PFxcArik&#xA;ZH3lBaZ5X0vT9WvdWh9V72+J9R5ZGdVVm5FY16KC2JkSKbgE3yKUq1jy7Yarc20t2vJYOYZBUFww&#xA;2BZSD8J3zE1GjhlkDLo52l188EZCP8VfBQTyT5YUgiyqR4ySn8C2QHZuAfw/af1tp7X1J/i+wfqR&#xA;+kabFpunw2cZDCMfE4AXkx6sQMyNPhGKAiOjiarUHNkMz1RuXOOhru0EwBWiuO/j88ILfhzcPPkh&#xA;BptwTQ8QPGuG3JOpij7eFYYwg3Pc+JyLh5J8RtVxa3Yq7FXYq7FXYq7FXYq7FXYq7FXYqsklijp6&#xA;jqlenIgfrwiJPJICVaL5q0jV7u8tLWUC4s55oDDIVV5BbOIpZY0ryMSzEx8qU5A4TEhiCnGRS7FU&#xA;j1nzr5b0V3GpXRgSI8bif05GiiPptLSSRVKKeC8qVqARX7S1kIEoMgE2e8tY7RrySVEtEjMzzsQq&#xA;CMLyLljsAF3rkaSgNI8z6HrB/wBx9z61RyQlJIw60B5RmRVEi0ZTVajceIwmJCAbTXAl2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVhXlaO3sbi+1q8uZJZLvT7XUb65lPIgTGZvTUAVE&#xA;UKx0jQdKt3OWHfYNOTLHHEzkfSBZeeeYvzC8w6wzxev9WsiGT0IAYw6Go/efEzGqnccqZnQwxi+a&#xA;a/tzUajYy4Yd0dr9++/mLryTXyP+Yms2+oW2m6hN9as7iRIlknb44uTUrz6kb9G/DIZcIIsc3N7G&#xA;7dzY8kcczxQkQPVzjZ53+v4U9jzAfRHYqp3E6QQvM/2UFT/TJRiZGgkCzTELq6luZmlkNSeg7AeA&#xA;zaQgIig5sYgClfylZ6Pp95dm3tIre5v3Ek06IFZ2A6MR27/Mk9TmNqce1hoy4xzDLMwmhDaneCx0&#xA;66vSvMWsMkxQbV9NS1PwwgKXifn38wZPLWvW3lPVdMS90KOGObVG4cZr55laSVgzfAYpJ95Bx+Ih&#xA;lJpUZv8AQ9lRz4eMSqd/Ae/q6bVdoyxZeEx9A+33f2dCh7j/AJyXE4eCTy0j2MqmOWFroksjAqQf&#xA;3NNx2pmSPZsV9e/9X9rT/LR/mfb+xf5E/MW61iW/0ux0uC00rRbSTUtMkRKXEbWaosMcsilUYGIe&#xA;gSFDFNiTuTjdodlwwYhLiJmTXl8G/R6+eXIY0BGvj8/2Pes593CnPPHDGZJDRRmNq9Xj0+M5MhqI&#xA;ZwgZGglUnmDc+nDt2LH+Azi83tqb/d49vM/oH6y58dB3lhHnObzdNdx3mlXF2pRhKPqswjWJImjP&#xA;oiBuUcrTfHV5I5KDoBtXJ0XtlGW2WAHxPz5dPe15NAf4SzHybfeYbvTW/TnpNdxekrSwxNCrMYEe&#xA;QcWklDcJGK8lND2ApnV6TWYtTjGTEbiXDljlA1Lmn+ZLFLdZ1mLToht6k7/3cft4n2zL0ulOU90Q&#xA;4Ws1owjvkejC3896/wAiVtpRIIpJRCI09M8GIEfPf4n6qK5s/wAlhr6T9v4+x1Z1mfjrihzHWNb+&#xA;fd377dWY6HraajGyOAlygqyjoR4jNbq9IcRsbxLstFrRmFHaQTXMNz0Bqep/UTFWPmJCa70oBT+u&#xA;Y2o1Hh1tduXptN4t71SVJ5inF40rKTbkUENRtTvWmYQ10uO/4e5zjoI8Ffxd6b6XfvewNKyBKOVA&#xA;BrtQH+OZ2nzHJGyHX6rAMcqBvZG5kOM7FXYq7FXYq7FXln5j2moaXpPpKrfVZZjbw3SMpVraRjcC&#xA;3mjJDBopEpEygjhUEgk1ytPvJ5v2oyGOkr+dID/ff715dcwmWHhHI8LkgmRSCdj2BFACBTM189hM&#xA;Ag1a92RUZmPBQCWepFAO9e1MWIsmnsfkq7vLu/sp7cslvPbfWLhFMohe3kjT0ZDDI8npSPNz9M9W&#xA;jUlv2c1uQAWH2DTZDOEZHYmIP2M+ypyEk8yXBCRW46N8bfRsMy9LHmXIwDqxe4t7+SNRDd+i6zBy&#xA;wjVuUPL4oyD34nZh0NOu4OaLcmdbcKIiE0crvzrVg0QAoVoAOtTXcVwV3qar7/x/azWzn9e1im7u&#xA;oJ+ffNXkjwyIcCQo068tIbyzntJqmG4jeKQA0PF1Kmh+RyALF8i/mVqWr6v521A6qwivLMC1ZZCQ&#xA;g+qpRglAdpHDMniW7Vzvey8ccenjwjnv8z+h5LWSOTNKzVX9g/T95YUst2bxo2iUWwFVl5bk0G3G&#xA;nufuzLjkyHKYmPorm0yxwGMS4vUTyZl+Xv1+LznaWGnSieTUUksJHi5iMpdQlHZg6oxWLlzNR+zt&#xA;mH2oBLTSMhVb/a5GjHDqAIm/dfUeYH3PsPODerSfzBIaQxg7GrEfKgGcJ7a5jWPH09RP2AfpdjoI&#xA;8yx25gvpI7lYLkQPIo+rSemH9NwOrAn41Jptt8++cNCUARYvv35j9H2+52UqrbmqRxTJIC0pkQRh&#xA;SGA5Fh+2StF37gLkTIEct7/H4tO1eafeX3NJk7Diw+moOd37FZjWWHT0n7wf0Os18eRTjO7dcwue&#xA;N9X8wvFypHzK1HaOPbb550EJDBgB6/pLzM4nUakjpf2BPYYdAlLWEcKGgIrxFTTrR+tc1csuYesk&#xA;/jyegOgxiFcIpjthz0/X0ir9iX0ifFWPGv41zb5qy4CfK3m8F4dQB3SpnOc49UwnVB6c04gc3BSv&#xA;pknctStKkjvtnP5QBMgGw9Lp94ixwoIy3n1koIF+relyEpf4/Vr9gpSlKb8uWQoV5tnXyTPQnX65&#xA;A07NExp8K7jmduJIPTL9KQMgsuPrQeA8O/6mYZvHnnYq7FXYq7FXYqxD80NH1DVPLapZR+rJbTi4&#xA;kQEA+mkcgalep+Lpl+nkBLd5/wBpdLkzaaoC+GXEfcBJ5dD5C83T20F1DpzSQXCLLC6vEao4DKac&#xA;qioPfMvxo8reKh2Jq5REhC4yFjccj8VG48heZnni02fTm9W+SQRxMyAOiL+8q3KgADdzh8WNXaB2&#xA;Vqo5Ix4CJysx5fw7+57h5W0aDRvL9jp8UC27QwRidF3rKEAcs2/I1HWua/JK5EvpuihKGGEZ/UIx&#xA;v31um2QclA6jpUV6VYuUkUUDAVFPcZdizGDZDJwpRBobTSzxiYD0W4149e/jmVLUUAa5txy0AvsN&#xA;Ejn9UySMPSkaIhQN+NN965HJqDGqHMInlpPoIY4IlijFEQUA65hSkSbLjk2bVMCHzf8A85CeT0sv&#xA;M8GsWVWOrxSS3MCqTwa1CK8lRtxZXWvvU987HsHV8WIwl/By+LzXa2DgyCQ/i/Q8kCOW4BSX/lA3&#xA;+7N/bqbFW9n/AOcePJ8beYLzWL9WS602CCSyhIBUrfxvxm5An/dakU999xnOdvav92IR5SJv/N6f&#xA;N3PZOC8hkf4QK/zv2PoTOSeiSrV7O4uJ4fSWooQT2G/fOK9p+y8+qzY/CjexF9Bv1c/SZowibKJX&#xA;SrIRqrxhmUAFtwSfHY5tsfs3oxjjGcBKQAs7iz37FpOqnZILT6RYlGCx8WIIDVJofHc5HL7MaIwI&#xA;jDhkRsbka89yo1eS9yh9Hs54JpvVXjQAA9j32Oaz2X7Lz6bNl8WPDsB5H3Hq3avNGcRSa52jgMP0&#xA;+3vLQ6pc+k3qxIY0B2qzt2J+XXN3q8kZRgB13+QdP2Rp5DPIy26b+9CWk+oC++C3+FHiMDh+TMCf&#xA;jqtBx4fM1yqf07vTkA2CdkXq1pcHzIOEbESPGyEA9KAE/eDmRpssfy+55AvG6vDL81sOZDMM0L0a&#xA;Raxo/J4jZwfExb1CDQb0p1+nNbqtLZHAHaaTV0Dxn3JX+jLsXi2jKFlbcVO1PGozD/Lz4+Hq535i&#xA;HBx3snmj6VJaNIZ1RjUek43I613I2zY6XTGBPFTrNXqhMDhvzTXM1wHYq7FXYq7FXYq7FWgABQbA&#xA;dBireKuxV2KuxVDW1jHBc3NwryM10ysyMxKrxFPgXtXvkjIkAdySXWdjBaev6Rc/WJXnk5uz/G/X&#xA;jyJ4rtso2GMpEqTaJyKHYqhNS0rTtTtpLa/t0uYJUaKRHFao5BZa9aEqPuyzHllA3E0WE8cZipC0&#xA;sfyP5Ze/a/azBumu0vi/JqeskPoDatOPD9nplw1uXh4b2qvhdtR0uO7re7TWw06x0+1jtLGBLe2h&#xA;UJFFGOKqoJIAHhuconklM3I2S3QgIigKCJyDJ2KuxV2KuxV2KuxVoKoNQADjat4q7FXYq1QVr38c&#xA;Ut4odirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdiq791/lfhh2Ru791/lfhjsu7v3X+V+GOy7u/df5X4Y7Lu791/lfhjsu7v3&#xA;X+V+GOy7u/df5X4Y7Lu791/lfhjsu7v3X+V+GOy7u/df5X4Y7Lu791/lfhjsu7v3X+V+GOy7u/df&#xA;5X4Y7Lu791/lfhjsu7v3X+V+GOy7u/df5X4Y7Lu791/lfhjsu7v3X+V+GOy7u/df5X4Y7Lu791/l&#xA;fhjsu7v3X+V+GOy7u/df5X4Y7Lu791/lfhjsu7v3X+V+GOy7u/df5X4Y7Lu791/lfhjsu7v3X+V+&#xA;GOy7u/df5X4Y7Lu791/lfhjsu7v3X+V+GOy7u/df5X4Y7Lu791/lfhjsu7//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:b59b073d-51f6-b24f-9a1e-9d7bca8e3732</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:b59b073d-51f6-b24f-9a1e-9d7bca8e3732</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:49c70c96-ae45-4636-8ac7-fbae6345cf31</stRef:instanceID>
            <stRef:documentID>xmp.did:82b07ebc-6d94-b043-b43e-24a4e368d4a1</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:82b07ebc-6d94-b043-b43e-24a4e368d4a1</stEvt:instanceID>
                  <stEvt:when>2020-03-24T13:06+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:b59b073d-51f6-b24f-9a1e-9d7bca8e3732</stEvt:instanceID>
                  <stEvt:when>2020-03-24T17:49:23+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>2800.000000</stDim:w>
            <stDim:h>1700.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Cold</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=56 M=0 Y=20 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>101</xmpG:red>
                           <xmpG:green>200</xmpG:green>
                           <xmpG:blue>208</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=51 M=43 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>131</xmpG:red>
                           <xmpG:green>139</xmpG:green>
                           <xmpG:blue>197</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=26 M=41 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>186</xmpG:red>
                           <xmpG:green>155</xmpG:green>
                           <xmpG:blue>201</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -1700 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1700 li
2800 1700 li
2800 0 li
cp
clp
2800 1700 mo
0 1700 li
0 0 li
2800 0 li
2800 1700 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.964706 .933333 .87451 rgb
f
2522.5 1292.19 mo
2515.58 1286.85 2507.5 1282.6 2499.77 1278.57 cv
2499.54 1278.45 2499.31 1278.38 2499.08 1278.34 cv
2499.06 1276.21 2498.98 1274.09 2498.83 1271.96 cv
2504.85 1266.91 2510.88 1261.86 2516.89 1256.79 cv
2522.34 1252.2 2525.93 1247.83 2523.44 1240.52 cv
2521.2 1233.96 2518.03 1228.85 2510.72 1227.93 cv
2502.28 1226.86 2493.42 1227.24 2484.92 1227.68 cv
2482.77 1224.16 2480.39 1220.79 2477.82 1217.59 cv
2479.97 1210.55 2482.13 1203.52 2484.27 1196.48 cv
2486.34 1189.66 2486.98 1184.04 2480.91 1179.26 cv
2475.46 1174.97 2470.03 1172.42 2463.4 1175.62 cv
2455.76 1179.3 2448.56 1184.42 2441.69 1189.39 cv
2436.21 1186.83 2430.49 1184.75 2424.61 1183.19 cv
2422.15 1176.97 2419.68 1170.75 2417.2 1164.53 cv
2414.56 1157.91 2411.54 1153.13 2403.82 1153.18 cv
2396.89 1153.24 2391.05 1154.64 2387.87 1161.28 cv
2384.8 1167.69 2382.6 1174.7 2380.64 1181.61 cv
2380.61 1181.62 2380.57 1181.62 2380.54 1181.63 cv
2379.68 1181.79 2379.21 1182.32 2379.05 1182.94 cv
2371.58 1184.59 2364.32 1187.08 2357.43 1190.34 cv
2353.46 1187.31 2349.49 1184.28 2345.51 1181.26 cv
2339.84 1176.95 2334.79 1174.41 2328.2 1178.44 cv
2322.29 1182.06 2318.01 1186.27 2318.71 1193.6 cv
2319.44 1201.31 2321.42 1209.08 2323.5 1216.59 cv
2320.57 1220.13 2317.88 1223.91 2315.46 1227.9 cv
2307.58 1228.21 2299.71 1228.51 2291.83 1228.83 cv
2284.71 1229.11 2279.19 1230.37 2276.68 1237.67 cv
2274.43 1244.23 2273.81 1250.2 2279.01 1255.41 cv
2285.2 1261.59 2292.67 1266.84 2299.82 1271.82 cv
2300.26 1272.13 2300.72 1272.24 2301.16 1272.23 cv
2300.81 1276.71 2300.75 1281.21 2301.02 1285.7 cv
2295.33 1290.5 2289.64 1295.28 2283.96 1300.08 cv
2278.51 1304.68 2274.93 1309.07 2277.43 1316.37 cv
2279.68 1322.93 2282.86 1328.03 2290.16 1328.94 cv
2298.09 1329.93 2306.38 1329.64 2314.39 1329.23 cv
2317.12 1333.9 2320.23 1338.36 2323.66 1342.55 cv
2322.23 1349.64 2320.8 1356.73 2319.39 1363.83 cv
2318 1370.82 2317.92 1376.48 2324.43 1380.63 cv
2330.27 1384.36 2335.94 1386.37 2342.22 1382.53 cv
2348.17 1378.9 2353.73 1374.33 2359.05 1369.69 cv
2367.99 1373.69 2377.45 1376.29 2387.08 1377.48 cv
2389.84 1382.84 2392.6 1388.19 2395.37 1393.54 cv
2398.65 1399.87 2402.13 1404.33 2409.8 1403.51 cv
2416.7 1402.78 2422.37 1400.81 2424.88 1393.89 cv
2427.24 1387.39 2428.72 1380.41 2429.97 1373.53 cv
2438.67 1370.78 2447.09 1366.84 2454.94 1361.67 cv
2454.97 1361.65 2455 1361.63 2455.03 1361.61 cv
2459.68 1364.48 2464.32 1367.35 2468.98 1370.21 cv
2475.05 1373.94 2480.33 1375.97 2486.48 1371.31 cv
2492.01 1367.13 2495.86 1362.51 2494.44 1355.29 cv
2492.75 1346.7 2489.47 1338.18 2486.31 1330.06 cv
2486.2 1329.77 2486.04 1329.53 2485.85 1329.33 cv
2486.82 1327.69 2487.73 1326.03 2488.59 1324.33 cv
2496.79 1322.95 2504.98 1321.58 2513.17 1320.19 cv
2520.2 1319 2525.51 1317.05 2527.07 1309.49 cv
2528.47 1302.7 2528.33 1296.69 2522.5 1292.19 cv
cp
1 .701961 .486275 rgb
f
2359.64 1265.55 mo
2353.96 1266.16 2354.91 1274.99 2360.59 1274.37 cv
2366.27 1273.76 2365.33 1264.93 2359.64 1265.55 cv
cp
.0117647 .0470588 .105882 rgb
f
2449.65 1262.01 mo
2443.56 1262.67 2444.57 1272.13 2450.67 1271.47 cv
2456.76 1270.82 2455.74 1261.36 2449.65 1262.01 cv
cp
f
2415.82 1268.76 mo
2415.66 1266.95 2412.81 1266.93 2412.97 1268.76 cv
2413.38 1273.58 2413.73 1284.38 2406.06 1283.72 cv
2399.66 1283.17 2399.91 1271.17 2399.68 1266.81 cv
2399.59 1264.98 2396.74 1264.97 2396.83 1266.81 cv
2397.16 1273.06 2397.25 1286.13 2406.06 1286.57 cv
2415.57 1287.05 2416.39 1275.42 2415.82 1268.76 cv
cp
f
2360.95 1279.56 mo
2357.15 1279.56 2354.06 1281.34 2354.06 1283.53 cv
2354.06 1285.73 2357.15 1287.5 2360.95 1287.5 cv
2364.75 1287.5 2367.83 1285.73 2367.83 1283.53 cv
2367.83 1281.34 2364.75 1279.56 2360.95 1279.56 cv
cp
1 .121569 .219608 rgb
f
2452.44 1276.51 mo
2448.64 1276.51 2445.56 1278.29 2445.56 1280.48 cv
2445.56 1282.68 2448.64 1284.46 2452.44 1284.46 cv
2456.25 1284.46 2459.33 1282.68 2459.33 1280.48 cv
2459.33 1278.29 2456.25 1276.51 2452.44 1276.51 cv
cp
f
964.935 444.708 mo
964.993 438.299 964.664 431.865 964.241 425.436 cv
964.167 422.32 964.093 419.205 963.987 416.09 cv
963.396 398.802 962.276 381.538 960.684 364.314 cv
960.444 355.257 960.378 345.584 956.958 337.417 cv
953.386 328.888 945.674 324.308 936.869 322.588 cv
926.174 320.5 914.832 320.81 903.987 320.543 cv
878.104 319.907 852.208 320.329 826.336 321.203 cv
813.104 321.65 799.877 322.217 786.652 322.821 cv
776.049 323.306 764.078 322.442 753.805 325.555 cv
743.288 328.742 738.508 337.449 737.086 347.829 cv
736.344 353.246 735.944 358.746 735.736 364.266 cv
735.583 364.723 735.499 365.236 735.513 365.812 cv
735.539 366.884 735.574 367.955 735.601 369.027 cv
735.482 375.407 735.577 381.792 735.698 388.089 cv
735.911 399.098 736.521 410.085 737.378 421.056 cv
738.821 454.4 740.841 487.719 743.466 520.993 cv
744.507 534.189 745.643 547.379 746.87 560.561 cv
747.43 566.578 748.01 572.593 748.609 578.607 cv
749.11 583.639 748.796 589.928 751.421 594.466 cv
753.582 598.202 758.053 600.539 762.295 599.076 cv
763.854 598.538 765.07 597.604 766.017 596.438 cv
767.288 595.37 768.283 593.89 768.81 592.069 cv
769.729 588.885 769.547 585.362 769.678 582.084 cv
769.872 577.23 770.048 572.376 770.208 567.521 cv
770.498 558.668 770.732 549.813 770.907 540.957 cv
770.972 537.682 771.019 534.407 771.067 531.131 cv
771.621 515.94 772.175 500.749 772.73 485.557 cv
780.74 486.265 788.761 486.797 796.789 487.171 cv
796.098 503.103 795.451 519.038 795.213 534.983 cv
794.951 552.633 794.545 570.737 796.475 588.311 cv
797.117 594.157 799.597 600.345 805.921 601.832 cv
811.779 603.21 815.918 598.664 817.467 593.5 cv
819.781 585.786 820.169 577.015 821.08 569.03 cv
822.072 560.333 822.815 551.609 823.312 542.87 cv
824.352 524.539 824.258 506.167 823.133 487.846 cv
829.837 487.882 836.543 487.812 843.25 487.66 cv
842.732 503.238 842.508 518.824 842.643 534.411 cv
842.794 551.934 842.695 569.792 844.377 587.247 cv
844.89 592.564 847.778 597.898 853.964 597.008 cv
861.007 595.994 862.899 588.798 863.937 582.85 cv
866.868 566.038 868.431 549.002 869.257 531.967 cv
869.991 516.853 870.135 501.722 870.146 486.592 cv
876.889 486.212 883.629 485.755 890.363 485.226 cv
889.555 501 889.036 516.788 888.867 532.582 cv
888.771 541.476 888.778 550.372 888.889 559.266 cv
888.987 567.18 888.27 575.813 889.727 583.612 cv
890.792 589.316 895.355 594.938 901.746 593.521 cv
908.356 592.055 910.589 585.376 911.315 579.426 cv
913.38 562.513 914.4 545.399 915.07 528.379 cv
915.665 513.26 915.791 498.129 915.479 483.003 cv
921.703 482.387 927.919 481.702 934.114 480.893 cv
934.742 480.811 935.37 480.721 935.997 480.626 cv
935.356 496.418 934.891 512.216 934.615 528.019 cv
934.436 538.328 934.333 548.638 934.31 558.948 cv
934.298 563.817 934.304 568.686 934.328 573.555 cv
934.351 578.18 933.593 583.662 935.195 588.086 cv
935.838 589.86 936.937 591.227 938.244 592.163 cv
939.117 593.651 940.776 594.63 942.937 594.025 cv
955.426 590.532 955.377 573.749 956.75 563.425 cv
958.914 547.159 960.63 530.833 961.89 514.473 cv
963.479 493.85 964.339 473.171 964.48 452.487 cv
964.784 449.889 964.912 447.272 964.935 444.708 cv
cp
0 .694118 .54902 rgb
f
798.073 403.129 mo
791.779 403.811 792.827 413.593 799.132 412.911 cv
805.426 412.229 804.378 402.447 798.073 403.129 cv
cp
.0117647 .0470588 .105882 rgb
f
897.83 399.215 mo
891.084 399.945 892.208 410.43 898.964 409.699 cv
905.71 408.969 904.587 398.484 897.83 399.215 cv
cp
f
860.334 406.69 mo
860.161 404.682 857.001 404.663 857.176 406.69 cv
857.637 412.03 858.027 424.006 849.521 423.274 cv
842.434 422.665 842.706 409.364 842.455 404.528 cv
842.351 402.506 839.192 402.494 839.298 404.528 cv
839.656 411.453 839.764 425.939 849.521 426.432 cv
860.057 426.964 860.971 414.077 860.334 406.69 cv
cp
f
799.523 418.661 mo
795.309 418.661 791.893 420.632 791.893 423.063 cv
791.893 425.495 795.309 427.466 799.523 427.466 cv
803.738 427.466 807.154 425.495 807.154 423.063 cv
807.154 420.632 803.738 418.661 799.523 418.661 cv
cp
1 .121569 .219608 rgb
f
900.929 415.281 mo
896.715 415.281 893.298 417.252 893.298 419.684 cv
893.298 422.116 896.715 424.086 900.929 424.086 cv
905.144 424.086 908.56 422.116 908.56 419.684 cv
908.56 417.252 905.144 415.281 900.929 415.281 cv
cp
f
1373.61 528.856 mo
1372.16 518.06 1370.71 507.264 1369.26 496.468 cv
1366.65 477.01 1364.26 457.503 1361.43 438.073 cv
1361.3 437.198 1361.19 436.322 1361.06 435.447 cv
1358.19 415.818 1354.98 395.742 1346.23 377.739 cv
1331.76 347.956 1301.27 327.504 1268.27 325.288 cv
1260.03 324.734 1251.76 325.311 1243.7 326.905 cv
1225.12 328.558 1208.64 336.681 1195.5 349.869 cv
1182.02 363.386 1173.18 380.591 1166.18 398.152 cv
1158.56 417.272 1152.71 437.119 1148.58 457.278 cv
1144.42 477.536 1141.98 498.171 1141.33 518.841 cv
1141.01 529.029 1141.13 539.231 1141.68 549.409 cv
1142.2 558.88 1142.22 569.377 1145.56 578.371 cv
1147.37 583.217 1150.39 587.549 1154.55 590.358 cv
1161.36 596.292 1171.31 598.665 1180.79 596.376 cv
1198.69 592.058 1209.28 575.292 1215.08 559.032 cv
1228.56 521.292 1218.56 480.553 1225.5 441.841 cv
1227.14 432.718 1229.9 423.177 1236.2 416.114 cv
1241.8 409.836 1250.99 405.505 1259.44 407.884 cv
1267.91 410.271 1272.51 418.729 1275.61 426.322 cv
1279.52 435.873 1282.56 445.871 1285.29 455.813 cv
1291.06 476.846 1294.52 498.316 1296.09 520.058 cv
1297.46 538.923 1298.67 558.781 1309.14 575.183 cv
1317.74 588.635 1332.4 597.95 1348.78 595.798 cv
1366.55 593.466 1375.69 577.65 1376.57 560.917 cv
1377.14 550.217 1375.03 539.422 1373.61 528.856 cv
cp
1 .85098 0 rgb
f
1217.93 367.255 mo
1213.47 367.738 1214.21 374.667 1218.68 374.183 cv
1223.13 373.701 1222.39 366.772 1217.93 367.255 cv
cp
.0117647 .0470588 .105882 rgb
f
1288.58 364.483 mo
1283.8 365 1284.6 372.426 1289.39 371.908 cv
1294.16 371.391 1293.37 363.965 1288.58 364.483 cv
cp
f
1262.02 369.777 mo
1261.9 368.354 1259.66 368.341 1259.79 369.777 cv
1260.11 373.559 1260.39 382.042 1254.37 381.523 cv
1249.35 381.091 1249.54 371.671 1249.36 368.246 cv
1249.29 366.813 1247.05 366.805 1247.13 368.246 cv
1247.38 373.151 1247.46 383.411 1254.37 383.76 cv
1261.83 384.137 1262.48 375.009 1262.02 369.777 cv
cp
f
1218.95 378.255 mo
1215.97 378.255 1213.55 379.651 1213.55 381.374 cv
1213.55 383.096 1215.97 384.492 1218.95 384.492 cv
1221.94 384.492 1224.36 383.096 1224.36 381.374 cv
1224.36 379.651 1221.94 378.255 1218.95 378.255 cv
cp
1 .121569 .219608 rgb
f
1290.78 375.862 mo
1287.79 375.862 1285.37 377.258 1285.37 378.98 cv
1285.37 380.703 1287.79 382.099 1290.78 382.099 cv
1293.76 382.099 1296.18 380.703 1296.18 378.98 cv
1296.18 377.258 1293.76 375.862 1290.78 375.862 cv
cp
f
2157.41 516.09 mo
2154.77 463.341 2151.89 401.167 2109 363.542 cv
2096.27 352.373 2080.37 344.235 2063.62 341.477 cv
2044.61 337.319 2024.46 340.967 2007.35 350.722 cv
1991.01 360.047 1977.95 374.152 1968.25 390.184 cv
1959.75 402.829 1953.06 416.743 1948.15 431.17 cv
1942.85 446.702 1939.62 462.838 1937.65 479.109 cv
1935.75 491.154 1934.89 503.348 1935.09 515.511 cv
1935.08 520.602 1935.26 525.673 1935.68 530.688 cv
1935.86 532.869 1936.12 535.041 1936.46 537.195 cv
1937.44 545.665 1939.21 554.122 1943.11 561.55 cv
1948.2 571.236 1957.46 577.608 1968.24 579.234 cv
1986.03 581.916 2001.52 572.474 2009.61 557.873 cv
2020.39 573.155 2036.68 584.24 2056.53 582.32 cv
2068.76 581.138 2079.04 574.806 2086 564.746 cv
2087.41 562.7 2088.64 560.567 2089.73 558.377 cv
2098.03 573.493 2115.39 582.963 2133.03 577.727 cv
2143.2 574.706 2151.77 567.454 2155.64 557.487 cv
2160.65 544.565 2158.08 529.546 2157.41 516.09 cv
cp
0 .294118 .65098 rgb
f
1991.37 443.24 mo
1984.55 443.978 1985.68 454.574 1992.51 453.835 cv
1999.33 453.097 1998.19 442.501 1991.37 443.24 cv
cp
.0117647 .0470588 .105882 rgb
f
2099.42 439 mo
2092.12 439.791 2093.33 451.148 2100.65 450.356 cv
2107.96 449.565 2106.74 438.208 2099.42 439 cv
cp
f
1992.94 460.063 mo
1988.37 460.063 1984.67 462.199 1984.67 464.833 cv
1984.67 467.466 1988.37 469.602 1992.94 469.602 cv
1997.5 469.602 2001.2 467.466 2001.2 464.833 cv
2001.2 462.199 1997.5 460.063 1992.94 460.063 cv
cp
1 .54902 .682353 rgb
f
2102.78 456.402 mo
2098.22 456.402 2094.51 458.538 2094.51 461.172 cv
2094.51 463.806 2098.22 465.941 2102.78 465.941 cv
2107.35 465.941 2111.05 463.806 2111.05 461.172 cv
2111.05 458.538 2107.35 456.402 2102.78 456.402 cv
cp
f
2056.22 458.461 mo
2052.27 456.117 2046.19 456.193 2041.27 456.225 cv
2040.77 456.137 2040.29 456.099 2039.79 456.096 cv
2039.27 455.002 2037.84 454.852 2036.86 455.451 cv
2035.66 455.38 2034.4 456.21 2034.67 457.737 cv
2036.23 466.835 2046.49 471.04 2054.15 465.91 cv
2056.61 464.262 2059.92 460.656 2056.22 458.461 cv
cp
1 .121569 .219608 rgb
f
2045.91 467.492 mo
2040.78 467.146 2037.68 464.165 2035.83 460.176 cv
2035.95 460.104 2036.06 460 2036.15 459.845 cv
2037.35 457.164 2039.85 456.61 2043.67 458.184 cv
2044.1 458.659 2044.59 459.081 2045.12 459.45 cv
2045.61 459.692 2046.21 459.928 2046.77 459.889 cv
2047.92 459.811 2048.04 459.125 2048.93 458.682 cv
2052.49 456.915 2054.32 457.445 2056.89 460.118 cv
2055.02 464.604 2051.71 467.883 2045.91 467.492 cv
cp
2061.24 443.219 mo
2061.24 443.202 2061.23 443.194 2061.23 443.177 cv
2061.36 442.57 2060.93 441.969 2060.33 441.926 cv
2060.16 441.804 2059.95 441.727 2059.69 441.732 cv
2050.64 441.917 2041.61 441.754 2032.57 441.258 cv
2032.36 441.246 2032.18 441.303 2032.03 441.384 cv
2031.52 441.331 2031.03 441.593 2031.02 442.248 cv
2030.97 452.506 2032.94 470.469 2047.34 469.551 cv
2060.25 468.727 2061.45 452.879 2061.24 443.219 cv
cp
.0117647 .0470588 .105882 rgb
f
996.407 961.802 mo
995.707 954.961 994.748 948.124 993.055 941.452 cv
990.563 931.629 986.389 922.237 979.953 914.471 cv
981.257 911.097 982.413 907.651 983.398 904.136 cv
997.996 852.066 977.58 793.658 931.463 764.627 cv
909.385 750.729 882.871 743.663 856.8 744.977 cv
830.426 746.307 805.413 756.624 785.198 773.514 cv
764.811 790.546 749.744 813.956 743.285 839.768 cv
742 844.907 741.061 850.122 740.425 855.371 cv
737.238 873.29 737.886 891.826 743.072 909.513 cv
744.316 913.754 745.812 917.915 747.533 921.976 cv
741.681 930.864 737.952 940.916 736.626 951.493 cv
735.923 957.098 735.913 962.744 736.62 968.349 cv
737.18 972.798 737.747 978.446 740.949 981.892 cv
743.287 984.407 747.139 985.564 750.211 983.704 cv
753.474 981.728 753.986 977.702 754.082 974.218 cv
754.371 963.663 752.812 951.669 759.158 942.957 cv
769.306 957.416 782.826 969.43 798.895 977.265 cv
800.644 978.117 802.416 978.913 804.204 979.667 cv
823.017 989.73 844.246 995.198 865.91 994.49 cv
907.396 993.135 946.869 970.284 969.081 935.805 cv
975.08 944.272 977.628 955.005 978.328 965.411 cv
978.669 970.505 978.466 976.409 982.884 979.917 cv
986.7 982.946 991.607 981.922 994.523 978.192 cv
998.113 973.602 996.952 967.134 996.407 961.802 cv
cp
.584314 .792157 .929412 rgb
f
815.949 872.704 mo
810.066 873.34 811.045 882.484 816.938 881.847 cv
822.821 881.21 821.841 872.065 815.949 872.704 cv
cp
.0117647 .0470588 .105882 rgb
f
909.193 869.045 mo
902.887 869.728 903.938 879.527 910.253 878.844 cv
916.559 878.162 915.508 868.361 909.193 869.045 cv
cp
f
817.304 887.221 mo
813.365 887.221 810.172 889.063 810.172 891.336 cv
810.172 893.609 813.365 895.452 817.304 895.452 cv
821.244 895.452 824.437 893.609 824.437 891.336 cv
824.437 889.063 821.244 887.221 817.304 887.221 cv
cp
1 .121569 .219608 rgb
f
912.09 884.062 mo
908.151 884.062 904.957 885.904 904.957 888.177 cv
904.957 890.45 908.151 892.293 912.09 892.293 cv
916.029 892.293 919.223 890.45 919.223 888.177 cv
919.223 885.904 916.029 884.062 912.09 884.062 cv
cp
f
871.912 885.838 mo
868.502 883.815 863.26 883.881 859.01 883.908 cv
858.583 883.833 858.163 883.8 857.738 883.798 cv
857.284 882.854 856.055 882.724 855.208 883.241 cv
854.172 883.18 853.085 883.896 853.312 885.214 cv
854.663 893.064 863.513 896.692 870.124 892.266 cv
872.246 890.844 875.106 887.732 871.912 885.838 cv
cp
f
863.011 893.631 mo
858.586 893.332 855.917 890.761 854.313 887.318 cv
854.417 887.256 854.515 887.166 854.596 887.032 cv
855.626 884.719 857.787 884.241 861.079 885.599 cv
861.457 886.009 861.875 886.373 862.333 886.691 cv
862.754 886.9 863.273 887.104 863.756 887.07 cv
864.749 887.003 864.853 886.411 865.623 886.028 cv
868.692 884.504 870.276 884.962 872.493 887.268 cv
870.878 891.139 868.016 893.969 863.011 893.631 cv
cp
876.246 872.686 mo
876.246 872.671 876.236 872.664 876.235 872.649 cv
876.348 872.126 875.978 871.607 875.461 871.569 cv
875.312 871.464 875.128 871.397 874.906 871.402 cv
867.099 871.562 859.304 871.421 851.507 870.993 cv
851.323 870.983 851.172 871.032 851.037 871.103 cv
850.602 871.057 850.172 871.283 850.17 871.848 cv
850.125 880.7 851.824 896.2 864.249 895.407 cv
875.393 894.696 876.428 881.021 876.246 872.686 cv
cp
.0117647 .0470588 .105882 rgb
f
1409.53 850.117 mo
1401.22 839.837 1387.51 837.443 1375.02 837.096 cv
1365.18 836.823 1355.3 837.095 1345.42 837.46 cv
1325.37 837.329 1305.23 838.665 1285.18 837.183 cv
1277.23 836.596 1269.08 835.699 1261.38 833.54 cv
1253.82 831.419 1249.87 827.445 1249.17 819.546 cv
1248.65 813.747 1248.15 808.01 1247.57 802.306 cv
1247.59 788.004 1245.58 773.439 1239.22 760.498 cv
1228.31 738.296 1199.87 721.857 1176.34 735.578 cv
1164.17 742.671 1156.81 755.4 1152.59 768.463 cv
1147.44 784.386 1145.16 801.562 1143.64 818.178 cv
1140.92 847.973 1140.61 881.52 1153.3 909.317 cv
1155.73 914.633 1158.73 919.578 1162.25 924.096 cv
1161.3 938.505 1161.14 952.954 1161.87 967.383 cv
1162.27 975.308 1162.77 983.295 1163.89 991.156 cv
1164.53 995.7 1165.62 1005.6 1171.13 1007.12 cv
1177.17 1008.79 1177.92 1001.21 1178.08 997.208 cv
1178.42 988.511 1177.97 979.813 1177.67 971.121 cv
1177.31 960.634 1177.2 949.939 1178.92 939.598 cv
1179.45 939.95 1179.98 940.305 1180.52 940.645 cv
1184.16 942.947 1187.98 944.957 1191.91 946.74 cv
1190.78 956.259 1190.36 965.85 1190.93 975.438 cv
1191.34 982.228 1192.22 989.008 1193.64 995.66 cv
1194.52 999.743 1195.14 1006.47 1199.62 1008.38 cv
1203.15 1009.88 1206.88 1007.24 1208.08 1003.91 cv
1208.93 1001.57 1208.59 999.053 1208.34 996.64 cv
1207.93 992.818 1207.58 989.017 1207.47 985.173 cv
1207.15 974.476 1208.28 963.851 1210.7 953.484 cv
1214.85 954.649 1219.03 955.66 1223.19 956.552 cv
1229.08 957.813 1235.01 958.8 1240.96 959.56 cv
1240.62 967.95 1240.6 976.354 1241.73 984.691 cv
1242.45 989.967 1243.62 995.186 1245.51 1000.17 cv
1246.76 1003.47 1248.47 1007.49 1252.53 1007.85 cv
1261.17 1008.61 1259.78 992.349 1259.71 987.517 cv
1259.59 978.784 1258.77 969.768 1260.6 961.239 cv
1267.22 961.532 1273.86 961.563 1280.49 961.365 cv
1279.58 970.313 1279.29 979.337 1279.96 988.307 cv
1280.37 993.875 1282.25 1008.16 1290.55 1007.55 cv
1298.15 1006.98 1297.06 992.373 1297.16 987.454 cv
1297.33 978.304 1296.85 969.082 1299 960.238 cv
1307.19 959.497 1315.36 958.452 1323.47 957.153 cv
1327.98 956.431 1332.51 955.646 1337.03 954.798 cv
1336.19 964.965 1335.56 975.159 1335.97 985.357 cv
1336.2 991.011 1335.63 1007.47 1345.6 1005.72 cv
1349.12 1005.09 1350.31 1001.63 1350.7 998.504 cv
1351.45 992.512 1351.3 986.358 1351.35 980.332 cv
1351.44 970.535 1351.66 960.582 1354.24 951.155 cv
1356.31 950.663 1358.37 950.145 1360.42 949.61 cv
1359.39 961.974 1359.04 974.669 1360.75 986.886 cv
1361.48 992.103 1366.51 1013.83 1375.85 1007.25 cv
1379.68 1004.56 1379.6 998.108 1379.9 993.991 cv
1380.42 986.856 1380.01 979.693 1379.65 972.561 cv
1379.16 962.77 1378.77 952.684 1380.86 943.146 cv
1389.52 939.67 1397.74 935.026 1404.22 928.292 cv
1414.31 917.808 1417.66 903.685 1418.09 889.512 cv
1418.48 876.428 1418.16 860.803 1409.53 850.117 cv
cp
1 .121569 .219608 rgb
f
1162.93 779.498 mo
1159.7 779.848 1160.23 784.879 1163.48 784.528 cv
1166.71 784.178 1166.18 779.146 1162.93 779.498 cv
cp
.0117647 .0470588 .105882 rgb
f
1214.24 777.484 mo
1210.77 777.86 1211.35 783.252 1214.83 782.876 cv
1218.3 782.501 1217.72 777.108 1214.24 777.484 cv
cp
f
1194.96 781.329 mo
1194.87 780.295 1193.24 780.286 1193.33 781.329 cv
1193.57 784.075 1193.77 790.235 1189.4 789.859 cv
1185.75 789.545 1185.89 782.704 1185.76 780.217 cv
1185.71 779.177 1184.08 779.17 1184.14 780.217 cv
1184.32 783.779 1184.38 791.229 1189.4 791.483 cv
1194.81 791.757 1195.28 785.128 1194.96 781.329 cv
cp
f
1163.68 787.486 mo
1161.51 787.486 1159.75 788.5 1159.75 789.75 cv
1159.75 791.001 1161.51 792.015 1163.68 792.015 cv
1165.85 792.015 1167.6 791.001 1167.6 789.75 cv
1167.6 788.5 1165.85 787.486 1163.68 787.486 cv
cp
1 .54902 .682353 rgb
f
1215.84 785.748 mo
1213.67 785.748 1211.91 786.761 1211.91 788.012 cv
1211.91 789.263 1213.67 790.277 1215.84 790.277 cv
1218 790.277 1219.76 789.263 1219.76 788.012 cv
1219.76 786.761 1218 785.748 1215.84 785.748 cv
cp
f
587.41 782.375 mo
583.666 776.881 576.956 774 570.717 777.119 cv
563.771 780.592 558.233 788.455 553.623 794.46 cv
550.542 798.472 547.708 802.645 545.104 806.958 cv
542.754 800.657 539.901 794.553 536.498 788.741 cv
533.059 782.867 528.55 774.494 521.113 773.239 cv
513.703 771.988 509.164 779.068 505.566 784.334 cv
501.91 789.687 498.588 795.243 495.564 800.963 cv
492.226 795.4 488.364 790.167 483.967 785.369 cv
478.865 779.8 471.617 771.62 463.514 771.012 cv
455.207 770.388 449.576 777.851 445.266 783.877 cv
440.707 790.252 436.911 797.111 433.322 804.07 cv
430.939 797.699 427.684 791.696 423.537 786.248 cv
419.064 780.373 412.679 772.955 404.37 774.735 cv
396.458 776.43 391.044 784.621 387.119 791.052 cv
384.363 795.568 382.128 800.359 380.376 805.324 cv
378.385 799.907 376.055 794.616 373.347 789.503 cv
369.647 782.518 364.755 773.906 355.938 773.111 cv
347.544 772.355 342.975 779.975 339.307 786.292 cv
336.492 791.139 334.065 796.189 331.984 801.38 cv
328.25 792.862 323.405 785.262 313.089 786.163 cv
306.911 786.703 303.042 791.718 300.895 797.086 cv
297.808 804.809 296.483 813.556 295.228 821.738 cv
289.929 856.262 293.417 892.59 306.236 925.162 cv
308.677 931.363 311.739 937.501 315.628 942.909 cv
315.535 949.848 316.234 956.763 317.89 963.513 cv
318.848 967.419 319.944 974.492 324.698 975.666 cv
328.86 976.694 331.746 972.661 331.741 968.881 cv
331.736 965.451 330.507 962.133 330.494 958.668 cv
330.491 957.952 330.523 957.244 330.572 956.538 cv
331.546 957.065 332.54 957.566 333.575 958.011 cv
333.711 958.071 333.848 958.131 333.986 958.19 cv
334.01 958.201 334.035 958.212 334.06 958.222 cv
338.402 960.086 343.091 961.304 347.775 961.951 cv
351.45 962.458 355.148 962.688 358.854 962.8 cv
360.037 969.507 363.056 977.773 369.762 976.387 cv
374.791 975.346 376.182 968.971 376.321 962.954 cv
385.144 963.041 393.965 963.207 402.786 963.42 cv
439.022 964.294 475.32 965.77 511.545 963.9 cv
511.684 971.003 513.55 982.624 521.196 980.235 cv
525.354 978.937 526.106 973.94 526.696 970.296 cv
527.095 967.831 527.325 965.363 527.417 962.892 cv
536.786 962.146 546.354 960.854 554.901 957.189 cv
555.998 962.079 556.061 967 555.938 972.445 cv
555.832 977.113 559.206 981.3 564.119 978.645 cv
568.923 976.048 570.069 968.221 570.56 963.406 cv
571.129 957.822 570.587 952.221 569.759 946.677 cv
577.237 938.345 581.317 927.298 584.436 916.589 cv
594.544 881.878 597.683 845.067 593.597 809.147 cv
592.622 800.579 592.414 789.719 587.41 782.375 cv
cp
1 .85098 0 rgb
f
399.328 864.767 mo
399.192 863.19 396.714 863.176 396.851 864.767 cv
397.212 868.955 397.519 878.352 390.845 877.777 cv
385.284 877.299 385.498 866.863 385.301 863.069 cv
385.219 861.483 382.741 861.474 382.824 863.069 cv
383.105 868.503 383.189 879.868 390.845 880.255 cv
399.111 880.672 399.828 870.562 399.328 864.767 cv
cp
.0117647 .0470588 .105882 rgb
f
498.077 862.982 mo
497.941 861.406 495.462 861.392 495.599 862.982 cv
495.96 867.172 496.267 876.567 489.594 875.993 cv
484.033 875.515 484.246 865.079 484.05 861.286 cv
483.968 859.699 481.49 859.689 481.572 861.286 cv
481.854 866.719 481.938 878.084 489.594 878.471 cv
497.859 878.889 498.577 868.778 498.077 862.982 cv
cp
f
454.168 871.525 mo
447.291 867.66 422.307 872.283 428.765 883.941 cv
429.132 884.604 429.622 885.192 430.193 885.723 cv
432.236 888.027 436.238 888.971 439.098 889.383 cv
445.229 890.265 453.444 889.819 457.15 883.988 cv
459.95 879.582 458.771 874.111 454.168 871.525 cv
cp
1 1 1 rgb
f
391.136 884.981 mo
386.927 884.981 383.515 886.95 383.515 889.379 cv
383.515 891.808 386.927 893.776 391.136 893.776 cv
395.345 893.776 398.757 891.808 398.757 889.379 cv
398.757 886.95 395.345 884.981 391.136 884.981 cv
cp
1 .121569 .219608 rgb
f
492.413 881.606 mo
488.204 881.606 484.792 883.575 484.792 886.004 cv
484.792 888.433 488.204 890.401 492.413 890.401 cv
496.622 890.401 500.034 888.433 500.034 886.004 cv
500.034 883.575 496.622 881.606 492.413 881.606 cv
cp
f
453.544 885.014 mo
453.073 885.636 452.542 886.151 451.978 886.611 cv
451.421 882.056 450.864 877.5 450.307 872.944 cv
451.894 873.25 453.323 873.888 454.464 875.369 cv
457.052 878.729 455.839 881.978 453.544 885.014 cv
cp
442.152 872.787 mo
443.702 872.614 445.272 872.565 446.837 872.627 cv
447.355 872.647 447.862 872.673 448.364 872.707 cv
448.977 877.727 449.591 882.746 450.205 887.766 cv
448.387 888.686 446.31 889.098 444.167 889.248 cv
442.152 872.787 li
cp
440.941 889.326 mo
439.676 889.309 437.781 888.98 435.835 888.369 cv
435.326 883.919 434.817 879.469 434.308 875.02 cv
436.187 874.077 438.198 873.445 440.271 873.063 cv
440.935 878.484 441.598 883.904 442.262 889.325 cv
441.821 889.33 441.38 889.332 440.941 889.326 cv
cp
430.817 877.22 mo
430.901 877.175 430.985 877.124 431.066 877.06 cv
431.533 876.69 432.019 876.363 432.511 876.046 cv
432.953 879.91 433.395 883.774 433.837 887.639 cv
429.207 885.688 425.45 882.11 430.817 877.22 cv
cp
454.623 871.33 mo
447.703 867.289 436.635 869.771 430.167 874.202 cv
429.973 874.254 429.78 874.348 429.597 874.494 cv
423.681 879.246 425.428 887.25 432.038 890.373 cv
438.2 893.284 449.516 893.408 454.884 888.532 cv
459.644 884.209 460.71 874.886 454.623 871.33 cv
cp
.0117647 .0470588 .105882 rgb
f
2180.28 1330.42 mo
2177.37 1294.11 2172.45 1256.56 2155 1224 cv
2140.71 1197.32 2117.5 1173.85 2088.09 1164.71 cv
2055.25 1154.5 2019.4 1164.89 1993.22 1186.07 cv
1965.83 1208.24 1948.99 1240.78 1939.75 1274.26 cv
1934.69 1292.6 1931.61 1311.52 1929.72 1330.44 cv
1928.74 1340.26 1928.23 1350.17 1929.08 1360.02 cv
1929.81 1368.46 1931.09 1377.77 1935.3 1385.26 cv
1938.7 1391.29 1944.86 1395.73 1952 1394.98 cv
1952.12 1394.97 1952.24 1394.94 1952.35 1394.91 cv
1957.51 1395 1962.43 1392.19 1965.63 1387.97 cv
1970.92 1380.97 1971.6 1371.23 1972.9 1362.86 cv
1976 1342.83 1978.26 1322.59 1983.68 1303 cv
1992.45 1271.28 2012.28 1238.22 2047.12 1231.64 cv
2063.88 1228.47 2081.56 1232.47 2093.63 1244.96 cv
2105.66 1257.42 2110.81 1274.98 2114.77 1291.4 cv
2119.59 1311.33 2122.2 1331.62 2122.85 1352.1 cv
2123.33 1367.3 2124.64 1386.11 2139.6 1394.5 cv
2152.76 1401.88 2168.17 1393.58 2175.24 1381.68 cv
2184.25 1366.5 2181.62 1347.15 2180.28 1330.42 cv
cp
.584314 .792157 .929412 rgb
f
2082.63 1316.42 mo
2077.89 1305.76 2072.72 1293.79 2061.95 1287.91 cv
2038.93 1275.34 2020.26 1302.35 2010.94 1319.51 cv
2004.09 1332.11 1998.96 1345.67 1995.53 1359.58 cv
1992.68 1371.12 1989.07 1386.07 1999.33 1395.08 cv
1999.93 1395.61 2000.61 1395.72 2001.23 1395.58 cv
2007.91 1400.61 2017.63 1401.01 2025.91 1401.3 cv
2040.56 1401.81 2055.2 1400.77 2069.76 1399.34 cv
2079.43 1398.39 2090.88 1397.2 2095.5 1387.24 cv
2100.18 1377.13 2097.54 1363.34 2095.3 1352.91 cv
2092.58 1340.29 2087.87 1328.19 2082.63 1316.42 cv
cp
.835294 .701961 .85098 rgb
f
2011.05 1357.56 mo
2006.76 1358.02 2007.47 1364.7 2011.77 1364.23 cv
2016.07 1363.77 2015.35 1357.09 2011.05 1357.56 cv
cp
.0117647 .0470588 .105882 rgb
f
2079.08 1354.89 mo
2074.48 1355.39 2075.25 1362.54 2079.86 1362.04 cv
2084.46 1361.54 2083.69 1354.39 2079.08 1354.89 cv
cp
f
2053.51 1359.99 mo
2053.39 1358.62 2051.24 1358.61 2051.36 1359.99 cv
2051.67 1363.63 2051.94 1371.8 2046.14 1371.3 cv
2041.3 1370.88 2041.49 1361.81 2041.32 1358.51 cv
2041.25 1357.13 2039.09 1357.13 2039.17 1358.51 cv
2039.41 1363.24 2039.48 1373.12 2046.14 1373.45 cv
2053.32 1373.81 2053.95 1365.03 2053.51 1359.99 cv
cp
f
2012.04 1368.15 mo
2009.17 1368.15 2006.84 1369.5 2006.84 1371.15 cv
2006.84 1372.81 2009.17 1374.16 2012.04 1374.16 cv
2014.92 1374.16 2017.25 1372.81 2017.25 1371.15 cv
2017.25 1369.5 2014.92 1368.15 2012.04 1368.15 cv
cp
1 .121569 .219608 rgb
f
2081.2 1365.85 mo
2078.32 1365.85 2075.99 1367.19 2075.99 1368.85 cv
2075.99 1370.51 2078.32 1371.85 2081.2 1371.85 cv
2084.07 1371.85 2086.4 1370.51 2086.4 1368.85 cv
2086.4 1367.19 2084.07 1365.85 2081.2 1365.85 cv
cp
f
2030.69 1191.48 mo
2030.59 1190.39 2028.87 1190.38 2028.97 1191.48 cv
2029.22 1194.39 2029.43 1200.92 2024.79 1200.52 cv
2020.93 1200.19 2021.08 1192.94 2020.94 1190.3 cv
2020.89 1189.2 2019.17 1189.19 2019.22 1190.3 cv
2019.42 1194.08 2019.48 1201.97 2024.79 1202.24 cv
2030.54 1202.53 2031.03 1195.51 2030.69 1191.48 cv
cp
.0117647 .0470588 .105882 rgb
f
2099.28 1190.24 mo
2099.19 1189.15 2097.47 1189.14 2097.56 1190.24 cv
2097.81 1193.15 2098.03 1199.68 2093.39 1199.28 cv
2089.53 1198.95 2089.68 1191.7 2089.54 1189.06 cv
2089.48 1187.96 2087.76 1187.96 2087.82 1189.06 cv
2088.01 1192.84 2088.07 1200.73 2093.39 1201 cv
2099.13 1201.29 2099.63 1194.27 2099.28 1190.24 cv
cp
f
2068.78 1196.18 mo
2064 1193.49 2046.65 1196.7 2051.14 1204.8 cv
2051.39 1205.26 2051.73 1205.67 2052.13 1206.04 cv
2053.55 1207.64 2056.33 1208.3 2058.31 1208.58 cv
2062.57 1209.19 2068.28 1208.88 2070.85 1204.83 cv
2072.8 1201.77 2071.98 1197.97 2068.78 1196.18 cv
cp
1 1 1 rgb
f
2025 1205.52 mo
2022.07 1205.52 2019.7 1206.89 2019.7 1208.58 cv
2019.7 1210.27 2022.07 1211.63 2025 1211.63 cv
2027.92 1211.63 2030.29 1210.27 2030.29 1208.58 cv
2030.29 1206.89 2027.92 1205.52 2025 1205.52 cv
cp
1 .121569 .219608 rgb
f
2095.35 1203.18 mo
2092.43 1203.18 2090.06 1204.55 2090.06 1206.23 cv
2090.06 1207.92 2092.43 1209.29 2095.35 1209.29 cv
2098.27 1209.29 2100.64 1207.92 2100.64 1206.23 cv
2100.64 1204.55 2098.27 1203.18 2095.35 1203.18 cv
cp
f
2068.35 1205.55 mo
2068.02 1205.98 2067.65 1206.34 2067.26 1206.66 cv
2066.87 1203.49 2066.49 1200.33 2066.1 1197.16 cv
2067.2 1197.38 2068.2 1197.82 2068.99 1198.85 cv
2070.79 1201.18 2069.94 1203.44 2068.35 1205.55 cv
cp
2060.44 1197.05 mo
2061.51 1196.93 2062.6 1196.9 2063.69 1196.94 cv
2064.05 1196.96 2064.4 1196.97 2064.75 1197 cv
2065.18 1200.48 2065.6 1203.97 2066.03 1207.46 cv
2064.77 1208.1 2063.32 1208.38 2061.83 1208.49 cv
2060.44 1197.05 li
cp
2059.59 1208.54 mo
2058.72 1208.53 2057.4 1208.3 2056.05 1207.88 cv
2055.69 1204.79 2055.34 1201.7 2054.99 1198.6 cv
2056.29 1197.95 2057.69 1197.51 2059.13 1197.25 cv
2059.59 1201.01 2060.05 1204.78 2060.51 1208.54 cv
2060.21 1208.54 2059.9 1208.55 2059.59 1208.54 cv
cp
2052.56 1200.13 mo
2052.62 1200.1 2052.68 1200.07 2052.73 1200.02 cv
2053.06 1199.76 2053.4 1199.54 2053.74 1199.32 cv
2054.04 1202 2054.35 1204.69 2054.66 1207.37 cv
2051.44 1206.02 2048.83 1203.53 2052.56 1200.13 cv
cp
2069.1 1196.04 mo
2064.29 1193.23 2056.6 1194.96 2052.11 1198.04 cv
2051.97 1198.07 2051.84 1198.14 2051.71 1198.24 cv
2047.6 1201.54 2048.82 1207.1 2053.41 1209.27 cv
2057.69 1211.29 2065.55 1211.38 2069.28 1207.99 cv
2072.59 1204.99 2073.33 1198.51 2069.1 1196.04 cv
cp
.0117647 .0470588 .105882 rgb
f
1674.69 877.143 mo
1674.05 871.865 1673.4 866.588 1672.76 861.311 cv
1672.23 861.275 1671.7 861.248 1671.15 861.227 cv
1669.51 861.161 1667.86 861.213 1666.23 861.395 cv
1668.34 878.701 li
1670.6 878.542 1672.78 878.109 1674.69 877.143 cv
cp
1 1 1 rgb
f
1657.48 877.009 mo
1657.02 872.946 1656.55 868.884 1656.09 864.821 cv
1655.57 865.154 1655.06 865.499 1654.57 865.887 cv
1654.49 865.954 1654.4 866.008 1654.31 866.056 cv
1648.67 871.196 1652.62 874.959 1657.48 877.009 cv
cp
f
1657.98 863.741 mo
1658.51 868.42 1659.05 873.099 1659.58 877.776 cv
1661.63 878.42 1663.62 878.765 1664.95 878.783 cv
1665.41 878.789 1665.88 878.788 1666.34 878.781 cv
1665.64 873.083 1664.95 867.384 1664.25 861.686 cv
1662.07 862.087 1659.95 862.751 1657.98 863.741 cv
cp
f
1679.17 864.109 mo
1677.97 862.552 1676.47 861.882 1674.8 861.56 cv
1675.39 866.35 1675.97 871.139 1676.56 875.929 cv
1677.15 875.445 1677.71 874.903 1678.2 874.249 cv
1680.62 871.058 1681.89 867.643 1679.17 864.109 cv
cp
f
1612.18 868.178 mo
1618.79 867.463 1617.69 857.191 1611.07 857.908 cv
1604.46 858.623 1605.56 868.895 1612.18 868.178 cv
cp
.0117647 .0470588 .105882 rgb
f
1717 864.806 mo
1724.09 864.039 1722.91 853.03 1715.81 853.798 cv
1708.73 854.564 1709.91 865.573 1717 864.806 cv
cp
f
1612.59 874.216 mo
1608.17 874.216 1604.58 876.285 1604.58 878.839 cv
1604.58 881.392 1608.17 883.462 1612.59 883.462 cv
1617.02 883.462 1620.6 881.392 1620.6 878.839 cv
1620.6 876.285 1617.02 874.216 1612.59 874.216 cv
cp
1 .121569 .219608 rgb
f
1719.07 870.667 mo
1714.64 870.667 1711.06 872.736 1711.06 875.29 cv
1711.06 877.843 1714.64 879.913 1719.07 879.913 cv
1723.49 879.913 1727.08 877.843 1727.08 875.29 cv
1727.08 872.736 1723.49 870.667 1719.07 870.667 cv
cp
f
1676.56 875.929 mo
1675.97 871.139 1675.39 866.35 1674.8 861.56 cv
1676.47 861.882 1677.97 862.552 1679.17 864.109 cv
1681.89 867.643 1680.62 871.058 1678.2 874.249 cv
1677.71 874.903 1677.15 875.445 1676.56 875.929 cv
cp
1666.23 861.395 mo
1667.86 861.213 1669.51 861.161 1671.15 861.227 cv
1671.7 861.248 1672.23 861.275 1672.76 861.311 cv
1673.4 866.588 1674.05 871.865 1674.69 877.143 cv
1672.78 878.109 1670.6 878.542 1668.34 878.701 cv
1666.23 861.395 li
cp
1654.57 865.887 mo
1655.06 865.499 1655.57 865.154 1656.09 864.821 cv
1656.55 868.884 1657.02 872.946 1657.48 877.009 cv
1652.62 874.959 1648.67 871.196 1654.31 866.056 cv
1654.4 866.008 1654.49 865.954 1654.57 865.887 cv
cp
1664.95 878.783 mo
1663.62 878.765 1661.63 878.42 1659.58 877.776 cv
1659.05 873.099 1658.51 868.42 1657.98 863.741 cv
1659.95 862.751 1662.07 862.087 1664.25 861.686 cv
1664.95 867.384 1665.64 873.083 1666.34 878.781 cv
1665.88 878.788 1665.41 878.789 1664.95 878.783 cv
cp
1679.34 859.862 mo
1672.06 855.614 1660.43 858.225 1653.63 862.883 cv
1653.42 862.937 1653.22 863.035 1653.03 863.189 cv
1646.81 868.186 1648.64 876.601 1655.59 879.884 cv
1662.07 882.944 1673.97 883.074 1679.61 877.948 cv
1684.62 873.403 1685.74 863.601 1679.34 859.862 cv
cp
.0117647 .0470588 .105882 rgb
f
1785.99 977.182 mo
1785.35 974.313 1784.29 969.111 1786.3 968.135 cv
1788.48 967.083 1787.18 970.66 1787.04 971.893 cv
1786.83 973.678 1786.47 975.448 1785.99 977.182 cv
cp
1800.11 929.514 mo
1798.03 914.837 1794.27 900.465 1789.01 886.64 cv
1788.68 888.07 1788.32 889.488 1787.93 890.892 cv
1795.13 910.796 1799.27 931.889 1799.52 953.022 cv
1799.59 959.137 1799.21 965.401 1797.5 971.303 cv
1796.55 974.594 1795.19 977.791 1793.28 980.64 cv
1792.28 982.125 1790.41 985.093 1788.05 984.163 cv
1787.6 983.985 1787.25 983.121 1786.97 982.09 cv
1788.54 978.202 1792.51 967.433 1788.15 964.187 cv
1783.88 961.012 1782.79 968.188 1782.84 970.723 cv
1782.88 973.117 1783.06 978.202 1784.2 982.181 cv
1784.11 982.396 1784.03 982.619 1783.93 982.834 cv
1782.46 986.059 1780.82 986.344 1779.07 983.478 cv
1778.76 982.962 1778.52 982.4 1778.32 981.81 cv
1780.02 977.882 1780.21 973.544 1778.98 969.405 cv
1778.66 968.34 1776.99 967.878 1776.58 969.179 cv
1775.47 972.705 1774.9 977.372 1775.68 981.549 cv
1775.19 982.551 1774.59 983.515 1773.86 984.419 cv
1773.18 985.958 1772.12 986.977 1770.65 986.565 cv
1769.34 987.04 1768.82 986.267 1769.1 985.154 cv
1768.74 984.409 1769.52 982.051 1769.63 981.509 cv
1770.18 978.955 1770.72 976.403 1771.18 973.833 cv
1773.09 963.269 1774.13 952.519 1773.91 941.776 cv
1773.76 934.918 1773.11 928.064 1771.86 921.321 cv
1771.17 922.019 1770.46 922.699 1769.72 923.352 cv
1769.71 923.357 1769.7 923.363 1769.7 923.37 cv
1770.01 925.221 1770.29 927.079 1770.52 928.945 cv
1772.16 942.358 1771.5 955.975 1769.42 969.301 cv
1768.62 974.406 1766.26 980.282 1766.56 985.434 cv
1766.69 987.66 1767.74 990.112 1770.36 989.94 cv
1772.83 989.778 1775.16 987.114 1776.65 984.85 cv
1777.15 986.045 1777.8 987.15 1778.64 988.106 cv
1781.44 991.288 1783.89 988.335 1785.49 985.324 cv
1786.03 986.211 1786.66 986.903 1787.43 987.298 cv
1792.11 989.703 1796.66 980.2 1798.01 977.19 cv
1804.51 962.803 1802.25 944.629 1800.11 929.514 cv
cp
f
1719.07 879.913 mo
1714.64 879.913 1711.06 877.843 1711.06 875.29 cv
1711.06 872.736 1714.64 870.667 1719.07 870.667 cv
1723.49 870.667 1727.08 872.736 1727.08 875.29 cv
1727.08 877.843 1723.49 879.913 1719.07 879.913 cv
cp
1715.81 853.798 mo
1722.91 853.03 1724.09 864.039 1717 864.806 cv
1709.91 865.573 1708.73 854.564 1715.81 853.798 cv
cp
1679.61 877.948 mo
1673.97 883.074 1662.07 882.944 1655.59 879.884 cv
1648.64 876.601 1646.81 868.186 1653.03 863.189 cv
1653.22 863.035 1653.42 862.937 1653.63 862.883 cv
1660.43 858.225 1672.06 855.614 1679.34 859.862 cv
1685.74 863.601 1684.62 873.403 1679.61 877.948 cv
cp
1612.59 883.462 mo
1608.17 883.462 1604.58 881.392 1604.58 878.839 cv
1604.58 876.285 1608.17 874.216 1612.59 874.216 cv
1617.02 874.216 1620.6 876.285 1620.6 878.839 cv
1620.6 881.392 1617.02 883.462 1612.59 883.462 cv
cp
1611.07 857.908 mo
1617.69 857.191 1618.79 867.463 1612.18 868.178 cv
1605.56 868.895 1604.46 858.623 1611.07 857.908 cv
cp
1771.86 921.321 mo
1777.99 915.146 1782.22 907.287 1785.25 899.179 cv
1786.24 896.499 1787.15 893.727 1787.93 890.892 cv
1788.32 889.488 1788.68 888.07 1789.01 886.64 cv
1792.4 871.854 1792.34 855.789 1785.38 842.362 cv
1776.63 825.509 1758.75 818.779 1740.99 816 cv
1742.32 804.38 1741.85 792.4 1734.82 782.594 cv
1726.03 770.343 1710.19 768.518 1696.27 767.385 cv
1694.38 767.231 1692.48 767.111 1690.58 767.012 cv
1689.98 762.937 1688.62 759.06 1685.71 755.969 cv
1680.18 750.087 1671.52 749.495 1663.95 749.432 cv
1656.72 749.372 1648.63 749.545 1642.72 754.299 cv
1637.8 758.263 1636.2 764.288 1635.79 770.339 cv
1623.42 772.131 1610.71 774.844 1601.15 783.205 cv
1590.29 792.712 1589.28 806.535 1590.39 819.926 cv
1575.14 821.626 1561.97 832.76 1555.49 846.857 cv
1550.73 857.222 1548.31 869.773 1548.48 882.12 cv
1548.5 884.22 1548.62 886.309 1548.8 888.384 cv
1549.42 895.593 1550.95 902.593 1553.46 908.881 cv
1555.97 915.141 1559.66 920.196 1564.16 924.27 cv
1564.89 924.937 1565.65 925.576 1566.43 926.191 cv
1575.06 933.003 1586.16 936.688 1597.58 938.496 cv
1610 940.465 1622.67 941.379 1635.37 941.714 cv
1637.54 950.504 1638.37 959.54 1637.72 968.622 cv
1637.4 973.01 1632.68 986.688 1642.04 984.087 cv
1649.25 982.085 1652.42 974.007 1654.13 967.487 cv
1656.32 959.1 1657.1 950.434 1656.61 941.811 cv
1660.74 941.754 1664.85 941.66 1668.94 941.551 cv
1668.76 950.527 1669.76 959.519 1672.15 968.192 cv
1674.06 975.166 1678.09 983.854 1686.4 984.514 cv
1689.19 984.735 1692.17 983.827 1693.82 981.447 cv
1696.29 977.899 1693.76 973.875 1692.43 970.424 cv
1688.8 960.967 1687.57 950.799 1688.65 940.781 cv
1695.64 940.42 1702.62 939.979 1709.59 939.46 cv
1720.94 938.619 1732.46 937.994 1743.61 935.57 cv
1753.09 933.508 1762.33 929.839 1769.7 923.37 cv
1769.7 923.363 1769.71 923.357 1769.72 923.352 cv
1770.46 922.699 1771.17 922.019 1771.86 921.321 cv
cp
0 .694118 .54902 rgb
f
1551.02 973.931 mo
1550.54 972.197 1550.17 970.427 1549.96 968.642 cv
1549.82 967.409 1548.53 963.832 1550.7 964.884 cv
1552.72 965.86 1551.65 971.063 1551.02 973.931 cv
cp
1563.1 938.526 mo
1562.88 949.269 1563.91 960.018 1565.82 970.582 cv
1566.29 973.152 1566.82 975.704 1567.37 978.258 cv
1567.48 978.8 1568.26 981.158 1567.9 981.903 cv
1568.18 983.016 1567.67 983.789 1566.35 983.314 cv
1564.89 983.726 1563.82 982.707 1563.15 981.168 cv
1562.42 980.264 1561.81 979.301 1561.32 978.298 cv
1562.1 974.121 1561.53 969.454 1560.43 965.929 cv
1560.02 964.627 1558.34 965.089 1558.03 966.154 cv
1556.8 970.294 1556.98 974.632 1558.69 978.559 cv
1558.49 979.149 1558.24 979.712 1557.93 980.227 cv
1556.19 983.093 1554.54 982.809 1553.07 979.583 cv
1552.97 979.368 1552.89 979.146 1552.8 978.93 cv
1553.94 974.951 1554.12 969.866 1554.16 967.472 cv
1554.21 964.937 1553.12 957.762 1548.85 960.936 cv
1544.49 964.182 1548.47 974.951 1550.04 978.839 cv
1549.76 979.871 1549.41 980.734 1548.95 980.912 cv
1546.59 981.842 1544.73 978.874 1543.73 977.389 cv
1541.81 974.541 1540.45 971.343 1539.5 968.052 cv
1537.79 962.15 1537.41 955.886 1537.49 949.771 cv
1537.73 928.9 1541.77 908.07 1548.8 888.384 cv
1548.62 886.309 1548.5 884.22 1548.48 882.12 cv
1542.96 896.333 1539.04 911.137 1536.89 926.263 cv
1534.75 941.378 1532.5 959.552 1538.99 973.939 cv
1540.35 976.949 1544.9 986.453 1549.57 984.047 cv
1550.34 983.652 1550.98 982.96 1551.51 982.073 cv
1553.11 985.085 1555.56 988.037 1558.36 984.855 cv
1559.2 983.899 1559.85 982.794 1560.35 981.6 cv
1561.84 983.863 1564.17 986.527 1566.64 986.689 cv
1569.27 986.861 1570.31 984.409 1570.44 982.183 cv
1570.74 977.031 1568.38 971.155 1567.58 966.051 cv
1565.53 952.888 1564.87 939.444 1566.43 926.191 cv
1565.65 925.576 1564.89 924.937 1564.16 924.27 cv
1563.54 928.996 1563.2 933.76 1563.1 938.526 cv
cp
.0117647 .0470588 .105882 rgb
f
1706.82 440.5 mo
1702.43 440.5 1698.86 438.444 1698.86 435.907 cv
1698.86 433.371 1702.43 431.314 1706.82 431.314 cv
1711.22 431.314 1714.78 433.371 1714.78 435.907 cv
1714.78 438.444 1711.22 440.5 1706.82 440.5 cv
cp
1703.59 414.556 mo
1710.64 413.793 1711.81 424.73 1704.77 425.492 cv
1697.72 426.254 1696.55 415.317 1703.59 414.556 cv
cp
1653.2 442.947 mo
1643.02 442.433 1642.91 427.322 1642.53 420.098 cv
1642.42 417.976 1645.72 417.988 1645.83 420.098 cv
1646.09 425.142 1645.8 439.017 1653.2 439.653 cv
1662.07 440.417 1661.66 427.923 1661.18 422.354 cv
1661 420.239 1664.29 420.258 1664.48 422.354 cv
1665.14 430.059 1664.19 443.502 1653.2 442.947 cv
cp
1601.04 444.026 mo
1596.65 444.026 1593.08 441.969 1593.08 439.433 cv
1593.08 436.896 1596.65 434.84 1601.04 434.84 cv
1605.44 434.84 1609 436.896 1609 439.433 cv
1609 441.969 1605.44 444.026 1601.04 444.026 cv
cp
1599.53 418.639 mo
1606.11 417.927 1607.2 428.131 1600.63 428.842 cv
1594.06 429.554 1592.96 419.349 1599.53 418.639 cv
cp
1753.65 500.721 mo
1755.27 496.845 1757.53 493.238 1760.41 490.174 cv
1762.03 488.445 1763.87 487.003 1765.78 485.653 cv
1767.91 475.825 1768.58 465.753 1767.68 455.828 cv
1767.6 454.957 1767.51 454.087 1767.41 453.219 cv
1766.37 444.435 1764.08 435.795 1760.46 427.574 cv
1760.08 426.69 1759.67 425.81 1759.25 424.936 cv
1758.47 423.303 1757.64 421.688 1756.74 420.093 cv
1743.75 396.843 1721.69 378.595 1697.38 368.107 cv
1701.76 352.3 1697.64 334.695 1684.16 323.369 cv
1666.3 308.365 1638.64 310.872 1624.69 330.033 cv
1617.73 339.586 1615.95 351.517 1617.2 363.043 cv
1596.62 369.82 1578.06 383.029 1565.58 400.786 cv
1560.55 407.04 1556.16 413.775 1552.49 420.882 cv
1552.04 421.754 1551.6 422.632 1551.17 423.514 cv
1547.18 431.729 1544.15 440.411 1542.23 449.401 cv
1542.03 450.294 1541.85 451.19 1541.68 452.09 cv
1540.04 460.834 1539.43 469.849 1540 478.992 cv
1543.31 481.229 1546.7 483.349 1549.47 486.297 cv
1552.35 489.361 1554.62 492.968 1556.23 496.845 cv
1559.96 505.795 1559.82 519.377 1554.87 529.154 cv
1558.58 535.684 1562.94 541.85 1567.95 547.501 cv
1569.36 549.088 1570.83 550.611 1572.33 552.103 cv
1569.31 560.396 1567.8 569.18 1568.15 578.072 cv
1568.52 587.789 1570.71 600.18 1579.68 605.812 cv
1588.23 611.183 1597.2 604.624 1594.76 594.952 cv
1593.39 589.504 1591.36 584.902 1591.49 579.119 cv
1591.57 575.374 1592.3 571.775 1593.57 568.353 cv
1605.82 575.466 1619.48 580.2 1633.48 582.2 cv
1659.49 585.916 1685.22 579.677 1707.24 565.497 cv
1707.84 565.113 1708.43 564.721 1709.03 564.328 cv
1714.85 572.407 1715.47 583.479 1714.72 593.651 cv
1714.33 598.875 1714.99 604.55 1720.07 607.343 cv
1724.62 609.848 1730.25 608.576 1734 605.244 cv
1742.98 597.271 1741.13 582.278 1738.52 571.871 cv
1736.48 563.712 1732.89 556.051 1728.07 549.233 cv
1737.06 540.794 1744.99 531.181 1751.4 520.7 cv
1750.52 513.6 1751.34 506.27 1753.65 500.721 cv
cp
1 .54902 .682353 rgb
f
1556.64 510.139 mo
1556.18 498.022 1549.91 488.814 1540.26 482.102 cv
1541.64 497.526 1546.07 512.648 1553.31 526.295 cv
1555.73 521.146 1556.83 515.204 1556.64 510.139 cv
cp
f
1764.79 489.813 mo
1757.92 496.072 1753.62 504.063 1753.24 514.015 cv
1753.2 515.136 1753.22 516.301 1753.31 517.49 cv
1755.9 512.959 1758.22 508.281 1760.22 503.467 cv
1762.06 499.012 1763.58 494.446 1764.79 489.813 cv
cp
f
1600.63 428.842 mo
1607.2 428.131 1606.11 417.927 1599.53 418.639 cv
1592.96 419.349 1594.06 429.554 1600.63 428.842 cv
cp
.0117647 .0470588 .105882 rgb
f
1704.77 425.492 mo
1711.81 424.73 1710.64 413.793 1703.59 414.556 cv
1696.55 415.317 1697.72 426.254 1704.77 425.492 cv
cp
f
1661.18 422.354 mo
1661.66 427.923 1662.07 440.417 1653.2 439.653 cv
1645.8 439.017 1646.09 425.142 1645.83 420.098 cv
1645.72 417.988 1642.42 417.976 1642.53 420.098 cv
1642.91 427.322 1643.02 442.433 1653.2 442.947 cv
1664.19 443.502 1665.14 430.059 1664.48 422.354 cv
1664.29 420.258 1661 420.239 1661.18 422.354 cv
cp
f
1601.04 434.84 mo
1596.65 434.84 1593.08 436.896 1593.08 439.433 cv
1593.08 441.969 1596.65 444.026 1601.04 444.026 cv
1605.44 444.026 1609 441.969 1609 439.433 cv
1609 436.896 1605.44 434.84 1601.04 434.84 cv
cp
1 .121569 .219608 rgb
f
1706.82 431.314 mo
1702.43 431.314 1698.86 433.371 1698.86 435.907 cv
1698.86 438.444 1702.43 440.5 1706.82 440.5 cv
1711.22 440.5 1714.78 438.444 1714.78 435.907 cv
1714.78 433.371 1711.22 431.314 1706.82 431.314 cv
cp
f
1556.23 496.845 mo
1554.62 492.968 1552.35 489.361 1549.47 486.297 cv
1546.7 483.349 1543.31 481.229 1540 478.992 cv
1538.1 477.702 1536.22 476.375 1534.5 474.826 cv
1529.17 470.001 1526.24 462.075 1532.41 456.641 cv
1534.99 454.366 1538.28 453.009 1541.68 452.09 cv
1541.85 451.19 1542.03 450.294 1542.23 449.401 cv
1535.93 450.947 1529.39 453.786 1527.06 459.926 cv
1523.37 469.643 1532.65 476.945 1539.66 481.675 cv
1539.86 481.813 1540.06 481.96 1540.26 482.102 cv
1549.91 488.814 1556.18 498.022 1556.64 510.139 cv
1556.83 515.204 1555.73 521.146 1553.31 526.295 cv
1550.37 532.557 1545.5 537.646 1538.66 538.547 cv
1539.45 537.292 1540.25 536.037 1541.04 534.781 cv
1541.75 533.736 1542.34 532.774 1542.75 532.077 cv
1543.58 530.687 1541.45 529.459 1540.59 530.814 cv
1539.65 532.31 1538.7 533.804 1537.75 535.299 cv
1537.29 535.86 1536.79 536.356 1536.24 536.707 cv
1533.84 538.235 1529.65 538.738 1530.86 534.281 cv
1531.76 530.973 1535.46 528.544 1537.01 525.458 cv
1537.6 524.273 1535.97 522.763 1535.04 523.943 cv
1533.46 525.951 1531.71 527.795 1529.45 529.068 cv
1528.08 529.917 1526.6 530.474 1525 530.739 cv
1523.92 528.948 1524.06 527.568 1525.41 526.6 cv
1527.18 524.077 1531.61 522.766 1534.18 521.213 cv
1538.98 518.305 1541.88 514.084 1540.2 508.298 cv
1536.61 495.942 1522.41 491.302 1512.54 485.355 cv
1505.48 481.108 1499.61 475.53 1498.01 467.104 cv
1496.2 457.512 1499.84 447.729 1506.4 440.729 cv
1517.94 428.398 1534.9 425.148 1551.17 423.514 cv
1551.6 422.632 1552.04 421.754 1552.49 420.882 cv
1538.69 422.18 1524.69 424.389 1512.92 432.092 cv
1501.53 439.545 1493.46 452.129 1495.34 466.136 cv
1497.11 479.279 1507.75 485.758 1518.46 491.49 cv
1524.15 494.532 1530.2 497.599 1534.33 502.706 cv
1537.39 506.482 1540 512.474 1536.22 516.579 cv
1533.96 519.038 1530.52 520.259 1527.7 521.927 cv
1524.88 523.59 1518.46 528.091 1521.79 531.966 cv
1523.69 534.175 1526.53 533.659 1529.26 532.166 cv
1527.79 534.777 1527.27 537.508 1529.74 540.157 cv
1531.53 542.069 1533.51 541.911 1535.39 540.784 cv
1535.62 541.027 1535.93 541.19 1536.29 541.194 cv
1545.24 541.282 1551.3 536.206 1554.87 529.154 cv
1559.82 519.377 1559.96 505.795 1556.23 496.845 cv
cp
.0117647 .0470588 .105882 rgb
f
1796.97 435.969 mo
1785.72 428.612 1772.45 426.263 1759.25 424.936 cv
1759.67 425.81 1760.08 426.69 1760.46 427.574 cv
1776.19 429.271 1792.35 432.717 1803.49 444.606 cv
1810.04 451.606 1813.68 461.389 1811.87 470.98 cv
1810.27 479.407 1804.4 484.984 1797.35 489.232 cv
1787.47 495.179 1773.27 499.819 1769.69 512.175 cv
1768.01 517.961 1770.9 522.182 1775.7 525.09 cv
1778.27 526.643 1782.7 527.954 1784.47 530.477 cv
1785.82 531.445 1785.96 532.825 1784.89 534.616 cv
1783.28 534.351 1781.8 533.793 1780.44 532.944 cv
1778.18 531.672 1776.42 529.828 1774.84 527.819 cv
1773.91 526.64 1772.28 528.15 1772.88 529.334 cv
1774.42 532.42 1778.12 534.85 1779.02 538.158 cv
1780.24 542.615 1776.04 542.112 1773.64 540.583 cv
1773.09 540.233 1772.59 539.737 1772.13 539.176 cv
1771.18 537.681 1770.23 536.186 1769.29 534.691 cv
1768.43 533.336 1766.3 534.563 1767.13 535.953 cv
1767.54 536.65 1768.13 537.613 1768.84 538.658 cv
1769.64 539.913 1770.43 541.168 1771.23 542.423 cv
1760 540.945 1754.07 528.207 1753.31 517.49 cv
1753.22 516.301 1753.2 515.136 1753.24 514.015 cv
1753.62 504.063 1757.92 496.072 1764.79 489.813 cv
1766.46 488.292 1768.27 486.871 1770.22 485.551 cv
1777.23 480.821 1786.52 473.519 1782.82 463.803 cv
1780.46 457.582 1773.78 454.75 1767.41 453.219 cv
1767.51 454.087 1767.6 454.957 1767.68 455.828 cv
1771.27 456.748 1774.76 458.127 1777.47 460.518 cv
1783.64 465.951 1780.71 473.878 1775.38 478.702 cv
1772.43 481.364 1769.01 483.375 1765.78 485.653 cv
1763.87 487.003 1762.03 488.445 1760.41 490.174 cv
1757.53 493.238 1755.27 496.845 1753.65 500.721 cv
1751.34 506.27 1750.52 513.6 1751.4 520.7 cv
1752.97 533.315 1759.93 545.204 1773.59 545.07 cv
1773.95 545.067 1774.26 544.904 1774.49 544.661 cv
1776.38 545.788 1778.35 545.946 1780.14 544.034 cv
1782.61 541.385 1782.09 538.654 1780.62 536.042 cv
1783.36 537.536 1786.19 538.052 1788.09 535.843 cv
1791.42 531.968 1785.01 527.467 1782.19 525.803 cv
1779.36 524.136 1775.92 522.915 1773.66 520.456 cv
1769.88 516.35 1772.5 510.359 1775.55 506.583 cv
1779.68 501.476 1785.73 498.409 1791.42 495.366 cv
1802.13 489.635 1812.77 483.156 1814.54 470.013 cv
1816.42 456.006 1808.36 443.422 1796.97 435.969 cv
cp
f
529.065 1302.66 mo
528.257 1303.37 527.462 1304.11 526.728 1304.9 cv
527.284 1304.84 527.829 1304.86 528.348 1305.01 cv
532.088 1306.1 529.727 1310.99 527.744 1312.62 cv
525.838 1314.19 521.645 1315.39 520.724 1312.14 cv
520.538 1312.4 520.339 1312.66 520.176 1312.93 cv
518.977 1314.92 517.729 1318.27 520.313 1319.59 cv
522.729 1317.36 526.097 1315.92 529.018 1315.38 cv
530.079 1315.18 530.977 1316.2 530.43 1317.21 cv
528.694 1320.42 524.854 1323.19 521.055 1322.66 cv
519.398 1324.92 518.052 1328.5 522.773 1329.45 cv
525.846 1330.07 529.961 1327.59 532.833 1325.95 cv
532.576 1317.52 532.117 1309.09 531.46 1300.68 cv
530.646 1301.32 529.84 1301.97 529.065 1302.66 cv
cp
0 .694118 .54902 rgb
f
468.248 1260.78 mo
464.627 1260.78 461.692 1259.09 461.692 1257 cv
461.692 1254.91 464.627 1253.21 468.248 1253.21 cv
471.869 1253.21 474.804 1254.91 474.804 1257 cv
474.804 1259.09 471.869 1260.78 468.248 1260.78 cv
cp
465.585 1239.41 mo
471.39 1238.78 472.356 1247.79 466.56 1248.42 cv
460.755 1249.05 459.789 1240.04 465.585 1239.41 cv
cp
424.081 1262.79 mo
415.697 1262.37 415.604 1249.92 415.297 1243.98 cv
415.207 1242.23 417.92 1242.24 418.01 1243.98 cv
418.225 1248.13 417.991 1259.56 424.081 1260.08 cv
431.388 1260.71 431.053 1250.42 430.657 1245.83 cv
430.507 1244.09 433.221 1244.11 433.37 1245.83 cv
433.917 1252.18 433.132 1263.25 424.081 1262.79 cv
cp
381.125 1263.68 mo
377.504 1263.68 374.569 1261.99 374.569 1259.9 cv
374.569 1257.81 377.504 1256.12 381.125 1256.12 cv
384.746 1256.12 387.681 1257.81 387.681 1259.9 cv
387.681 1261.99 384.746 1263.68 381.125 1263.68 cv
cp
379.879 1242.77 mo
385.295 1242.19 386.196 1250.59 380.788 1251.18 cv
375.372 1251.76 374.472 1243.36 379.879 1242.77 cv
cp
517.077 1325.96 mo
517.157 1324.39 517.68 1322.99 518.488 1321.74 cv
514.887 1319.44 516.362 1314.16 518.413 1311.08 cv
519.083 1310.08 520.207 1308.78 521.534 1307.63 cv
522.968 1304.91 525.663 1302.33 527.297 1300.89 cv
528.573 1299.76 529.881 1298.67 531.202 1297.6 cv
530.464 1288.82 529.535 1280.06 528.36 1271.33 cv
528.044 1268.98 527.69 1266.61 527.317 1264.24 cv
527.179 1263.36 527.045 1262.49 526.899 1261.61 cv
525.679 1254.27 524.152 1246.85 522.259 1239.5 cv
522.052 1238.69 521.846 1237.89 521.631 1237.09 cv
517.828 1222.98 512.604 1209.19 505.372 1196.84 cv
509.625 1191.84 515.978 1181.96 508.562 1178.38 cv
504.006 1176.19 498.639 1178.19 494.42 1181.29 cv
485.563 1170.79 474.596 1162.11 460.965 1156.3 cv
454.872 1153.7 448.568 1152.02 442.187 1151.16 cv
442.288 1144.9 440.897 1137.6 434.771 1138.11 cv
431.213 1138.4 429.367 1141.95 428.052 1144.84 cv
427.181 1146.76 426.489 1148.72 425.94 1150.71 cv
416.45 1151.45 407.039 1153.86 398.14 1157.72 cv
388.104 1162.08 379.057 1168.09 371.038 1175.28 cv
367.067 1170.85 361.458 1166.7 357.56 1171.86 cv
354.327 1176.14 356.242 1182.56 359.12 1187.71 cv
355.108 1192.56 351.448 1197.71 348.176 1203.12 cv
337.427 1220.87 330.505 1240.74 325.888 1260.96 cv
325.7 1261.79 325.512 1262.61 325.331 1263.44 cv
324.74 1266.13 324.185 1268.84 323.67 1271.54 cv
322.663 1276.83 321.81 1282.16 321.098 1287.5 cv
320.99 1288.3 320.89 1289.11 320.79 1289.91 cv
318.201 1310.64 317.83 1331.65 319.767 1352.46 cv
320.205 1357.16 320.769 1361.84 321.432 1366.52 cv
321.305 1366.59 321.187 1366.67 321.076 1366.76 cv
321.677 1369.15 322.625 1371.33 324.39 1372.9 cv
324.409 1372.89 324.429 1372.89 324.448 1372.89 cv
329.352 1376.24 336.047 1376.59 342.255 1376.67 cv
342.383 1381.7 343.149 1386.68 345.366 1391.27 cv
347.137 1394.93 351.07 1400.91 355.766 1400.64 cv
360.609 1400.36 361.731 1394.91 360.767 1391.09 cv
359.935 1387.8 358.615 1385.1 358.601 1381.62 cv
358.595 1380.08 358.776 1378.59 359.121 1377.15 cv
369.595 1377.5 380.069 1377.82 390.546 1378.07 cv
419.199 1378.75 447.866 1378.83 476.521 1378.32 cv
479.075 1378.27 481.634 1378.24 484.195 1378.21 cv
484.604 1380.58 484.766 1382.98 484.594 1385.42 cv
484.396 1388.25 482.93 1391.49 483.284 1394.33 cv
483.747 1398.04 487.455 1399.69 490.813 1398.61 cv
494.832 1397.32 497.756 1392.86 499.329 1389.21 cv
500.89 1385.6 501.522 1381.78 501.723 1377.9 cv
507.495 1377.75 513.26 1377.52 518.995 1377.1 cv
523.507 1376.77 527.869 1375.54 530.362 1371.48 cv
533.161 1366.91 532.794 1360.86 532.924 1355.73 cv
533.149 1346.85 533.126 1337.97 532.908 1329.08 cv
530.088 1330.53 527.177 1331.62 524.333 1331.87 cv
520.486 1332.22 516.859 1330.22 517.077 1325.96 cv
cp
f
524.908 1310.36 mo
526.853 1310.99 527.566 1310.04 527.047 1307.52 cv
526.281 1307.85 525.515 1308.18 524.749 1308.5 cv
524.303 1308.75 523.871 1309.04 523.454 1309.34 cv
523.375 1309.91 523.727 1310.32 524.908 1310.36 cv
cp
f
380.788 1251.18 mo
386.196 1250.59 385.295 1242.19 379.879 1242.77 cv
374.472 1243.36 375.372 1251.76 380.788 1251.18 cv
cp
.0117647 .0470588 .105882 rgb
f
466.56 1248.42 mo
472.356 1247.79 471.39 1238.78 465.585 1239.41 cv
459.789 1240.04 460.755 1249.05 466.56 1248.42 cv
cp
f
430.657 1245.83 mo
431.053 1250.42 431.388 1260.71 424.081 1260.08 cv
417.991 1259.56 418.225 1248.13 418.01 1243.98 cv
417.92 1242.24 415.207 1242.23 415.297 1243.98 cv
415.604 1249.92 415.697 1262.37 424.081 1262.79 cv
433.132 1263.25 433.917 1252.18 433.37 1245.83 cv
433.221 1244.11 430.507 1244.09 430.657 1245.83 cv
cp
f
381.125 1256.12 mo
377.504 1256.12 374.569 1257.81 374.569 1259.9 cv
374.569 1261.99 377.504 1263.68 381.125 1263.68 cv
384.746 1263.68 387.681 1261.99 387.681 1259.9 cv
387.681 1257.81 384.746 1256.12 381.125 1256.12 cv
cp
1 .784314 .8 rgb
f
468.248 1253.21 mo
464.627 1253.21 461.692 1254.91 461.692 1257 cv
461.692 1259.09 464.627 1260.78 468.248 1260.78 cv
471.869 1260.78 474.804 1259.09 474.804 1257 cv
474.804 1254.91 471.869 1253.21 468.248 1253.21 cv
cp
f
523.454 1309.34 mo
523.871 1309.04 524.303 1308.75 524.749 1308.5 cv
525.515 1308.18 526.281 1307.85 527.047 1307.52 cv
527.566 1310.04 526.853 1310.99 524.908 1310.36 cv
523.727 1310.32 523.375 1309.91 523.454 1309.34 cv
cp
564.129 1238.29 mo
550.475 1232.54 535.741 1233.77 521.631 1237.09 cv
521.846 1237.89 522.052 1238.69 522.259 1239.5 cv
534.782 1236.53 547.758 1235.25 560.166 1239.45 cv
567.465 1241.92 575.181 1246.47 578.669 1253.64 cv
582.678 1261.87 580.904 1271.5 577.347 1279.54 cv
571.626 1292.46 562.318 1303.99 551.638 1313.16 cv
546.177 1317.85 540.202 1321.95 533.872 1325.37 cv
533.55 1325.54 533.2 1325.74 532.833 1325.95 cv
529.961 1327.59 525.846 1330.07 522.773 1329.45 cv
518.052 1328.5 519.398 1324.92 521.055 1322.66 cv
524.854 1323.19 528.694 1320.42 530.43 1317.21 cv
530.977 1316.2 530.079 1315.18 529.018 1315.38 cv
526.097 1315.92 522.729 1317.36 520.313 1319.59 cv
517.729 1318.27 518.977 1314.92 520.176 1312.93 cv
520.339 1312.66 520.538 1312.4 520.724 1312.14 cv
521.645 1315.39 525.838 1314.19 527.744 1312.62 cv
529.727 1310.99 532.088 1306.1 528.348 1305.01 cv
527.829 1304.86 527.284 1304.84 526.728 1304.9 cv
527.462 1304.11 528.257 1303.37 529.065 1302.66 cv
529.84 1301.97 530.646 1301.32 531.46 1300.68 cv
533.062 1299.42 534.708 1298.22 536.302 1296.95 cv
541.146 1293.1 545.674 1288.85 549.808 1284.25 cv
553.419 1280.23 557.705 1275.68 559.709 1270.58 cv
563.12 1261.91 556.488 1256.47 548.241 1256.16 cv
540.803 1255.88 533.546 1258.17 526.899 1261.61 cv
527.045 1262.49 527.179 1263.36 527.317 1264.24 cv
530.537 1262.53 533.9 1261.11 537.44 1260.13 cv
540.915 1259.16 544.625 1258.51 548.241 1258.66 cv
553.637 1258.88 559.617 1261.8 557.875 1268.31 cv
555.951 1275.49 548.516 1282.3 543.377 1287.36 cv
539.568 1291.11 535.322 1294.27 531.202 1297.6 cv
529.881 1298.67 528.573 1299.76 527.297 1300.89 cv
525.663 1302.33 522.968 1304.91 521.534 1307.63 cv
520.207 1308.78 519.083 1310.08 518.413 1311.08 cv
516.362 1314.16 514.887 1319.44 518.488 1321.74 cv
517.68 1322.99 517.157 1324.39 517.077 1325.96 cv
516.859 1330.22 520.486 1332.22 524.333 1331.87 cv
527.177 1331.62 530.088 1330.53 532.908 1329.08 cv
536.61 1327.19 540.154 1324.7 543.177 1322.68 cv
549.125 1318.72 554.677 1314.14 559.702 1309.06 cv
570.041 1298.6 580.506 1284.59 582.974 1269.75 cv
585.414 1255.09 577.379 1243.88 564.129 1238.29 cv
cp
.0117647 .0470588 .105882 rgb
f
279.991 1163.9 mo
280.33 1165.56 280.128 1167.06 279.413 1168.38 cv
279.068 1166.84 278.879 1165.27 278.864 1163.7 cv
279.373 1162.63 279.741 1162.76 279.991 1163.9 cv
cp
290.372 1153.84 mo
290.922 1154.71 291.039 1155.69 290.706 1156.76 cv
290.712 1158.99 289.896 1160.98 288.815 1162.85 cv
288.791 1159.78 289.317 1156.71 290.372 1153.84 cv
cp
295.786 1275.01 mo
286.249 1266.16 279.964 1254.48 276.179 1242.13 cv
272.146 1228.98 270.615 1215.02 270.2 1201.31 cv
269.992 1194.44 270.158 1187.54 270.917 1180.7 cv
271.386 1176.47 272.055 1172.24 273.044 1168.11 cv
273.341 1166.87 273.772 1163.63 274.884 1163 cv
275.375 1163.09 275.867 1163.18 276.358 1163.26 cv
276.319 1166.01 276.771 1168.77 277.663 1171.45 cv
277.949 1172.31 279.073 1172.71 279.752 1172 cv
282.56 1169.05 283.881 1164.29 281.256 1160.71 cv
280.695 1159.95 280.042 1159.41 279.346 1159.08 cv
279.745 1157.34 280.394 1155.65 281.323 1154.05 cv
282.783 1151.54 283.001 1149.91 286.293 1150.06 cv
287.326 1149.68 287.982 1151.26 288.622 1151.52 cv
286.469 1156.4 285.888 1161.63 286.655 1166.97 cv
286.822 1168.13 288.407 1168.06 288.94 1167.27 cv
291.713 1163.17 294.918 1157.92 292.751 1152.84 cv
292.469 1152.18 292.095 1151.54 291.652 1150.95 cv
292.861 1148.64 294.441 1146.52 296.398 1144.71 cv
299.009 1142.3 303.752 1141.99 304.978 1146.25 cv
305.433 1147.83 305.277 1149.98 305.251 1151.61 cv
305.189 1155.5 304.94 1159.38 304.629 1163.25 cv
303.351 1179.22 300.578 1195.14 301.151 1211.21 cv
301.595 1223.65 303.966 1236.34 310.059 1247.32 cv
313.502 1253.53 318.733 1260.32 325.331 1263.44 cv
325.512 1262.61 325.7 1261.79 325.888 1260.96 cv
320.624 1258.28 316.358 1252.93 313.406 1248.11 cv
309.291 1241.4 306.748 1233.85 305.266 1226.14 cv
301.941 1208.85 304.278 1191.23 306.108 1173.91 cv
307.002 1165.46 308.48 1156.31 307.695 1147.8 cv
307.347 1144.03 305.826 1139.63 301.383 1139.53 cv
296.418 1139.42 292.071 1145.11 289.82 1149.12 cv
288.536 1148.17 286.996 1147.62 285.359 1147.76 cv
281.55 1148.07 279.254 1152.09 277.979 1155.22 cv
277.514 1156.37 277.171 1157.53 276.909 1158.71 cv
275.72 1158.88 274.548 1159.53 273.583 1160.6 cv
269.743 1164.84 269.471 1172.57 268.76 1177.91 cv
267.686 1185.97 267.442 1194.13 267.734 1202.25 cv
268.723 1229.79 274.313 1260.9 296.894 1279.29 cv
303.737 1284.86 312.135 1289.02 320.79 1289.91 cv
320.89 1289.11 320.99 1288.3 321.098 1287.5 cv
311.722 1286.53 302.625 1281.36 295.786 1275.01 cv
cp
f
2438.99 898.969 mo
2435.6 898.969 2432.85 897.386 2432.85 895.432 cv
2432.85 893.478 2435.6 891.894 2438.99 891.894 cv
2442.37 891.894 2445.12 893.478 2445.12 895.432 cv
2445.12 897.386 2442.37 898.969 2438.99 898.969 cv
cp
2397.68 900.854 mo
2389.84 900.458 2389.75 888.817 2389.46 883.253 cv
2389.38 881.618 2391.92 881.628 2392 883.253 cv
2392.2 887.139 2391.98 897.826 2397.68 898.316 cv
2404.51 898.904 2404.2 889.281 2403.83 884.991 cv
2403.69 883.361 2406.23 883.376 2406.37 884.991 cv
2406.88 890.927 2406.14 901.281 2397.68 900.854 cv
cp
2357.5 901.685 mo
2354.12 901.685 2351.37 900.101 2351.37 898.146 cv
2351.37 896.193 2354.12 894.609 2357.5 894.609 cv
2360.89 894.609 2363.63 896.193 2363.63 898.146 cv
2363.63 900.101 2360.89 901.685 2357.5 901.685 cv
cp
2356.34 882.129 mo
2361.4 881.581 2362.25 889.441 2357.19 889.989 cv
2352.12 890.537 2351.28 882.677 2356.34 882.129 cv
cp
2436.5 878.984 mo
2441.92 878.396 2442.83 886.821 2437.41 887.408 cv
2431.98 887.996 2431.07 879.571 2436.5 878.984 cv
cp
2511.37 865.087 mo
2510.79 859.554 2505.23 858.794 2501.37 861.688 cv
2495.89 865.79 2491.02 870.431 2484.95 872.909 cv
2481.32 861.817 2473.63 853.698 2463.62 847.943 cv
2472.79 834.758 2478.46 818.982 2476.61 802.823 cv
2475.02 788.823 2467.65 776.29 2457.34 766.951 cv
2456.59 766.269 2455.82 765.604 2455.03 764.958 cv
2451.42 761.97 2447.49 759.356 2443.36 757.19 cv
2424.5 747.305 2401.79 745.725 2380.99 749.538 cv
2380.05 749.71 2379.13 749.905 2378.2 750.099 cv
2377.79 750.184 2377.38 750.256 2376.97 750.346 cv
2356.29 754.881 2336.08 766.9 2327.12 786.835 cv
2317.98 807.18 2322.79 830.997 2338.21 846.479 cv
2329.09 851.743 2321.07 858.839 2315.3 867.31 cv
2310.24 864.656 2305.85 861.137 2301.59 856.872 cv
2298.43 853.712 2291.07 851.211 2289.89 857.756 cv
2288.86 863.519 2294.96 870.809 2298.62 874.658 cv
2301.42 877.617 2304.66 880.067 2308.17 882.03 cv
2306.14 888.654 2305.43 895.796 2306.4 903.321 cv
2308.24 917.596 2316.47 931.068 2329.29 937.99 cv
2330.61 938.703 2331.97 939.337 2333.35 939.936 cv
2327.96 945.298 2323.95 951.83 2321.74 958.954 cv
2319.88 958.321 2318.06 957.58 2316.28 956.695 cv
2312.83 954.977 2309.95 952.497 2306.63 950.616 cv
2301.91 947.938 2295.46 949.907 2296.3 956.209 cv
2297.12 962.334 2303.29 968.403 2307.82 972.072 cv
2311.65 975.174 2315.95 977.55 2320.54 979.196 cv
2320.61 979.584 2320.67 979.97 2320.75 980.357 cv
2324.96 1000.03 2343.2 1012.12 2361.51 1017.06 cv
2382.89 1022.82 2406.26 1022.48 2427.76 1017.61 cv
2432.15 1016.62 2436.57 1015.42 2440.82 1013.91 cv
2440.95 1013.88 2441.09 1013.86 2441.23 1013.82 cv
2457.41 1009.38 2470.08 995.607 2472.46 978.898 cv
2472.51 978.522 2472.55 978.148 2472.59 977.773 cv
2475.01 976.647 2477.32 975.281 2479.49 973.653 cv
2485 969.534 2491.23 963.013 2492.71 956.041 cv
2493.94 950.284 2488.83 945.549 2483.54 949.113 cv
2480.17 951.387 2477.6 954.74 2474.15 957.024 cv
2473.17 957.676 2472.16 958.277 2471.14 958.843 cv
2469.26 951.742 2466.04 944.978 2462.15 938.583 cv
2469.51 935.738 2476.17 931.556 2481.02 924.998 cv
2485.83 918.489 2487.48 910.527 2487.84 902.579 cv
2488.04 898.133 2488.02 893.585 2487.71 889.066 cv
2492.53 887.55 2496.73 884.366 2500.72 880.986 cv
2505.12 877.259 2512.06 871.666 2511.37 865.087 cv
cp
1 .784314 .8 rgb
f
2357.19 889.989 mo
2362.25 889.441 2361.4 881.581 2356.34 882.129 cv
2351.28 882.677 2352.12 890.537 2357.19 889.989 cv
cp
.0117647 .0470588 .105882 rgb
f
2437.41 887.408 mo
2442.83 886.821 2441.92 878.396 2436.5 878.984 cv
2431.07 879.571 2431.98 887.996 2437.41 887.408 cv
cp
f
2403.83 884.991 mo
2404.2 889.281 2404.51 898.904 2397.68 898.316 cv
2391.98 897.826 2392.2 887.139 2392 883.253 cv
2391.92 881.628 2389.38 881.618 2389.46 883.253 cv
2389.75 888.817 2389.84 900.458 2397.68 900.854 cv
2406.14 901.281 2406.88 890.927 2406.37 884.991 cv
2406.23 883.376 2403.69 883.361 2403.83 884.991 cv
cp
f
2357.5 894.609 mo
2354.12 894.609 2351.37 896.193 2351.37 898.146 cv
2351.37 900.101 2354.12 901.685 2357.5 901.685 cv
2360.89 901.685 2363.63 900.101 2363.63 898.146 cv
2363.63 896.193 2360.89 894.609 2357.5 894.609 cv
cp
1 .121569 .219608 rgb
f
2438.99 891.894 mo
2435.6 891.894 2432.85 893.478 2432.85 895.432 cv
2432.85 897.386 2435.6 898.969 2438.99 898.969 cv
2442.37 898.969 2445.12 897.386 2445.12 895.432 cv
2445.12 893.478 2442.37 891.894 2438.99 891.894 cv
cp
f
2090.92 882.418 mo
2087.25 882.418 2084.27 880.7 2084.27 878.582 cv
2084.27 876.463 2087.25 874.746 2090.92 874.746 cv
2094.59 874.746 2097.57 876.463 2097.57 878.582 cv
2097.57 880.7 2094.59 882.418 2090.92 882.418 cv
cp
2088.22 860.748 mo
2094.11 860.11 2095.08 869.246 2089.21 869.882 cv
2083.32 870.52 2082.34 861.384 2088.22 860.748 cv
cp
2046.13 884.462 mo
2037.62 884.032 2037.53 871.41 2037.22 865.376 cv
2037.13 863.604 2039.88 863.615 2039.97 865.376 cv
2040.19 869.59 2039.95 881.179 2046.13 881.711 cv
2053.54 882.349 2053.2 871.913 2052.8 867.261 cv
2052.64 865.494 2055.4 865.511 2055.55 867.261 cv
2056.1 873.697 2055.31 884.926 2046.13 884.462 cv
cp
2002.56 885.363 mo
1998.89 885.363 1995.92 883.646 1995.92 881.526 cv
1995.92 879.408 1998.89 877.69 2002.56 877.69 cv
2006.24 877.69 2009.21 879.408 2009.21 881.526 cv
2009.21 883.646 2006.24 885.363 2002.56 885.363 cv
cp
2001.3 864.158 mo
2006.79 863.563 2007.71 872.087 2002.22 872.681 cv
1996.73 873.275 1995.82 864.752 2001.3 864.158 cv
cp
2143.03 795.569 mo
2136.9 785.364 2125.08 782.181 2113.96 781.037 cv
2112.91 780.93 2111.86 780.843 2110.82 780.748 cv
2109.97 780.67 2109.12 780.583 2108.26 780.513 cv
2095.05 779.431 2081.68 779.216 2068.46 778.907 cv
2063.53 778.792 2058.6 778.729 2053.66 778.717 cv
2052.81 778.715 2051.95 778.711 2051.09 778.712 cv
2040.68 778.73 2030.28 779.012 2019.89 779.684 cv
2006.56 780.547 1992.34 781.225 1979.57 785.518 cv
1968.49 789.24 1959.45 796.487 1956.1 808.02 cv
1952.2 821.417 1954.51 836.744 1954.97 850.454 cv
1956.05 882.836 1956.7 915.265 1958.22 947.628 cv
1958.59 955.363 1959.62 963.977 1963.85 970.548 cv
1966.36 972.858 1969.11 974.79 1971.97 976.556 cv
1972.01 983.04 1972.46 989.507 1973.33 995.947 cv
1973.9 1000.13 1974.01 1008.97 1979.97 1009.25 cv
1986.35 1009.55 1986.83 1001.44 1987.43 996.967 cv
1988.07 992.111 1988.55 987.239 1988.97 982.36 cv
2002.71 984.83 2017.08 984.688 2031.23 984.011 cv
2045.31 984.197 2059.43 983.643 2073.36 981.795 cv
2082.31 981.246 2091.26 980.492 2100.11 979.209 cv
2100.3 979.182 2100.49 979.147 2100.68 979.118 cv
2100.08 984.966 2100.2 990.83 2101.2 996.678 cv
2101.91 1000.82 2103.46 1008.86 2109.47 1007.47 cv
2115.24 1006.14 2114.73 997.055 2115.21 992.651 cv
2115.86 986.645 2116.34 980.624 2116.68 974.595 cv
2122.16 972.069 2127.04 968.451 2130.8 963.229 cv
2137.96 953.294 2140 940.659 2141.64 928.815 cv
2143.79 913.316 2145.43 897.75 2146.55 882.142 cv
2147.7 865.909 2148.29 849.636 2148.31 833.361 cv
2148.32 821.149 2149.61 806.506 2143.03 795.569 cv
cp
1 .482353 .215686 rgb
f
2002.22 872.681 mo
2007.71 872.087 2006.79 863.563 2001.3 864.158 cv
1995.82 864.752 1996.73 873.275 2002.22 872.681 cv
cp
.0117647 .0470588 .105882 rgb
f
2089.21 869.882 mo
2095.08 869.246 2094.11 860.11 2088.22 860.748 cv
2082.34 861.384 2083.32 870.52 2089.21 869.882 cv
cp
f
2052.8 867.261 mo
2053.2 871.913 2053.54 882.349 2046.13 881.711 cv
2039.95 881.179 2040.19 869.59 2039.97 865.376 cv
2039.88 863.615 2037.13 863.604 2037.22 865.376 cv
2037.53 871.41 2037.62 884.032 2046.13 884.462 cv
2055.31 884.926 2056.1 873.697 2055.55 867.261 cv
2055.4 865.511 2052.64 865.494 2052.8 867.261 cv
cp
f
2002.56 877.69 mo
1998.89 877.69 1995.92 879.408 1995.92 881.526 cv
1995.92 883.646 1998.89 885.363 2002.56 885.363 cv
2006.24 885.363 2009.21 883.646 2009.21 881.526 cv
2009.21 879.408 2006.24 877.69 2002.56 877.69 cv
cp
1 .121569 .219608 rgb
f
2090.92 874.746 mo
2087.25 874.746 2084.27 876.463 2084.27 878.582 cv
2084.27 880.7 2087.25 882.418 2090.92 882.418 cv
2094.59 882.418 2097.57 880.7 2097.57 878.582 cv
2097.57 876.463 2094.59 874.746 2090.92 874.746 cv
cp
f
2087.65 744.683 mo
2088.04 749.342 2087.43 754.081 2085.86 758.484 cv
2085.21 760.307 2083.55 764.997 2081.78 766.13 cv
2075.28 770.285 2077.5 760.925 2077.94 759.334 cv
2079.17 754.806 2081.85 750.798 2084.71 747.14 cv
2085.47 746.165 2086.43 744.847 2087.52 743.495 cv
2087.57 743.892 2087.62 744.29 2087.65 744.683 cv
cp
2103.44 750.044 mo
2103.41 752.788 2103.01 755.557 2102.2 758.184 cv
2101.88 759.53 2101.34 760.773 2100.58 761.914 cv
2097.49 766.163 2094.41 763.496 2095.04 759.657 cv
2095.9 755.361 2098.97 750.972 2101.57 747.531 cv
2101.97 746.991 2102.51 746.347 2103.13 745.67 cv
2103.38 747.23 2103.45 748.77 2103.44 750.044 cv
cp
2060.92 759.284 mo
2064.63 751.411 2069.02 742.776 2074.84 736.235 cv
2078.11 732.569 2084.07 731.743 2086.09 737.226 cv
2086.47 738.24 2086.76 739.304 2087 740.38 cv
2085.86 741.675 2084.82 743.02 2083.86 744.202 cv
2080.35 748.511 2077.03 753.247 2075.52 758.67 cv
2074.68 761.715 2073.43 767.331 2076.44 769.646 cv
2079.41 771.923 2082.87 768.903 2084.59 766.565 cv
2089.53 759.885 2091.55 749.551 2089.82 740.897 cv
2092.1 738.586 2094.74 736.814 2097.42 737.445 cv
2099.97 738.042 2101.47 740.087 2102.34 742.512 cv
2099.32 745.659 2096.84 749.666 2094.96 753.334 cv
2093.37 756.415 2091.07 760.981 2092.98 764.445 cv
2094.6 767.376 2098.03 767.503 2100.52 765.629 cv
2104.12 762.925 2105.21 757.644 2105.71 753.473 cv
2106.01 750.859 2105.93 747.134 2105.1 743.697 cv
2108.97 740.18 2114.11 737.503 2115.01 745.163 cv
2115.56 749.903 2114.42 755.408 2113.65 760.045 cv
2112.48 767.032 2110.66 773.868 2108.26 780.513 cv
2109.12 780.583 2109.97 780.67 2110.82 780.748 cv
2114.15 771.311 2116.34 761.523 2117.24 751.503 cv
2117.58 747.712 2118.36 742.441 2115.37 739.38 cv
2112.38 736.314 2108.06 737.753 2105.08 740.026 cv
2104.77 740.262 2104.48 740.53 2104.18 740.785 cv
2102.58 736.868 2099.68 734.032 2094.81 734.986 cv
2092.67 735.405 2090.8 736.635 2089.13 738.173 cv
2088.77 737.043 2088.36 735.948 2087.87 734.917 cv
2085.94 730.93 2082.27 729.052 2077.97 730.724 cv
2072.57 732.824 2069.09 739.719 2066.24 744.291 cv
2059.56 754.998 2054.53 766.608 2051.09 778.712 cv
2051.95 778.711 2052.81 778.715 2053.66 778.717 cv
2055.58 772.067 2057.97 765.566 2060.92 759.284 cv
cp
.0117647 .0470588 .105882 rgb
f
1324.27 1291.25 mo
1319.41 1291.25 1315.47 1288.98 1315.47 1286.17 cv
1315.47 1283.37 1319.41 1281.09 1324.27 1281.09 cv
1329.14 1281.09 1333.08 1283.37 1333.08 1286.17 cv
1333.08 1288.98 1329.14 1291.25 1324.27 1291.25 cv
cp
1320.7 1262.56 mo
1328.49 1261.72 1329.79 1273.81 1322.01 1274.65 cv
1314.21 1275.5 1312.92 1263.4 1320.7 1262.56 cv
cp
1265.24 1295.09 mo
1249.9 1296.07 1247.81 1276.94 1247.86 1266.02 cv
1247.87 1265.32 1248.4 1265.04 1248.93 1265.1 cv
1249.1 1265.01 1249.29 1264.95 1249.51 1264.96 cv
1259.13 1265.49 1268.75 1265.67 1278.39 1265.47 cv
1278.66 1265.46 1278.89 1265.55 1279.07 1265.68 cv
1279.71 1265.72 1280.17 1266.36 1280.03 1267.01 cv
1280.03 1267.03 1280.04 1267.04 1280.04 1267.05 cv
1280.27 1277.34 1278.99 1294.22 1265.24 1295.09 cv
cp
1207.31 1295.15 mo
1202.44 1295.15 1198.5 1292.87 1198.5 1290.07 cv
1198.5 1287.26 1202.44 1284.99 1207.31 1284.99 cv
1212.17 1284.99 1216.11 1287.26 1216.11 1290.07 cv
1216.11 1292.87 1212.17 1295.15 1207.31 1295.15 cv
cp
1205.63 1267.08 mo
1212.91 1266.29 1214.11 1277.57 1206.85 1278.36 cv
1199.58 1279.14 1198.37 1267.86 1205.63 1267.08 cv
cp
1358.73 1217.4 mo
1358.35 1216.93 1357.98 1216.46 1357.6 1216.01 cv
1357.83 1215.92 1358.06 1215.8 1358.3 1215.71 cv
1363.14 1213.7 1367.38 1210.32 1370.22 1205.64 cv
1375.88 1196.31 1374.56 1183.28 1366.94 1175.42 cv
1359.52 1167.75 1346.76 1165.8 1337.52 1171.27 cv
1337 1171.58 1336.5 1171.91 1336.01 1172.26 cv
1335.37 1172.71 1334.77 1173.19 1334.19 1173.7 cv
1329.12 1178.16 1326.24 1184.75 1326.15 1191.45 cv
1304.9 1181.13 1280.36 1178.49 1257 1180.8 cv
1241.48 1182.34 1225.04 1185.7 1210.62 1192.6 cv
1208.47 1184.99 1204.34 1178.1 1197.33 1173.75 cv
1196.58 1173.28 1195.8 1172.88 1195.01 1172.5 cv
1194.25 1172.14 1193.48 1171.82 1192.69 1171.55 cv
1184.91 1168.87 1176.14 1170.49 1169.61 1175.86 cv
1161.36 1182.64 1158.58 1194.37 1161.81 1204.41 cv
1163.69 1210.25 1167.38 1215.09 1172.08 1218.7 cv
1172.82 1219.27 1173.58 1219.8 1174.37 1220.31 cv
1175.53 1221.05 1176.73 1221.74 1177.98 1222.34 cv
1176.36 1224.37 1174.82 1226.45 1173.35 1228.58 cv
1172.4 1229.96 1171.47 1231.35 1170.58 1232.77 cv
1159.72 1250.05 1153.48 1270.21 1153.2 1290.6 cv
1153.17 1292.43 1153.19 1294.26 1153.26 1296.1 cv
1153.54 1303.19 1154.54 1310.27 1156.33 1317.24 cv
1161.52 1337.35 1172.47 1355.17 1187.07 1369.08 cv
1184.24 1374.12 1182.08 1379.53 1180.74 1385.19 cv
1179.31 1391.28 1176.81 1401.52 1183.13 1405.75 cv
1189.09 1409.74 1194.79 1403.4 1196.17 1397.98 cv
1197.31 1393.52 1197.72 1389.12 1199.51 1384.82 cv
1200.1 1383.41 1200.78 1382.05 1201.52 1380.74 cv
1204.94 1383.06 1208.49 1385.2 1212.14 1387.13 cv
1210.66 1391.44 1209.58 1395.88 1208.99 1400.45 cv
1208.28 1405.91 1206.95 1414.84 1213.12 1417.88 cv
1218.56 1420.56 1223.55 1415.54 1224.7 1410.5 cv
1225.6 1406.57 1225.29 1402.49 1226.24 1398.56 cv
1226.63 1396.96 1227.14 1395.41 1227.75 1393.92 cv
1233.25 1395.82 1238.92 1397.3 1244.7 1398.3 cv
1243.85 1402.88 1243.57 1407.56 1243.95 1412.24 cv
1244.37 1417.21 1244.99 1424.18 1250.51 1426.13 cv
1256 1428.06 1259.31 1422.8 1260.09 1418.16 cv
1261.11 1412.11 1261.75 1405.96 1262.43 1399.83 cv
1266.78 1399.84 1271.1 1399.59 1275.39 1399.11 cv
1277.42 1404.18 1278.95 1409.4 1280.15 1414.84 cv
1281.26 1419.9 1284.26 1426.37 1290.62 1425.35 cv
1297.59 1424.22 1296.67 1415.77 1295.77 1410.75 cv
1294.87 1405.74 1293.54 1400.85 1291.87 1396.08 cv
1296.82 1394.8 1301.69 1393.22 1306.44 1391.34 cv
1307.39 1394.83 1308.12 1398.41 1309.1 1401.84 cv
1310.68 1407.42 1313.48 1416.61 1320.9 1416.07 cv
1332.83 1415.21 1326.6 1396.44 1321.25 1384.32 cv
1326.1 1381.62 1330.78 1378.59 1335.23 1375.27 cv
1337.68 1381.52 1339 1387.92 1340.25 1394.85 cv
1341.27 1400.52 1346.92 1407.63 1353.03 1402.84 cv
1358.51 1398.55 1356.13 1389.01 1355.16 1383.24 cv
1353.99 1376.29 1351.95 1369.57 1349.21 1363.11 cv
1361.64 1350.56 1371.39 1335.32 1377.15 1318.22 cv
1379.74 1310.53 1381.35 1302.57 1382.05 1294.54 cv
1382.24 1292.32 1382.37 1290.08 1382.42 1287.85 cv
1383.01 1262.52 1374.61 1237.01 1358.73 1217.4 cv
cp
0 .294118 .65098 rgb
f
1206.85 1278.36 mo
1214.11 1277.57 1212.91 1266.29 1205.63 1267.08 cv
1198.37 1267.86 1199.58 1279.14 1206.85 1278.36 cv
cp
.0117647 .0470588 .105882 rgb
f
1322.01 1274.65 mo
1329.79 1273.81 1328.49 1261.72 1320.7 1262.56 cv
1312.92 1263.4 1314.21 1275.5 1322.01 1274.65 cv
cp
f
1207.31 1284.99 mo
1202.44 1284.99 1198.5 1287.26 1198.5 1290.07 cv
1198.5 1292.87 1202.44 1295.15 1207.31 1295.15 cv
1212.17 1295.15 1216.11 1292.87 1216.11 1290.07 cv
1216.11 1287.26 1212.17 1284.99 1207.31 1284.99 cv
cp
1 .54902 .682353 rgb
f
1324.27 1281.09 mo
1319.41 1281.09 1315.47 1283.37 1315.47 1286.17 cv
1315.47 1288.98 1319.41 1291.25 1324.27 1291.25 cv
1329.14 1291.25 1333.08 1288.98 1333.08 1286.17 cv
1333.08 1283.37 1329.14 1281.09 1324.27 1281.09 cv
cp
f
1275.41 1285.05 mo
1272.68 1282.2 1270.72 1281.64 1266.93 1283.52 cv
1265.98 1283.99 1265.85 1284.72 1264.63 1284.8 cv
1264.03 1284.85 1263.39 1284.59 1262.87 1284.34 cv
1262.31 1283.94 1261.79 1283.49 1261.33 1282.99 cv
1257.26 1281.31 1254.6 1281.9 1253.33 1284.76 cv
1253.23 1284.92 1253.1 1285.03 1252.98 1285.11 cv
1254.96 1289.36 1258.25 1292.53 1263.71 1292.9 cv
1269.89 1293.32 1273.42 1289.83 1275.41 1285.05 cv
cp
1 .121569 .219608 rgb
f
1263.71 1292.9 mo
1258.25 1292.53 1254.96 1289.36 1252.98 1285.11 cv
1253.1 1285.03 1253.23 1284.92 1253.33 1284.76 cv
1254.6 1281.9 1257.26 1281.31 1261.33 1282.99 cv
1261.79 1283.49 1262.31 1283.94 1262.87 1284.34 cv
1263.39 1284.59 1264.03 1284.85 1264.63 1284.8 cv
1265.85 1284.72 1265.98 1283.99 1266.93 1283.52 cv
1270.72 1281.64 1272.68 1282.2 1275.41 1285.05 cv
1273.42 1289.83 1269.89 1293.32 1263.71 1292.9 cv
cp
1280.03 1267.01 mo
1280.17 1266.36 1279.71 1265.72 1279.07 1265.68 cv
1278.89 1265.55 1278.66 1265.46 1278.39 1265.47 cv
1268.75 1265.67 1259.13 1265.49 1249.51 1264.96 cv
1249.29 1264.95 1249.1 1265.01 1248.93 1265.1 cv
1248.4 1265.04 1247.87 1265.32 1247.86 1266.02 cv
1247.81 1276.94 1249.9 1296.07 1265.24 1295.09 cv
1278.99 1294.22 1280.27 1277.34 1280.04 1267.05 cv
1280.04 1267.04 1280.03 1267.03 1280.03 1267.01 cv
cp
.0117647 .0470588 .105882 rgb
f
1199.85 1120.89 mo
1202.11 1128.31 1198.15 1136.9 1191.08 1139.97 cv
1189.07 1132.68 1193.78 1125.11 1199.85 1120.89 cv
cp
1216.84 1133.23 mo
1216.57 1133.87 1216 1135.67 1215.42 1136.23 cv
1215.14 1136.73 1214.86 1137.23 1214.58 1137.73 cv
1211.01 1139.97 1210.51 1137.8 1211.16 1133.97 cv
1211.08 1132.83 1213.78 1130.47 1214.59 1129.7 cv
1215.56 1128.76 1216.89 1127.57 1218.28 1126.8 cv
1218.27 1128.94 1217.71 1131.18 1216.84 1133.23 cv
cp
1153.2 1290.6 mo
1140.77 1266.17 1133.88 1239.01 1135.07 1211.44 cv
1136.43 1179.94 1148.44 1142.46 1175.06 1123.18 cv
1178.65 1120.58 1182.55 1118.35 1186.69 1116.76 cv
1191.28 1115 1196.28 1114.11 1198.87 1118.55 cv
1191.43 1123.5 1185.61 1133.08 1189.09 1141.95 cv
1189.32 1142.55 1189.93 1143.06 1190.63 1142.82 cv
1199.25 1139.93 1205.63 1128.13 1202.4 1119.35 cv
1205.96 1117.58 1210.25 1117.13 1213.86 1119.06 cv
1216.25 1120.34 1217.52 1122.23 1218.03 1124.38 cv
1215.16 1125.7 1212.49 1128.06 1210.79 1130.18 cv
1208.9 1132.55 1206.86 1135.71 1208.08 1138.86 cv
1208.95 1141.11 1211.48 1142.83 1213.89 1141.93 cv
1216.63 1140.92 1218.1 1136.69 1219.11 1134.35 cv
1220.24 1131.75 1221.08 1128.85 1220.94 1126.01 cv
1224.46 1125.83 1226.97 1128.13 1226.98 1131.71 cv
1226.99 1139.27 1219.69 1145.33 1214.48 1149.84 cv
1206.55 1156.68 1199.06 1163.46 1192.69 1171.55 cv
1193.48 1171.82 1194.25 1172.14 1195.01 1172.5 cv
1196.66 1170.36 1198.4 1168.28 1200.22 1166.27 cv
1207.57 1158.18 1217.08 1152.28 1224.08 1143.9 cv
1227.78 1139.47 1232.07 1131.74 1227.88 1126.24 cv
1225.83 1123.54 1223.2 1122.95 1220.55 1123.52 cv
1220.39 1122.98 1220.2 1122.44 1219.95 1121.92 cv
1216.59 1114.76 1207.76 1114.1 1201.34 1117.13 cv
1200.58 1115.88 1199.57 1114.72 1198.3 1113.7 cv
1193.13 1109.55 1183.74 1114.96 1178.9 1117.73 cv
1171.23 1122.1 1164.71 1128.3 1159.24 1135.18 cv
1135.04 1165.61 1128.09 1207.97 1135.04 1245.54 cv
1138.31 1263.28 1144.65 1280.3 1153.26 1296.1 cv
1153.19 1294.26 1153.17 1292.43 1153.2 1290.6 cv
cp
f
1173.35 1228.58 mo
1173.58 1225.81 1173.92 1223.05 1174.37 1220.31 cv
1173.58 1219.8 1172.82 1219.27 1172.08 1218.7 cv
1171.27 1223.36 1170.77 1228.06 1170.58 1232.77 cv
1171.47 1231.35 1172.4 1229.96 1173.35 1228.58 cv
cp
f
1358.3 1215.71 mo
1358.06 1215.8 1357.83 1215.92 1357.6 1216.01 cv
1357.98 1216.46 1358.35 1216.93 1358.73 1217.4 cv
1358.71 1217.34 1358.7 1217.28 1358.69 1217.21 cv
1358.57 1216.71 1358.42 1216.21 1358.3 1215.71 cv
cp
f
1340.96 1144.68 mo
1333.88 1141.61 1329.92 1133.03 1332.19 1125.61 cv
1338.26 1129.83 1342.97 1137.39 1340.96 1144.68 cv
cp
1317.45 1134.42 mo
1318.25 1135.19 1320.96 1137.54 1320.88 1138.69 cv
1321.53 1142.52 1321.03 1144.69 1317.46 1142.45 cv
1317.18 1141.95 1316.9 1141.45 1316.62 1140.95 cv
1316.03 1140.39 1315.46 1138.58 1315.19 1137.94 cv
1314.33 1135.9 1313.76 1133.66 1313.75 1131.52 cv
1315.15 1132.29 1316.47 1133.48 1317.45 1134.42 cv
cp
1372.79 1139.9 mo
1367.32 1133.02 1360.8 1126.82 1353.14 1122.44 cv
1348.29 1119.68 1338.91 1114.27 1333.73 1118.42 cv
1332.46 1119.44 1331.46 1120.59 1330.7 1121.85 cv
1324.28 1118.81 1315.45 1119.48 1312.08 1126.63 cv
1311.84 1127.16 1311.64 1127.69 1311.49 1128.23 cv
1308.84 1127.67 1306.21 1128.26 1304.16 1130.95 cv
1299.97 1136.46 1304.25 1144.18 1307.95 1148.61 cv
1314.95 1157 1324.47 1162.89 1331.82 1170.99 cv
1332.63 1171.88 1333.41 1172.78 1334.19 1173.7 cv
1334.77 1173.19 1335.37 1172.71 1336.01 1172.26 cv
1330.42 1165.88 1324.14 1160.24 1317.56 1154.55 cv
1312.34 1150.05 1305.05 1143.99 1305.06 1136.42 cv
1305.07 1132.84 1307.58 1130.55 1311.1 1130.73 cv
1310.96 1133.57 1311.8 1136.47 1312.92 1139.07 cv
1313.94 1141.41 1315.4 1145.63 1318.15 1146.65 cv
1320.56 1147.54 1323.09 1145.83 1323.96 1143.58 cv
1325.17 1140.43 1323.13 1137.26 1321.24 1134.9 cv
1319.55 1132.78 1316.88 1130.42 1314.01 1129.09 cv
1314.52 1126.95 1315.79 1125.05 1318.17 1123.78 cv
1321.78 1121.85 1326.08 1122.3 1329.64 1124.07 cv
1326.41 1132.85 1332.79 1144.65 1341.41 1147.54 cv
1342.11 1147.77 1342.71 1147.27 1342.95 1146.67 cv
1346.43 1137.79 1340.61 1128.22 1333.17 1123.26 cv
1335.75 1118.83 1340.76 1119.71 1345.35 1121.48 cv
1349.49 1123.07 1353.39 1125.3 1356.97 1127.9 cv
1383.59 1147.17 1395.61 1184.66 1396.97 1216.16 cv
1398.03 1240.95 1392.57 1265.41 1382.42 1287.85 cv
1382.37 1290.08 1382.24 1292.32 1382.05 1294.54 cv
1389 1280.54 1394.15 1265.67 1397 1250.26 cv
1403.94 1212.68 1396.99 1170.33 1372.79 1139.9 cv
cp
f
467.787 372.254 mo
474.35 376.348 481.445 364.158 484.195 359.579 cv
479.453 356.762 474.527 354.25 469.437 352.095 cv
466.754 357.981 462.82 369.156 467.787 372.254 cv
cp
1 .54902 .682353 rgb
f
441.016 345.671 mo
439.87 349.258 438.841 353.672 440.127 357.362 cv
442.248 363.446 448.6 360.985 451.818 357.455 cv
454.313 354.718 456.344 351.402 457.964 347.917 cv
452.618 346.269 447.137 344.999 441.558 344.12 cv
441.37 344.635 441.182 345.151 441.016 345.671 cv
cp
f
373.415 598.097 mo
372.863 598.742 371.861 598.467 371.451 597.844 cv
368.391 593.193 364.137 589.794 359.16 587.917 cv
359.151 590.808 359.196 593.7 359.335 596.591 cv
359.747 605.182 359.421 623.095 371.395 624.33 cv
383.381 625.566 382.744 609.132 383.087 601.479 cv
383.246 597.932 383.365 594.384 383.491 590.835 cv
379.655 592.335 376.249 594.781 373.415 598.097 cv
cp
f
469.437 468.819 mo
465.714 468.819 462.697 467.079 462.697 464.931 cv
462.697 462.784 465.714 461.043 469.437 461.043 cv
473.158 461.043 476.175 462.784 476.175 464.931 cv
476.175 467.079 473.158 468.819 469.437 468.819 cv
cp
466.699 446.855 mo
472.666 446.209 473.659 455.469 467.701 456.113 cv
461.734 456.759 460.742 447.5 466.699 446.855 cv
cp
424.036 470.891 mo
415.418 470.456 415.324 457.663 415.007 451.546 cv
414.915 449.75 417.704 449.761 417.796 451.546 cv
418.017 455.817 417.777 467.563 424.036 468.103 cv
431.548 468.749 431.203 458.172 430.796 453.457 cv
430.642 451.666 433.432 451.682 433.585 453.457 cv
434.148 459.98 433.34 471.361 424.036 470.891 cv
cp
379.881 471.804 mo
376.16 471.804 373.143 470.063 373.143 467.916 cv
373.143 465.769 376.16 464.027 379.881 464.027 cv
383.603 464.027 386.621 465.769 386.621 467.916 cv
386.621 470.063 383.603 471.804 379.881 471.804 cv
cp
378.601 450.312 mo
384.168 449.709 385.094 458.348 379.535 458.95 cv
373.968 459.552 373.042 450.913 378.601 450.312 cv
cp
536.85 422.674 mo
529.006 401.268 515.274 382.808 497.903 369.024 cv
497.239 368.496 496.568 367.977 495.893 367.463 cv
492.807 365.116 489.618 362.908 486.326 360.861 cv
486.269 360.954 486.217 361.049 486.16 361.141 cv
482.902 366.381 478.246 374.621 471.396 375.323 cv
459.188 376.574 462.831 361.926 467.543 351.327 cv
465.19 350.377 462.808 349.495 460.394 348.694 cv
458.028 354.057 454.652 359.495 449.932 362.381 cv
444.981 365.409 439.495 363.676 437.717 358.027 cv
436.284 353.474 437.187 348.403 438.959 343.722 cv
434.49 343.121 429.963 342.77 425.393 342.693 cv
420.034 342.603 414.73 342.92 409.506 343.58 cv
408.611 343.693 407.718 343.81 406.828 343.944 cv
362.216 350.674 324.166 383.877 312.9 428.609 cv
300.657 477.22 320.933 528.155 361 556.918 cv
360.121 566.355 359.334 575.821 359.183 585.296 cv
364.539 587.124 369.174 590.51 372.653 595.212 cv
375.76 591.933 379.473 589.556 383.594 588.139 cv
383.796 582.08 383.966 576.019 384.082 569.957 cv
384.104 569.967 384.126 569.978 384.149 569.987 cv
384.894 570.31 385.615 570.337 386.269 570.178 cv
411.178 579.745 439.252 580.296 464.556 572.143 cv
464.813 575.76 465.074 579.376 465.34 582.994 cv
470.794 585.379 475.617 588.72 479.781 593.05 cv
483.082 588.877 486.973 585.444 491.419 582.783 cv
491.448 575.164 491.157 567.551 490.557 559.958 cv
494.951 557.15 499.158 554.015 503.133 550.553 cv
538.661 519.616 553.12 467.077 536.85 422.674 cv
cp
f
480.943 595.568 mo
480.494 596.178 479.569 596.472 478.98 595.821 cv
475.113 591.553 470.646 588.226 465.551 585.82 cv
466.099 593.128 466.679 600.434 467.354 607.729 cv
467.779 612.337 468.382 617.164 471.887 620.549 cv
475.166 623.716 479.875 624.177 483.719 621.772 cv
488.151 619 489.461 613.861 490.03 608.997 cv
490.794 602.461 491.135 595.846 491.324 589.272 cv
491.358 588.089 491.358 586.906 491.376 585.723 cv
487.374 588.317 483.862 591.604 480.943 595.568 cv
cp
f
379.535 458.95 mo
385.094 458.348 384.168 449.709 378.601 450.312 cv
373.042 450.913 373.968 459.552 379.535 458.95 cv
cp
.0117647 .0470588 .105882 rgb
f
467.701 456.113 mo
473.659 455.469 472.666 446.209 466.699 446.855 cv
460.742 447.5 461.734 456.759 467.701 456.113 cv
cp
f
430.796 453.457 mo
431.203 458.172 431.548 468.749 424.036 468.103 cv
417.777 467.563 418.017 455.817 417.796 451.546 cv
417.704 449.761 414.915 449.75 415.007 451.546 cv
415.324 457.663 415.418 470.456 424.036 470.891 cv
433.34 471.361 434.148 459.98 433.585 453.457 cv
433.432 451.682 430.642 451.666 430.796 453.457 cv
cp
f
379.881 464.027 mo
376.16 464.027 373.143 465.769 373.143 467.916 cv
373.143 470.063 376.16 471.804 379.881 471.804 cv
383.603 471.804 386.621 470.063 386.621 467.916 cv
386.621 465.769 383.603 464.027 379.881 464.027 cv
cp
1 .121569 .219608 rgb
f
469.437 461.043 mo
465.714 461.043 462.697 462.784 462.697 464.931 cv
462.697 467.079 465.714 468.819 469.437 468.819 cv
473.158 468.819 476.175 467.079 476.175 464.931 cv
476.175 462.784 473.158 461.043 469.437 461.043 cv
cp
f
460.97 339.75 mo
460.219 342.458 459.21 345.236 457.964 347.917 cv
456.344 351.402 454.313 354.718 451.818 357.455 cv
448.6 360.985 442.248 363.446 440.127 357.362 cv
438.841 353.672 439.87 349.258 441.016 345.671 cv
441.182 345.151 441.37 344.635 441.558 344.12 cv
445.396 333.574 453.626 324.031 462.125 316.476 cv
463.694 324.396 462.719 333.441 460.97 339.75 cv
cp
484.441 359.171 mo
484.364 359.299 484.281 359.436 484.195 359.579 cv
481.445 364.158 474.35 376.348 467.787 372.254 cv
462.82 369.156 466.754 357.981 469.437 352.095 cv
469.947 350.976 470.412 350.045 470.762 349.4 cv
474.063 343.311 478.967 337.611 485.014 334.1 cv
487.914 332.416 491.64 331.439 495.137 331.495 cv
493.43 341.274 489.449 350.911 484.441 359.171 cv
cp
420.261 321.529 mo
426.455 312.527 441.3 293.937 453.905 302.421 cv
457.75 305.009 460.131 309.097 461.475 313.779 cv
461.282 313.952 461.086 314.125 460.896 314.297 cv
454.004 320.53 447.624 327.745 442.866 335.758 cv
441.46 338.125 440.047 340.85 438.959 343.722 cv
437.187 348.403 436.284 353.474 437.717 358.027 cv
439.495 363.676 444.981 365.409 449.932 362.381 cv
454.652 359.495 458.028 354.057 460.394 348.694 cv
461.179 346.916 461.853 345.145 462.427 343.479 cv
465.203 335.425 465.983 326.706 464.618 318.296 cv
464.438 317.186 464.208 316.046 463.934 314.9 cv
464.585 314.343 465.237 313.798 465.887 313.266 cv
471.179 308.931 477.525 305.066 484.645 306.039 cv
493.315 307.224 496.202 314.908 496.031 322.655 cv
495.987 324.67 495.816 326.696 495.556 328.72 cv
494.207 328.629 492.849 328.689 491.53 328.923 cv
483.991 330.256 477.434 335.887 472.835 341.733 cv
471.561 343.354 469.464 347.006 467.543 351.327 cv
462.831 361.926 459.188 376.574 471.396 375.323 cv
478.246 374.621 482.902 366.381 486.16 361.141 cv
486.217 361.049 486.269 360.954 486.326 360.861 cv
491.132 353.061 494.664 344.452 496.713 335.522 cv
496.993 334.306 497.248 333.023 497.467 331.7 cv
502.384 332.5 506.283 335.705 505.781 342.383 cv
505.207 350.028 500.625 358.266 497.194 365.031 cv
496.777 365.852 496.326 366.652 495.893 367.463 cv
496.568 367.977 497.239 368.496 497.903 369.024 cv
499.625 365.825 501.226 362.559 502.687 359.22 cv
505.532 352.712 510.714 343.409 507.497 336.305 cv
505.69 332.316 501.959 329.896 497.849 329.035 cv
499.298 316.976 497.16 302.928 481.878 303.355 cv
474.705 303.556 468.539 307.703 463.21 312.258 cv
461.405 306.487 458.14 301.004 452.348 298.824 cv
444.109 295.723 435.634 301.194 429.793 306.595 cv
418.874 316.691 411.098 329.785 406.828 343.944 cv
407.718 343.81 408.611 343.693 409.506 343.58 cv
411.98 335.765 415.586 328.324 420.261 321.529 cv
cp
.0117647 .0470588 .105882 rgb
f
372.653 595.212 mo
369.174 590.51 364.539 587.124 359.183 585.296 cv
359.169 586.17 359.162 587.043 359.16 587.917 cv
364.137 589.794 368.391 593.193 371.451 597.844 cv
371.861 598.467 372.863 598.742 373.415 598.097 cv
376.249 594.781 379.655 592.335 383.491 590.835 cv
383.523 589.937 383.563 589.038 383.594 588.139 cv
379.473 589.556 375.76 591.933 372.653 595.212 cv
cp
f
479.781 593.05 mo
475.617 588.72 470.794 585.379 465.34 582.994 cv
465.41 583.936 465.481 584.878 465.551 585.82 cv
470.646 588.226 475.113 591.553 478.98 595.821 cv
479.569 596.472 480.494 596.178 480.943 595.568 cv
483.862 591.604 487.374 588.317 491.376 585.723 cv
491.391 584.743 491.416 583.762 491.419 582.783 cv
486.973 585.444 483.082 588.877 479.781 593.05 cv
cp
f
905.293 1267.45 mo
901.293 1267.45 898.05 1265.58 898.05 1263.27 cv
898.05 1260.96 901.293 1259.09 905.293 1259.09 cv
909.293 1259.09 912.536 1260.96 912.536 1263.27 cv
912.536 1265.58 909.293 1267.45 905.293 1267.45 cv
cp
902.352 1243.85 mo
908.764 1243.15 909.831 1253.1 903.428 1253.8 cv
897.015 1254.49 895.949 1244.54 902.352 1243.85 cv
cp
856.501 1269.68 mo
847.24 1269.21 847.138 1255.46 846.798 1248.89 cv
846.698 1246.96 849.695 1246.97 849.794 1248.89 cv
850.032 1253.48 849.774 1266.1 856.501 1266.68 cv
864.574 1267.38 864.204 1256.01 863.767 1250.94 cv
863.601 1249.02 866.599 1249.03 866.763 1250.94 cv
867.368 1257.95 866.5 1270.18 856.501 1269.68 cv
cp
809.048 1270.66 mo
805.048 1270.66 801.805 1268.79 801.805 1266.48 cv
801.805 1264.17 805.048 1262.3 809.048 1262.3 cv
813.048 1262.3 816.29 1264.17 816.29 1266.48 cv
816.29 1268.79 813.048 1270.66 809.048 1270.66 cv
cp
807.671 1247.56 mo
813.655 1246.91 814.649 1256.2 808.676 1256.84 cv
802.692 1257.49 801.698 1248.21 807.671 1247.56 cv
cp
978.601 1292.96 mo
975.535 1280.56 970.847 1268.6 965.32 1257.11 cv
953.801 1233.16 938.798 1210.83 924.038 1188.79 cv
917.526 1179.07 910.757 1169.49 903.324 1160.44 cv
902.438 1159.36 901.536 1158.29 900.63 1157.23 cv
900.471 1157.04 900.317 1156.85 900.158 1156.67 cv
895.667 1151.43 890.899 1146.13 885.661 1141.42 cv
884.996 1140.83 884.325 1140.24 883.645 1139.66 cv
880.057 1136.62 876.248 1133.88 872.155 1131.64 cv
862.246 1126.21 851.108 1124.93 840.566 1129.34 cv
829.854 1133.82 821.448 1142.44 813.941 1151.03 cv
797.11 1170.31 782.736 1191.67 770.778 1214.28 cv
758.79 1236.95 749.167 1260.86 741.692 1285.38 cv
737.872 1297.91 734.243 1311.35 737.172 1324.47 cv
737.718 1326.92 738.57 1329.29 739.665 1331.55 cv
746.015 1347.42 766.368 1351.37 781.639 1354.09 cv
789.529 1355.49 797.475 1356.51 805.447 1357.13 cv
804.217 1371.03 804.249 1385.02 805.685 1398.92 cv
806.454 1406.36 807.598 1413.78 809.122 1421.11 cv
814.97 1420.17 820.834 1419.36 826.72 1418.71 cv
826.496 1417.56 826.263 1416.42 826.079 1415.29 cv
825.285 1410.43 824.736 1405.52 824.408 1400.6 cv
823.459 1386.41 824.417 1372.21 827.152 1358.3 cv
846.359 1358.86 865.691 1357.74 884.876 1355.69 cv
885.79 1370.75 886.482 1385.83 886.901 1400.91 cv
887.024 1405.33 886.825 1409.94 886.861 1414.5 cv
893.417 1413.76 899.972 1413.46 906.555 1413.6 cv
907.259 1408.08 907.337 1402.46 907.407 1396.91 cv
907.59 1382.29 906.914 1367.69 905.972 1353.11 cv
909.43 1352.63 912.88 1352.13 916.32 1351.62 cv
930.274 1349.53 944.403 1347.64 958.216 1344.75 cv
968.009 1342.7 977.721 1338.37 981.001 1328.12 cv
984.491 1317.21 981.262 1303.71 978.601 1292.96 cv
cp
.835294 .701961 .85098 rgb
f
818.821 1435.49 mo
824.419 1435.76 827.461 1429.9 827.498 1425.07 cv
827.508 1423.77 827.365 1422.46 827.16 1421.16 cv
821.294 1421.81 815.45 1422.61 809.621 1423.55 cv
810.721 1428.52 812.585 1435.19 818.821 1435.49 cv
cp
f
886.913 1416.99 mo
886.994 1419.57 887.175 1422.12 887.585 1424.59 cv
888.372 1429.34 892.087 1433.41 897.236 1431.91 cv
902.818 1430.28 904.636 1423.73 905.7 1418.73 cv
905.885 1417.85 906.048 1416.97 906.194 1416.09 cv
899.75 1415.97 893.332 1416.27 886.913 1416.99 cv
cp
f
808.676 1256.84 mo
814.649 1256.2 813.655 1246.91 807.671 1247.56 cv
801.698 1248.21 802.692 1257.49 808.676 1256.84 cv
cp
.0117647 .0470588 .105882 rgb
f
903.428 1253.8 mo
909.831 1253.1 908.764 1243.15 902.352 1243.85 cv
895.949 1244.54 897.015 1254.49 903.428 1253.8 cv
cp
f
863.767 1250.94 mo
864.204 1256.01 864.574 1267.38 856.501 1266.68 cv
849.774 1266.1 850.032 1253.48 849.794 1248.89 cv
849.695 1246.97 846.698 1246.96 846.798 1248.89 cv
847.138 1255.46 847.24 1269.21 856.501 1269.68 cv
866.5 1270.18 867.368 1257.95 866.763 1250.94 cv
866.599 1249.03 863.601 1249.02 863.767 1250.94 cv
cp
f
809.048 1262.3 mo
805.048 1262.3 801.805 1264.17 801.805 1266.48 cv
801.805 1268.79 805.048 1270.66 809.048 1270.66 cv
813.048 1270.66 816.29 1268.79 816.29 1266.48 cv
816.29 1264.17 813.048 1262.3 809.048 1262.3 cv
cp
1 .121569 .219608 rgb
f
905.293 1259.09 mo
901.293 1259.09 898.05 1260.96 898.05 1263.27 cv
898.05 1265.58 901.293 1267.45 905.293 1267.45 cv
909.293 1267.45 912.536 1265.58 912.536 1263.27 cv
912.536 1260.96 909.293 1259.09 905.293 1259.09 cv
cp
f
893.972 1112.36 mo
896.64 1108.79 906.326 1100.56 907.223 1110.18 cv
907.553 1113.71 904.911 1118.25 903.22 1121.23 cv
899.656 1127.53 894.634 1132.8 888.727 1136.73 cv
886.154 1128.53 888.97 1119.05 893.972 1112.36 cv
cp
914.79 1131.39 mo
916.559 1129.93 919.413 1127.85 921.854 1127.78 cv
927.682 1127.63 927.304 1133.43 925.516 1136.32 cv
923.242 1139.99 918.319 1142.1 914.547 1143.82 cv
911.606 1145.16 908.298 1146.14 905.033 1146.46 cv
907.066 1140.39 910.584 1134.86 914.79 1131.39 cv
cp
887.484 1140.43 mo
887.853 1141.15 888.258 1141.85 888.73 1142.52 cv
891.821 1146.92 896.584 1148.88 901.593 1149.17 cv
900.97 1151.85 900.64 1154.57 900.63 1157.23 cv
901.536 1158.29 902.438 1159.36 903.324 1160.44 cv
902.92 1156.79 903.281 1152.92 904.237 1149.17 cv
906.537 1149.04 908.836 1148.6 911 1147.91 cv
917.512 1145.81 928.771 1141.14 929.172 1133 cv
929.535 1125.65 922.733 1123.98 917.134 1126.83 cv
910.316 1130.32 904.886 1138.04 902.286 1146.57 cv
897.042 1146.45 892.227 1144.38 889.648 1139.1 cv
897.312 1134.11 903.604 1127.03 907.384 1118.55 cv
909.758 1113.22 912.057 1102.96 902.836 1103.24 cv
895.306 1103.47 889.742 1113.03 887.416 1119.15 cv
885.198 1124.98 884.369 1132.09 886.496 1138.13 cv
885.565 1138.68 884.61 1139.18 883.645 1139.66 cv
884.325 1140.24 884.996 1140.83 885.661 1141.42 cv
886.274 1141.1 886.885 1140.77 887.484 1140.43 cv
cp
.0117647 .0470588 .105882 rgb
f
809.601 1423.46 mo
809.607 1423.49 809.615 1423.52 809.621 1423.55 cv
815.45 1422.61 821.294 1421.81 827.16 1421.16 cv
827.031 1420.34 826.879 1419.52 826.72 1418.71 cv
820.834 1419.36 814.97 1420.17 809.122 1421.11 cv
809.284 1421.89 809.429 1422.68 809.601 1423.46 cv
cp
f
886.861 1414.5 mo
886.868 1415.33 886.886 1416.16 886.913 1416.99 cv
893.332 1416.27 899.75 1415.97 906.194 1416.09 cv
906.332 1415.27 906.449 1414.43 906.555 1413.6 cv
899.972 1413.46 893.417 1413.76 886.861 1414.5 cv
cp
f
1708.48 1188.67 mo
1707.12 1193.5 1709.64 1198.52 1715.34 1198.02 cv
1720.41 1197.58 1724.66 1189.59 1727.06 1185.81 cv
1727.69 1184.8 1728.37 1183.72 1729.06 1182.59 cv
1724.05 1181.46 1718.95 1180.69 1713.85 1180.11 cv
1711.65 1182.57 1709.39 1185.46 1708.48 1188.67 cv
cp
1 .85098 0 rgb
f
1741.17 1192.71 mo
1739.47 1195 1734.91 1201.34 1738 1204.2 cv
1742.26 1208.16 1746.27 1204.17 1748.75 1200.61 cv
1750.53 1198.07 1751.92 1195.27 1753.06 1192.37 cv
1750.57 1190.73 1747.94 1189.27 1745.17 1187.97 cv
1743.72 1189.51 1742.38 1191.1 1741.17 1192.71 cv
cp
f
1706.15 1265.7 mo
1702.1 1265.7 1698.82 1263.81 1698.82 1261.48 cv
1698.82 1259.14 1702.1 1257.25 1706.15 1257.25 cv
1710.19 1257.25 1713.47 1259.14 1713.47 1261.48 cv
1713.47 1263.81 1710.19 1265.7 1706.15 1265.7 cv
cp
1703.17 1241.82 mo
1709.66 1241.11 1710.74 1251.18 1704.26 1251.88 cv
1697.77 1252.59 1696.69 1242.52 1703.17 1241.82 cv
cp
1656.77 1267.96 mo
1647.4 1267.48 1647.29 1253.57 1646.95 1246.92 cv
1646.85 1244.96 1649.88 1244.98 1649.98 1246.92 cv
1650.22 1251.56 1649.96 1264.34 1656.77 1264.92 cv
1664.94 1265.63 1664.56 1254.12 1664.12 1249 cv
1663.95 1247.05 1666.99 1247.07 1667.15 1249 cv
1667.76 1256.09 1666.89 1268.47 1656.77 1267.96 cv
cp
1608.75 1268.95 mo
1604.7 1268.95 1601.42 1267.06 1601.42 1264.72 cv
1601.42 1262.39 1604.7 1260.49 1608.75 1260.49 cv
1612.79 1260.49 1616.07 1262.39 1616.07 1264.72 cv
1616.07 1267.06 1612.79 1268.95 1608.75 1268.95 cv
cp
1607.35 1245.58 mo
1613.41 1244.92 1614.41 1254.32 1608.37 1254.97 cv
1602.31 1255.63 1601.31 1246.23 1607.35 1245.58 cv
cp
1795.17 1292.29 mo
1792.99 1270.15 1789.29 1247.28 1780.47 1226.71 cv
1778.32 1221.71 1775.79 1216.97 1772.89 1212.56 cv
1772.35 1211.74 1771.81 1210.92 1771.24 1210.12 cv
1766.76 1203.83 1761.43 1198.32 1755.18 1193.84 cv
1754.48 1195.5 1753.73 1197.07 1752.96 1198.49 cv
1750.57 1202.94 1745.97 1209.99 1739.93 1208.61 cv
1735.27 1207.54 1734.08 1202.13 1735.28 1198.12 cv
1736.48 1194.07 1739.42 1190.19 1742.66 1186.85 cv
1741.87 1186.52 1741.08 1186.19 1740.27 1185.88 cv
1737.44 1184.83 1734.55 1183.96 1731.62 1183.22 cv
1729.96 1186.08 1728.13 1188.84 1726.26 1191.43 cv
1723.1 1195.81 1718.9 1201.38 1712.76 1200.66 cv
1707.88 1200.09 1705.26 1195.18 1705.6 1190.65 cv
1705.9 1186.61 1708.08 1182.97 1710.76 1179.78 cv
1710.1 1179.71 1709.43 1179.64 1708.77 1179.58 cv
1701.06 1178.86 1693.32 1178.36 1685.57 1178.02 cv
1684.66 1177.98 1683.76 1177.94 1682.86 1177.9 cv
1679.11 1177.75 1675.36 1177.64 1671.61 1177.57 cv
1629.7 1176.82 1575.12 1181.09 1549.97 1220.08 cv
1536.34 1241.21 1532.51 1267.91 1529.69 1292.4 cv
1526.38 1321.21 1526.48 1350.34 1529.81 1379.14 cv
1529.85 1379.52 1529.98 1379.84 1530.15 1380.11 cv
1530.18 1380.73 1530.49 1381.33 1531.23 1381.72 cv
1546.58 1389.79 1564.39 1374.37 1573.17 1362.92 cv
1581.85 1351.61 1586.69 1338.26 1589.6 1324.47 cv
1638 1330.62 1687.39 1335.49 1735.48 1327.02 cv
1740.77 1344.78 1749.65 1361.36 1761.66 1375.54 cv
1767.26 1382.14 1776.01 1391.78 1785.8 1388.08 cv
1793.63 1385.11 1795.11 1375.7 1795.66 1368.42 cv
1797.57 1343.15 1797.65 1317.52 1795.17 1292.29 cv
cp
f
1608.37 1254.97 mo
1614.41 1254.32 1613.41 1244.92 1607.35 1245.58 cv
1601.31 1246.23 1602.31 1255.63 1608.37 1254.97 cv
cp
.0117647 .0470588 .105882 rgb
f
1704.26 1251.88 mo
1710.74 1251.18 1709.66 1241.11 1703.17 1241.82 cv
1696.69 1242.52 1697.77 1252.59 1704.26 1251.88 cv
cp
f
1664.12 1249 mo
1664.56 1254.12 1664.94 1265.63 1656.77 1264.92 cv
1649.96 1264.34 1650.22 1251.56 1649.98 1246.92 cv
1649.88 1244.98 1646.85 1244.96 1646.95 1246.92 cv
1647.29 1253.57 1647.4 1267.48 1656.77 1267.96 cv
1666.89 1268.47 1667.76 1256.09 1667.15 1249 cv
1666.99 1247.07 1663.95 1247.05 1664.12 1249 cv
cp
f
1608.75 1260.49 mo
1604.7 1260.49 1601.42 1262.39 1601.42 1264.72 cv
1601.42 1267.06 1604.7 1268.95 1608.75 1268.95 cv
1612.79 1268.95 1616.07 1267.06 1616.07 1264.72 cv
1616.07 1262.39 1612.79 1260.49 1608.75 1260.49 cv
cp
1 .121569 .219608 rgb
f
1706.15 1257.25 mo
1702.1 1257.25 1698.82 1259.14 1698.82 1261.48 cv
1698.82 1263.81 1702.1 1265.7 1706.15 1265.7 cv
1710.19 1265.7 1713.47 1263.81 1713.47 1261.48 cv
1713.47 1259.14 1710.19 1257.25 1706.15 1257.25 cv
cp
f
1729.06 1182.59 mo
1728.37 1183.72 1727.69 1184.8 1727.06 1185.81 cv
1724.66 1189.59 1720.41 1197.58 1715.34 1198.02 cv
1709.64 1198.52 1707.12 1193.5 1708.48 1188.67 cv
1709.39 1185.46 1711.65 1182.57 1713.85 1180.11 cv
1713.99 1179.95 1714.13 1179.79 1714.26 1179.64 cv
1719.72 1173.64 1727.17 1166.53 1735.41 1163.95 cv
1736.07 1170.04 1732.48 1176.97 1729.06 1182.59 cv
cp
1754.65 1187.73 mo
1754.18 1189.29 1753.65 1190.84 1753.06 1192.37 cv
1751.92 1195.27 1750.53 1198.07 1748.75 1200.61 cv
1746.27 1204.17 1742.26 1208.16 1738 1204.2 cv
1734.91 1201.34 1739.47 1195 1741.17 1192.71 cv
1742.38 1191.1 1743.72 1189.51 1745.17 1187.97 cv
1748.31 1184.62 1751.95 1181.54 1755.92 1179.13 cv
1755.93 1182 1755.47 1184.96 1754.65 1187.73 cv
cp
1698.98 1161.55 mo
1707.31 1154.7 1720.7 1148.02 1730.6 1155.64 cv
1732.85 1157.38 1734.21 1159.38 1734.91 1161.54 cv
1727.81 1164 1721.16 1169.55 1716.13 1174.25 cv
1714.37 1175.9 1712.46 1177.75 1710.76 1179.78 cv
1708.08 1182.97 1705.9 1186.61 1705.6 1190.65 cv
1705.26 1195.18 1707.88 1200.09 1712.76 1200.66 cv
1718.9 1201.38 1723.1 1195.81 1726.26 1191.43 cv
1728.13 1188.84 1729.96 1186.08 1731.62 1183.22 cv
1734.03 1179.09 1736.09 1174.74 1737.42 1170.3 cv
1738.13 1167.9 1738.32 1165.54 1738 1163.31 cv
1738.93 1163.13 1739.87 1163 1740.82 1162.95 cv
1750.56 1162.53 1754.96 1168.85 1755.78 1176.44 cv
1752.98 1178.07 1750.35 1179.99 1747.95 1181.98 cv
1746.25 1183.4 1744.41 1185.05 1742.66 1186.85 cv
1739.42 1190.19 1736.48 1194.07 1735.28 1198.12 cv
1734.08 1202.13 1735.27 1207.54 1739.93 1208.61 cv
1745.97 1209.99 1750.57 1202.94 1752.96 1198.49 cv
1753.73 1197.07 1754.48 1195.5 1755.18 1193.84 cv
1757.25 1188.87 1758.83 1183.03 1758.73 1177.58 cv
1761.25 1176.31 1763.87 1175.33 1766.54 1174.75 cv
1774.2 1173.07 1783.43 1176.55 1783.2 1185.64 cv
1783.06 1191.34 1779.75 1197.18 1776.84 1201.9 cv
1775.1 1204.73 1773.22 1207.46 1771.24 1210.12 cv
1771.81 1210.92 1772.35 1211.74 1772.89 1212.56 cv
1777.39 1206.72 1781.22 1200.45 1783.72 1193.87 cv
1785.85 1188.22 1787.06 1181.63 1782.66 1176.74 cv
1778.63 1172.25 1772.45 1171.11 1766.72 1172.17 cv
1763.91 1172.7 1761.17 1173.68 1758.55 1174.96 cv
1757.93 1170.1 1755.74 1165.74 1751.06 1162.87 cv
1746.57 1160.12 1741.93 1159.77 1737.4 1160.82 cv
1736.48 1158.09 1734.73 1155.63 1732.15 1153.63 cv
1726.3 1149.13 1718.63 1149.01 1711.85 1151.29 cv
1699.1 1155.58 1688.93 1165.98 1682.86 1177.9 cv
1683.76 1177.94 1684.66 1177.98 1685.57 1178.02 cv
1688.91 1171.73 1693.42 1166.11 1698.98 1161.55 cv
cp
.0117647 .0470588 .105882 rgb
f
2408.43 604.281 mo
2409.29 609.323 2410.03 628.616 2419.74 624.244 cv
2423.82 622.407 2424.18 617.615 2424.71 613.737 cv
2425.46 608.25 2425.92 602.732 2426.04 597.195 cv
2426.13 593.096 2426.03 589.001 2425.76 584.918 cv
2419.06 584.964 2412.37 585.269 2405.7 585.827 cv
2406.48 591.997 2407.37 598.152 2408.43 604.281 cv
cp
1 .54902 .682353 rgb
f
2334.26 598.913 mo
2334.41 604.548 2334.84 610.181 2335.59 615.769 cv
2336.08 619.469 2337.11 623.405 2340.93 624.911 cv
2351.07 628.905 2350.73 611.091 2351.47 605.685 cv
2352.31 599.456 2353.16 593.226 2354.01 586.997 cv
2347.53 586.096 2341.04 585.384 2334.53 584.878 cv
2334.24 589.546 2334.13 594.226 2334.26 598.913 cv
cp
f
2421.46 511.479 mo
2418.15 511.479 2415.47 509.933 2415.47 508.024 cv
2415.47 506.116 2418.15 504.569 2421.46 504.569 cv
2424.76 504.569 2427.44 506.116 2427.44 508.024 cv
2427.44 509.933 2424.76 511.479 2421.46 511.479 cv
cp
2419.02 491.962 mo
2424.33 491.389 2425.21 499.616 2419.91 500.189 cv
2414.61 500.763 2413.73 492.535 2419.02 491.962 cv
cp
2391.97 510.011 mo
2387.75 513.842 2378.86 513.745 2374.02 511.458 cv
2368.82 509.004 2367.45 502.715 2372.1 498.981 cv
2372.24 498.866 2372.39 498.792 2372.55 498.752 cv
2377.63 495.271 2386.33 493.32 2391.76 496.495 cv
2396.55 499.289 2395.71 506.615 2391.97 510.011 cv
cp
2341.88 514.132 mo
2338.57 514.132 2335.89 512.585 2335.89 510.677 cv
2335.89 508.769 2338.57 507.222 2341.88 507.222 cv
2345.19 507.222 2347.87 508.769 2347.87 510.677 cv
2347.87 512.585 2345.19 514.132 2341.88 514.132 cv
cp
2340.74 495.034 mo
2345.69 494.499 2346.51 502.175 2341.57 502.709 cv
2336.62 503.245 2335.8 495.568 2340.74 495.034 cv
cp
2424.22 459.571 mo
2423.69 462.525 2422.69 465.396 2419.74 466.724 cv
2411.51 470.433 2409.73 457.111 2408.85 449.908 cv
2390.87 442.211 2369.48 443.558 2351.89 452.063 cv
2351.61 452.196 2351.34 452.337 2351.07 452.473 cv
2350.47 459.672 2349.1 470.608 2340.93 467.391 cv
2338.53 466.444 2337.23 464.537 2336.47 462.332 cv
2323.56 473.735 2315.11 489.784 2312.96 507.194 cv
2310.12 530.141 2319.48 552.871 2336.39 568.078 cv
2335.64 572.829 2335.07 577.604 2334.7 582.393 cv
2341.27 582.907 2347.81 583.628 2354.34 584.536 cv
2354.73 581.68 2355.12 578.824 2355.5 575.968 cv
2363.05 578.236 2371.02 579.275 2378.83 579.466 cv
2387.44 579.677 2396.24 578.681 2404.57 576.222 cv
2404.82 578.601 2405.09 580.978 2405.38 583.354 cv
2412.1 582.783 2418.83 582.469 2425.58 582.419 cv
2425.24 578.286 2424.73 574.167 2424.06 570.071 cv
2430.26 565.435 2435.58 559.723 2439.81 553.29 cv
2442.42 549.491 2444.57 545.342 2446.21 540.975 cv
2448.82 534.393 2450.4 527.392 2450.79 520.246 cv
2451.98 498.337 2441.02 474.089 2424.22 459.571 cv
cp
f
2354.25 340.111 mo
2354.25 341.7 2352.01 342.988 2349.26 342.988 cv
2346.51 342.988 2344.27 341.7 2344.27 340.111 cv
2344.27 338.522 2346.51 337.234 2349.26 337.234 cv
2352.01 337.234 2354.25 338.522 2354.25 340.111 cv
cp
2345.44 322.897 mo
2345.57 325.38 2345.43 332.208 2349.07 332.521 cv
2353.44 332.896 2353.24 326.749 2353 324.008 cv
2352.91 322.967 2354.53 322.977 2354.62 324.008 cv
2354.95 327.799 2354.48 334.415 2349.07 334.141 cv
2344.06 333.888 2344.01 326.453 2343.82 322.897 cv
2343.77 321.854 2345.39 321.86 2345.44 322.897 cv
cp
2374.42 330.372 mo
2374.54 330.276 2374.67 330.215 2374.8 330.181 cv
2379.03 327.283 2386.27 325.658 2390.8 328.302 cv
2394.78 330.628 2394.08 336.729 2390.97 339.557 cv
2387.46 342.747 2380.05 342.666 2376.02 340.761 cv
2371.7 338.718 2370.55 333.481 2374.42 330.372 cv
cp
2410.05 321.73 mo
2410.18 324.212 2410.04 331.04 2413.68 331.353 cv
2418.04 331.729 2417.84 325.582 2417.61 322.84 cv
2417.52 321.8 2419.14 321.809 2419.23 322.84 cv
2419.56 326.632 2419.09 333.247 2413.68 332.974 cv
2408.67 332.721 2408.61 325.285 2408.43 321.73 cv
2408.38 320.686 2410 320.692 2410.05 321.73 cv
cp
2420.51 337.902 mo
2420.51 339.492 2418.28 340.779 2415.52 340.779 cv
2412.77 340.779 2410.54 339.492 2410.54 337.902 cv
2410.54 336.313 2412.77 335.025 2415.52 335.025 cv
2418.28 335.025 2420.51 336.313 2420.51 337.902 cv
cp
2340.93 467.391 mo
2349.1 470.608 2350.47 459.672 2351.07 452.473 cv
2351.22 450.737 2351.32 449.215 2351.47 448.166 cv
2352.81 438.259 2354.16 428.354 2355.5 418.448 cv
2358.96 419.485 2362.5 420.254 2366.07 420.813 cv
2367.38 421.019 2368.69 421.206 2370.01 421.354 cv
2372.95 421.684 2375.9 421.875 2378.83 421.946 cv
2384.2 422.077 2389.65 421.739 2395 420.869 cv
2396.42 420.639 2397.83 420.358 2399.23 420.052 cv
2401.03 419.661 2402.81 419.221 2404.57 418.702 cv
2405.56 428.092 2406.83 437.454 2408.43 446.761 cv
2408.56 447.525 2408.69 448.621 2408.85 449.908 cv
2409.73 457.111 2411.51 470.433 2419.74 466.724 cv
2422.69 465.396 2423.69 462.525 2424.22 459.571 cv
2424.43 458.438 2424.56 457.292 2424.71 456.217 cv
2425.46 450.73 2425.92 445.212 2426.04 439.675 cv
2426.25 430.584 2425.53 421.512 2424.06 412.551 cv
2430.26 407.915 2435.58 402.203 2439.81 395.77 cv
2440.3 395.063 2440.75 394.332 2441.21 393.601 cv
2441.87 392.536 2442.5 391.45 2443.09 390.339 cv
2444.27 388.12 2445.32 385.823 2446.21 383.455 cv
2447.73 379.62 2448.89 375.64 2449.68 371.574 cv
2449.84 370.763 2449.98 369.948 2450.11 369.129 cv
2450.44 367.012 2450.67 364.877 2450.79 362.726 cv
2452.07 339.143 2439.28 312.839 2420.27 298.891 cv
2400.58 284.438 2373.4 284.145 2351.89 294.543 cv
2330.35 304.95 2315.88 326.066 2312.96 349.674 cv
2312.37 354.474 2312.31 359.263 2312.74 363.976 cv
2312.82 364.807 2312.91 365.635 2313.01 366.461 cv
2314.08 374.717 2316.64 382.697 2320.48 390.04 cv
2321.04 391.111 2321.62 392.168 2322.24 393.211 cv
2326.01 399.642 2330.79 405.515 2336.39 410.558 cv
2334.78 420.757 2333.98 431.061 2334.26 441.393 cv
2334.41 447.028 2334.84 452.661 2335.59 458.249 cv
2335.77 459.623 2336.03 461.029 2336.47 462.332 cv
2337.23 464.537 2338.53 466.444 2340.93 467.391 cv
cp
.584314 .792157 .929412 rgb
f
2349.07 334.141 mo
2354.48 334.415 2354.95 327.799 2354.62 324.008 cv
2354.53 322.977 2352.91 322.967 2353 324.008 cv
2353.24 326.749 2353.44 332.896 2349.07 332.521 cv
2345.43 332.208 2345.57 325.38 2345.44 322.897 cv
2345.39 321.86 2343.77 321.854 2343.82 322.897 cv
2344.01 326.453 2344.06 333.888 2349.07 334.141 cv
cp
.0117647 .0470588 .105882 rgb
f
2413.68 332.974 mo
2419.09 333.247 2419.56 326.632 2419.23 322.84 cv
2419.14 321.809 2417.52 321.8 2417.61 322.84 cv
2417.84 325.582 2418.04 331.729 2413.68 331.353 cv
2410.04 331.04 2410.18 324.212 2410.05 321.73 cv
2410 320.692 2408.38 320.686 2408.43 321.73 cv
2408.61 325.285 2408.67 332.721 2413.68 332.974 cv
cp
f
2390.09 337.254 mo
2391.59 335.269 2392.39 333.144 2390.69 330.945 cv
2389.95 329.976 2389.01 329.558 2387.97 329.358 cv
2388.34 332.339 2388.7 335.319 2389.07 338.3 cv
2389.44 338 2389.78 337.662 2390.09 337.254 cv
cp
1 1 1 rgb
f
2387.91 339.055 mo
2387.51 335.771 2387.1 332.487 2386.7 329.203 cv
2386.38 329.181 2386.04 329.164 2385.7 329.151 cv
2384.68 329.11 2383.65 329.142 2382.64 329.255 cv
2383.96 340.025 li
2385.36 339.927 2386.72 339.657 2387.91 339.055 cv
cp
f
2377.2 338.972 mo
2376.91 336.444 2376.62 333.916 2376.33 331.388 cv
2376.01 331.595 2375.69 331.81 2375.39 332.051 cv
2375.33 332.093 2375.28 332.126 2375.22 332.156 cv
2371.71 335.355 2374.17 337.696 2377.2 338.972 cv
cp
f
2381.85 340.076 mo
2382.13 340.08 2382.42 340.079 2382.71 340.075 cv
2382.28 336.529 2381.84 332.982 2381.41 329.436 cv
2380.05 329.686 2378.74 330.099 2377.51 330.716 cv
2377.84 333.627 2378.17 336.539 2378.51 339.45 cv
2379.78 339.85 2381.02 340.065 2381.85 340.076 cv
cp
f
2344.27 340.111 mo
2344.27 341.7 2346.51 342.988 2349.26 342.988 cv
2352.01 342.988 2354.25 341.7 2354.25 340.111 cv
2354.25 338.522 2352.01 337.234 2349.26 337.234 cv
2346.51 337.234 2344.27 338.522 2344.27 340.111 cv
cp
1 .121569 .219608 rgb
f
2410.54 337.902 mo
2410.54 339.492 2412.77 340.779 2415.52 340.779 cv
2418.28 340.779 2420.51 339.492 2420.51 337.902 cv
2420.51 336.313 2418.28 335.025 2415.52 335.025 cv
2412.77 335.025 2410.54 336.313 2410.54 337.902 cv
cp
f
2375.22 332.156 mo
2375.28 332.126 2375.33 332.093 2375.39 332.051 cv
2375.69 331.81 2376.01 331.595 2376.33 331.388 cv
2376.62 333.916 2376.91 336.444 2377.2 338.972 cv
2374.17 337.696 2371.71 335.355 2375.22 332.156 cv
cp
2381.41 329.436 mo
2381.84 332.982 2382.28 336.529 2382.71 340.075 cv
2382.42 340.079 2382.13 340.08 2381.85 340.076 cv
2381.02 340.065 2379.78 339.85 2378.51 339.45 cv
2378.17 336.539 2377.84 333.627 2377.51 330.716 cv
2378.74 330.099 2380.05 329.686 2381.41 329.436 cv
cp
2385.7 329.151 mo
2386.04 329.164 2386.38 329.181 2386.7 329.203 cv
2387.1 332.487 2387.51 335.771 2387.91 339.055 cv
2386.72 339.657 2385.36 339.927 2383.96 340.025 cv
2382.64 329.255 li
2383.65 329.142 2384.68 329.11 2385.7 329.151 cv
cp
2390.69 330.945 mo
2392.39 333.144 2391.59 335.269 2390.09 337.254 cv
2389.78 337.662 2389.44 338 2389.07 338.3 cv
2388.7 335.319 2388.34 332.339 2387.97 329.358 cv
2389.01 329.558 2389.95 329.976 2390.69 330.945 cv
cp
2376.02 340.761 mo
2380.05 342.666 2387.46 342.747 2390.97 339.557 cv
2394.08 336.729 2394.78 330.628 2390.8 328.302 cv
2386.27 325.658 2379.03 327.283 2374.8 330.181 cv
2374.67 330.215 2374.54 330.276 2374.42 330.372 cv
2370.55 333.481 2371.7 338.718 2376.02 340.761 cv
cp
.0117647 .0470588 .105882 rgb
f
2375.8 499.394 mo
2376.2 502.89 2376.6 506.387 2377 509.883 cv
2378.53 510.363 2380.02 510.622 2381.01 510.635 cv
2381.36 510.64 2381.7 510.639 2382.05 510.634 cv
2381.53 506.375 2381.01 502.116 2380.49 497.857 cv
2378.86 498.157 2377.28 498.653 2375.8 499.394 cv
cp
1 1 1 rgb
f
2388.37 497.763 mo
2388.81 501.343 2389.25 504.922 2389.68 508.502 cv
2390.13 508.141 2390.54 507.735 2390.92 507.247 cv
2392.72 504.861 2393.67 502.31 2391.64 499.669 cv
2390.74 498.505 2389.62 498.003 2388.37 497.763 cv
cp
f
2373.25 500.997 mo
2373.19 501.047 2373.12 501.088 2373.06 501.123 cv
2368.84 504.965 2371.79 507.777 2375.43 509.309 cv
2375.08 506.273 2374.74 503.237 2374.39 500.2 cv
2374 500.45 2373.62 500.707 2373.25 500.997 cv
cp
f
2385.65 497.514 mo
2384.42 497.465 2383.18 497.504 2381.96 497.64 cv
2383.55 510.574 li
2385.23 510.455 2386.86 510.131 2388.29 509.409 cv
2387.81 505.465 2387.33 501.521 2386.84 497.577 cv
2386.45 497.55 2386.05 497.53 2385.65 497.514 cv
cp
f
2341.57 502.709 mo
2346.51 502.175 2345.69 494.499 2340.74 495.034 cv
2335.8 495.568 2336.62 503.245 2341.57 502.709 cv
cp
.0117647 .0470588 .105882 rgb
f
2419.91 500.189 mo
2425.21 499.616 2424.33 491.389 2419.02 491.962 cv
2413.73 492.535 2414.61 500.763 2419.91 500.189 cv
cp
f
2341.88 507.222 mo
2338.57 507.222 2335.89 508.769 2335.89 510.677 cv
2335.89 512.585 2338.57 514.132 2341.88 514.132 cv
2345.19 514.132 2347.87 512.585 2347.87 510.677 cv
2347.87 508.769 2345.19 507.222 2341.88 507.222 cv
cp
1 .121569 .219608 rgb
f
2421.46 504.569 mo
2418.15 504.569 2415.47 506.116 2415.47 508.024 cv
2415.47 509.933 2418.15 511.479 2421.46 511.479 cv
2424.76 511.479 2427.44 509.933 2427.44 508.024 cv
2427.44 506.116 2424.76 504.569 2421.46 504.569 cv
cp
f
2390.92 507.247 mo
2390.54 507.735 2390.13 508.141 2389.68 508.502 cv
2389.25 504.922 2388.81 501.343 2388.37 497.763 cv
2389.62 498.003 2390.74 498.505 2391.64 499.669 cv
2393.67 502.31 2392.72 504.861 2390.92 507.247 cv
cp
2383.55 510.574 mo
2381.96 497.64 li
2383.18 497.504 2384.42 497.465 2385.65 497.514 cv
2386.05 497.53 2386.45 497.55 2386.84 497.577 cv
2387.33 501.521 2387.81 505.465 2388.29 509.409 cv
2386.86 510.131 2385.23 510.455 2383.55 510.574 cv
cp
2381.01 510.635 mo
2380.02 510.622 2378.53 510.363 2377 509.883 cv
2376.6 506.387 2376.2 502.89 2375.8 499.394 cv
2377.28 498.653 2378.86 498.157 2380.49 497.857 cv
2381.01 502.116 2381.53 506.375 2382.05 510.634 cv
2381.7 510.639 2381.36 510.64 2381.01 510.635 cv
cp
2373.06 501.123 mo
2373.12 501.088 2373.19 501.047 2373.25 500.997 cv
2373.62 500.707 2374 500.45 2374.39 500.2 cv
2374.74 503.237 2375.08 506.273 2375.43 509.309 cv
2371.79 507.777 2368.84 504.965 2373.06 501.123 cv
cp
2391.76 496.495 mo
2386.33 493.32 2377.63 495.271 2372.55 498.752 cv
2372.39 498.792 2372.24 498.866 2372.1 498.981 cv
2367.45 502.715 2368.82 509.004 2374.02 511.458 cv
2378.86 513.745 2387.75 513.842 2391.97 510.011 cv
2395.71 506.615 2396.55 499.289 2391.76 496.495 cv
cp
.0117647 .0470588 .105882 rgb
f
2334.53 584.878 mo
2341.04 585.384 2347.53 586.096 2354.01 586.997 cv
2354.12 586.176 2354.23 585.356 2354.34 584.536 cv
2347.81 583.628 2341.27 582.907 2334.7 582.393 cv
2334.64 583.221 2334.58 584.049 2334.53 584.878 cv
cp
f
2405.7 585.827 mo
2412.37 585.269 2419.06 584.964 2425.76 584.918 cv
2425.71 584.085 2425.65 583.251 2425.58 582.419 cv
2418.83 582.469 2412.1 582.783 2405.38 583.354 cv
2405.48 584.179 2405.59 585.002 2405.7 585.827 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.1.0
%%Title: (tinymonsters.eps)
%%CreationDate: 3/24/2020 5:49 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KB3X+]fC8\5^97DF:'_./0^=?-,g.AC#R![O7+a7SfTtQ\D"bd<gY[(tN1-fg->T(fiAR-JHI6E5\7c-'7_.6_Z@fnNE^FY<
%e-.!C)=T!NotSJbVq"_\4f45QPe)"Pd5bnE-,87g"LXoQhT-F\G`CL@G6MWlgfqNo$bkfjRTI(O2V,TgiDsa.)mnm:-`?&0.[2Tb
%n]NhtJe%93Q0T7`FXT<B3us[moM+A;mb,]*EGB_L]g)1nWpNR)lVrMVa(;>em;&fh1V`1Z'@>E%:5!*`:?EP2icT#W2J+SE"^a@7
%3UC3$GML-"2RUt@+H[.b+7,>-6j;PS-K9M[XoB>hQZ@+A@H3lJ3&lZ2.VM.D;;nn#)i/nE@*'$U&i"Y!f:+Y$itJ[c71f$)DTu#J
%,P<Rg%THh9"]<MP$Hs7anlef<%4,q-\M_nknd;Q@PM6%;otPG+T))dHDfLY<Xj1)B+.sVD#'(#7ES@PjXd>#^#EYi\RE<Ni'U8P7
%N#d-#eiY-q!`jX129rndQ/;V6$u0(D`^\707X<jm+*p/!j?8V9Enp:+kJ8[;lC+YD>##Z[6?sIJEhXui3Q![?U&fik4[I8q?gIp-
%#WpY#9IIW:a0"W,[BUk^!`E0#"jX2rX_KlY<F*`bm#;"e)i9n!^A*'VqG,(LKE-hV7H#Z2og8ZAN/qt-h5t$B]IIAd1&q\B"/f]4
%lSffeirK`;dhI<tJ*6/?*PW%r@@i'%j1D2I4.M)@66RmKXPc13Q"<'.bNu=r;KLD_e$,:<i@dpCC79n-1sL0\:/)DfQmUB=iK'Fs
%-<;osXG5X%*NKn^=KPE8VM,)C.29"Hlf)(!eMM%/\lcdk=X,h=2J"ck2C:MD9uHS.%*e;EX!(aCNn"]D&6a5eJ\lW4K0\BW_&f>'
%2+G+F*If5/pl8W7A?i9L."!DpnI$*W>W=4N.@U?=6dY<ClaSR5KiFeg1JBT010!3oCW`;_!3k^ofs1']nfb!L.dR\H+cQ2V>qnZ$
%aOrRK3;eBY&B9g[$oP+@_MI[U$NXdcJF@mV=G6-F%:R2!7SLfS%(U0Y3+g5>2#35s6IN+f1>H@sL:e'V%!i*X9qG(=NQh5/ai:?6
%IolpV%!`NfUui)+FrFf-GHAf/*FWK'@?'dtlQC`)4QQ'0Or4&J(lZp2Fq0oej?&em@i<9#Toar7A_:YeA%6.r1ZZsE6c+NGZ0>c+
%E.$5"l[YO=Isgf\:`3n%g+rl:/mS6_X;jktCBMgKl&FdU6rkiDN71-3LcLTda4qA$ISB,?f.f.%:*DZtH&Ro*]&AmkO]f`+WJF^t
%rpZ,P8s0-F&j$hXZ9Lcd^Z/,`#L-86'ucg3:Y4:gplkXo#5`6SdHCf7ZRg8Lra^Mec$m^*ljoOH%P*E$fjD#*I`J)I:Pf"[Sjs^Y
%4/4J+*WBN?#c"10'GYTMhYr5aob5TI]X_Uh]/B#?RV/Z^k`bQ1:Gr)(8&oh6Qc*Nm\cJ_7Ht)]>Cc]\cB8UZCJ+Q%$1\ru*o)9#c
%s%.;SpXq2\J#9fmc^?!4miQt>kR;r8Z+U*gk'n$"Ds(^0\a"d-5!+GprM'l:TDmH,bPNr+Se:S88!YkLe&61(f,2*2RHZn9YDo>>
%fLsgm/G"$k`Ya9W*Qru"3'q")_h((S,6*TV5"nf?bbP3F]!,F60N:cr7#'@1>stH#5oF&rf*f0b9#)Gjh32YPE+N6171!9Us-,?k
%<UK+X=O8M-<6u#uaO0+$Cch-%S@ZK\ABm$<Wg7DA._M7*RR((fO>s(el(*F-CT=0l&V^rP9h8Y9H4:QjG]sL`>@]CQ;&f;9?sFSi
%*\$OXX!$Um;&9#S=b`UgMLeiW(jh3oFhGLn5TBr7VN")1.hsU&@D!/cTK2o'hg5AYTUA5A.1#^Ni!^Tr+X7tPOG71c#<Vu5kZrDC
%H:b(D9`Pbk9F+5@(s3X>"P+l"<RS&rnKPQFDF-U_:TN-G2K[p`/`r&ldG5WQG_F`5mE/62$UmbTEJ-l29$4A8>p(I&AW43>7p;)X
%@3VLB6mZDpI0VJ-kbY"e$9!9qA;0PB:H]ArJB]rJ(IcpfP_*N3ac91hdl9+'+o<f=Q5HX%!`RVDQ,LT!GehW+qM0oa-H,#ABh-m?
%@5aH3!Lp!TA!"Qh6%R12\:QFe;\l($814t`8O?s1LQ.0nf/<IOAVEROX:itK7Te#(N#4]6"-]a*YL9Y)cGt_p+#8T<0I#IAf][%4
%<Z%bfUf_'$Wp3hOXH6$388%u+(GF[uN&?dbB\I"KNR6irb(=k*&2[OO9L2b)!HbdrCi2h>Psrb1>heno&r`:q%o0?N4_bJj8?`;I
%iet-4<#)Up0I9#Uds%=p'=f&7o45_c&hhoNP@dKA1/+@P-o/6HT5&0^'**\4W?8nsfLP4.,u#DU(,9Ze?EpRUq@p4bgSdSQRsk"0
%C=!Nf/pID,%,FX$AEXp\MBlhb6+:sUA<E:AW&MWrqijuj&ac4X5Vkg/r9q<,:(ntYrDk2Nj.J*BF:#74]O=q39,m)#,alLY/P=1'
%!2!$TjToN00YrkkPm!nMI]7%3\0["Z5>GA:_Rna0!T&OrMDAR*ecaMlDSYT)".:@o!rcEe^XG;2Wj6PB`'kZ9J?gm+Gp;>_VbLPW
%cQXXi?tEc#`$&c<J-TO$UahKU<)=I<N>;]M_X-TGnH9)n?uQk71HMFH8l>5+(19BIoJDuVM3o*@/\$dsWlO6MMAZX!&</kKYC]aj
%)8SRpMaJd#fYTs++>sW35;=#>l-`s%O<g>;gQ85$!sfZj1,EO=K@OXW]niK2MsN6C5GCuA9cg%Y,bRM'+6,`pI@OErjj=uY:nWtL
%(B\!p\/FqF:$*8O+jO5Mm:%b6%+V^P!mdf-+g?U"p-odLneg.:qjG)c+5PBZbEBW-rESG;)ZBB^T>Fjp0,f8+pr'?RaAr56k._/m
%,6cR;Q1!uX4c?D^](fWPh<tp-:b`Gr,239[(mBUl2i9\GF;RrA/H&p+X77TZ';&,Q1XI:"0NZ&1-Ngut=N2-3Jh8*3`f5l$)u?r%
%QkmO=<E:DG)Ur=!_\P*3c]8[3@Y))."a#9Qi#JH:KYb+G>EuE8`ikJHe#?([E1k'@)e\WeS&^=$_ghG8PX3i5-Di(',WOk:fj=tm
%G6DcQ@N:+C#()_X6.`>+G\,cZWZqb%q*aqI;BP-E5pulR5oa8h4.N9(VFdRI.$`Yi>6'!(.YtNEg[)6h&e7g'7n1k3q%L[*G9`B,
%9Y\e^':)39%_rg<iE)U2MC=KE+>-Iq#)Vm6QGM#k;(>ib6DR%M-%OcG]rXWAN)t-)@oVsFlU(5W>"l:X*'d#]BIY>D3)U[I>n&U3
%"?RBqnOsL8\D\ihY;h9q!65uJpa+ZXnh#P0VtHXOo)4c-(ln0`A*cmP!\ruWQbd?P;Eif40gjhgs%!5[FI1O,A^Eeo/]%b*5X-#^
%UKb\s)_.o9pKf<3oJ]MB7+aL-`)X;MfV<Ra6=^;a;pGCITcdI;.P_usWS"Er27GP4kXF#7;ug3$/Q;ts/jU"]$#\ZS1)#<J2p+c;
%b_uqj,Y+Z\$L.YDh6p%aT-9$jJHmmVa7=A,E>R+oLl.>E!3p-Dq>!@_C1n5X_?%E8?+Sf<0\FpI=.H>.XDm&s'@E&pIc%#0+nPb4
%@*uV(8]Jh6m3o5ZE%Sf#p0$%p!$mO)Wii]K'$gZI#^Zh3\d>/J6NOX6"Q]J,X-fpp]*_&pP3N$S"/_!@n"G1S5G-1TE)TghEV(MD
%\B1V`!Hum?^_\#R3KN6lX$_lI8$1B7@$c-.'=1l:WFB"m0s0(ai>rIW83K4?Thah'Fd_"dR[70MdIEs-)8.$`8li@@GqkPF$NLD=
%JRaF.)`'k_@$[5DN%><<+T@Bk7t6R[M.C1";@CrGGU5Du'm:@5"#l*#J<7Do$k9[g%Ciu?8oa]K?kZ!t>bdGRW-bSl<?[bu<(8kj
%>bo"@9ZX)#%j>O%86(q**m@HMpan$mNm?IU&JOWNcOc5\qT5k`E21Vi@f4]75C5jq?I25m%ZY(Sg,S4=O,kE1r:ut1h4<];Vu3)\
%3rOeL@7'_4:p0B`&?c%B_N7R&2kHNbg\_P4`U!AH@;pA%ONjrYd:F.O'C!]-s*F<eeU/4&fNJEEX(o:R`<eI9_j2S`CgC,=A-<d!
%'(![rQn?4\ETJ71aL"0oAfYui65I0*Kp>k_h%10-o*eJd\M/,Mm1E6OdfiFlM^,Js?pi6p'T`BE[u(c9U]Q_#6m=;'b8pJ\Jfebu
%>n5"W]'+<*QLeaP%i-o)IYRn_%KYYI80[RQYom#_V(.:_hC;@)bF5(kG\X7EjPgP#j]d&gk^YEnJu9E,9<hG:_HqtV?KQrD?c.[9
%Nra(7SM(X]ATYtg_LUQ#"oAka2Ai1@HC4K(-!!)#1l!E$`#;OIDZLMD#%#.VQSeUT/s+P?9P>'BT!0$JJ%`<$NK-:7LAmP?(pq;G
%0G)"CTp$!)FboCBa;7N2;X5fD)_!d@>pN`WMM7F!=g7\$a`r(NZA+M,W\5A00$c&FeO7'aP-(V!^aJ*@U1?e<:U!A^@UAnJ]aRe>
%W&I)0&.0S-KWDbKl@P[15XHaGL56:T/u<n`R$4T`Y(I(`$`h;`;rH^?b`B$*M1?4%4\_7;YW,Fa6qD\HS#;YuHk">&%L`S/EJ._=
%5h8I`/Y+5\;AK[aOd62D$nX%"8;aT#Z\=S3;?\d[;9MX)@e;'9VLc<Tn/Gkto^#CO=OD'2(+SPmpbXFn03Nm@d5N9j;>7mj=CEn*
%WG\4d%(S^$PX05fdn2"qCREO8q2bbVR74\YT@O=s;P98H@7DcNH="gH@J+U1/dR0UfRc*9AJpYe<S``Q/>7hP#39JgqA@k@efORf
%X-BDhO+b--ZKV7G`0Xuj:a0H_^>Q6NKTB!kH#l,H(1o$!7f$%Q7)FS]#RO$])rcR9A>$T!*>tRo#Dl.LM5s:;W_B6&<O8m/Pr9[<
%5GW?:DVBha7A6QZ^.FDJJ;YV@]L-rh[NMajO36"+`AnJp_+!$S[Z&^J^Uc*,R=0uWF[>#L<Y_q*p7mkRY=&RUr&X$o+jADU"6+ug
%,[$0cB50^C26De9s+iPLWb=*=:g>dod@CZE;'i@h6<c4^2'%nKZY3&^k1"A/(uEL=`\_\L^H#64__3QC8Y5^8(<H0&,G6NF^+rS$
%adLP1'lnE4Y@%a".@lp=0$8I5f5qFhr0TIl.Rl>u=T$Hu82(6).I\ieK;F_9i,j1#K.ioH\U(NQKa+Zj.L]F6*IBV4GjAFLBYp.&
%CR]=kl7dA>\im%<nXgXX0_CN,1&U#4C0bck'ti*^4@g;RqFH%dVlVWR0O.o=p+oYa)4U9(f<7cQrbND2]o/#V1"p4dS,]sbT.Jg=
%<?3>Gmd8Onn)oLBO]ajq1\scWme;c+89DkbVGc9#61[<tmQ]`Cr/'^UjecR##l"3d+!`nB?;iBC^S(Cp7/,G^)1SZti1i*X,hHX@
%s5ZK0cZV$cUI3F<Yu/N3T)$u):rf-;EM$mP$hR"@W!-9#D#Aq2Sb\goo.RPc2&0@Y&"l4rJNHU+otT\VS8iOHlb^cW<mY^O2_)XN
%s')eO_53cNjd/"oX87lac5g8@JKN(G-/,(VGM_m_cj0K/lK#WnF*UH7DTutm3Hc1lda.D=97+^_"Kd"*!@o`[^A510RHU$gbL5EB
%c"hR+*1_mH4KO!a1EPI'mLh&HSMuu5oNU]0TS7]c3^*G&W/s!(AZ3L]UTY%To3.^R60e^]<i^@WS,AqEp]'s-oltZ?G=pK#IIbgY
%me+Na>j(IBh^GrY/?ka$L(WaQ/.:MBY?%]1[CkXE[?S"%h=c!Z4:#\!mfUj*,:1[`.;YD`d'FhebFhmQf:uc;,q"57C8p?frFgEQ
%CtsgC^pb6&%>LL(.!UGP!3B4V[COiSs4bqq<eEknPI!*g=c"ggBT2S_BH1>@Kqj;h/s`O\]L*C_a?!tk4\u?<e]T\!MJ0.l)eGE2
%=h!,TA(_:U9mkSamd/YCqBS(0c*OoQo`?[JdUK>\NOED=c>FnCm'XKH'o_6DDTT&(;76@QT&]9"+XcC<nmDEDs4@:(]V-8kmOBC<
%&(/mL<TcRlfp"maeIbcu^i-)\dUaaO[s2>j;I.Z0+'8d?Pr6mAX`Io\(gIerU**h[pqVZCTC9U6s6TO\G'#W#D*c'2(8?3_.JA?s
%3Tkq_5[))jTHba.`n"Ms'2?m402o6P_kn53$N-G8%_WjeR/0j:_hFik4hC!l,iC167!a]Q`8;k4L-pf(Gc:Pekf)E/^]$a\Fa!]U
%^E&cP<0UWjJ1bA8O]>PJFkMj.fp3X<>X_IWkYP,U78n<@/:c@"'h9]&Xt$Hu5ZLfYeQ"uE<*LrQ0Q.]0&5&CkBpt``R\^`U7rrf=
%(Nik^FA4]9;n$`+2SEc0L1JA[C1t,R]O;b>;)AGATkl2*4pJhYJP]t+&hF>jr)ddl,#)A<`IGA`;=$B?h?/(gj!-s;;2#*+=HqbE
%r"k4T7A2+h/f[;>fO"Xh>^UG*@DZI"JSW%$UQ,\:K#_6u6WuJ_*6:VO*d"(sYO,dHm*DQp@2<5EADeX]^?5dKNGcS+p$I"knur'*
%NsZ',G&91.2q>e:,*`sQC'D8X__uALf(%#c>HqaD!\P9?f.+YEEQu7P)^&=qV#gB+9*R_?Q=.9NYR1A10Pqr=@Hp*q'o3@*$fi*4
%f-g^)"^hY[0S)6+?kHYO,6Pi>L7l/)&Jna<2R&>N/>WGY!K.&4ahZ`,/nf(X6EKa>AP>-93q1uAKTT]E8;E*.Hb9DcJ&VRY5ZI!@
%rQ%Bt%bf`l+\%ZHhaQ'!MA/;_9TTH!j?fQ0@0OUR=r.klUdkYM;F$gA70)%'G[H/@K"U=j82A8Z.(N51jD\#Y!4sAC1l>Em?'r&+
%#a@mrBPS_UY(\f8!4%NK$Qr#+!ekMnd=Eij)]"OW!HP^NX@Tgs.Kq]"H]g\Rk[S%MoJ:i=oSCjh)W/=)YHLGCFJ,K6<PT'"FMSM4
%\hFj-GUoN\d#($qfF:YH%&XcV.E$1aj\W[Qi='0TA2shGNA4[80*$@P`,*M4.^9mI=qP;d##/`\``"`T5sL`hbPmCs+:36`3aJ3b
%O;-<B"")q-?b73r^e?@7N[r!J9S"Mk=gJB-%GfqalA7h>aBA_`,D\d`LqC=8FG^ZQ@>6OO>m9AkJr"+,\K4u\>6%HMBjs&,d)NlP
%UlcBs+:%E%J-eIVl/mQu\erB6,p<m%DlBL4&6p6UR"X2qi40]pf''m-4>fO+6B?bD1X3aVM?h8J5so48DidJaUsLp)nq&7tV?C7J
%`>%eTX<2ZnjC3\,@%'o"8-rY`?Za/T*Pp6977C:s&4,')O51u\a"DI*<Qq\HU#eSr(l@d4W];.=XL+\Zo>M,40m[&=\7!i0BLH-)
%=U1sqQUEPgr(m&QF20iB?pG5HHZWFt;$GEVo/6+h88lq_b?"S-Nnir9nEF$-_uA#L9DqW^ehQKJ`*T-`+lu&Q_^;]U"sYl<$5j+)
%%,B5tGKqLY%9OF=bX8NN\mU8'8sX"?a_'t-(cbtb3FF2D?tbK>\]A&13HDu1E5?>oPS(J<i._PGA7RAP8Opu*(PB8,ZDN^6VNWNB
%P;?6-%7:Vn7*7eA[/aV:.0Z1TJeKR9M(8^.#>?9X>To2$5aMqF6DPAn0q`7]jT%bCTgOeLN=MLY`h6hc+7qPhDfDo=TgsmX%oAOJ
%fdVQ65'82m^'H_Dbo7gM36[p)KnM5ond'F]G_f0en-X.C3V$pB<uAEBq#rd53UFt$#G+2@M;7egT&G^AJBR(8cQL8qgj'F@-KZ8_
%%e1$MjCA1G3@Ns^d(k=S--8a&]G/c%).41(1P:(o9T;BJi+gZ57u+qVbquL&#P+Ms4kb<S=<f)>B[V%g?]BHT?>l#)8Wj4/)g\'&
%96R8mdDHW,8lN\+@.i^jJ\.4g8m`DI++Q*K:2iS&0n^&EN":0kQ4D_IGM&]OGk_Jh,0:,qkCn@[co<\sS04VP+lWU^M*ZGU*lnGs
%qF'P@4OG/tW21n[7MP<hm&2/'3V6u1BHGU8Qgu<e#K.7KH\[^dE]cVScuO0rX@X2s0U#!r\*)=l'CW3X)3Y`F:SSZ4#)-)d8EE7P
%*nj%p's1$Q1#>C67]o4@7_L-<)@^p.FBO0!5Oa#EntD]jakebs`H\crHn#/P@_)RtP_5Gso0`\X)2^[j9JPbH'.32S-5^:?o`c`Z
%9U?A"3Wr:i9O7q_icZ'U!cCZ)6,[.IM@`_0&8N3rKbqPjFs0nAM#g6LeDPLSi.=<BE62B$4jkLY,NK.<!??.V/TUN,Eq0rcmmV?b
%ae^YP43q/WNNr[BjTbq2$TO@]^g$ku9N_A>!6>lK$P`%k'^&[7iTh32B9(Uf>fmVao8)5F'!h\S1I^]QQlRHs+W7U7T[G9b;HSI/
%q[5Yo<9.Jr`<0s/$FN;DCc`>K>G147jOPaCQ?h-M7Y/%&Tf6qY%NMAJhbaB62c9W/3l$k9kZSYp;l9a:-J's5-;[mkTk'``#sTGp
%Uadk$=BuV<[d[<+#EpMX&V(Wr+Wr3@L"@LZP34q^kD;2pb^!Y;:S\U@.YQQf:=1aZ<#EB+JuRb;%R@55/qns=JFnPa>;tYPHfDm%
%]pE(1SK&<+hspgd5&4D2-dQ,d\^ajg+6pQ]IEucGY;\t,c\&N!hjnKg+2@6OIZ-:pR9TO"?>I?u26YJC<A1s)^V-.AKo/p3jn71R
%>uth'QJ\>R;Jpotd>:ZY>NZ5t(PIuFJ@ie^h"hn1g:0aVqW?>>][jJt]t3V?WRpY)X;];*XLL;7E30!GX4FrW0#[9F<Qc6[_Fg!n
%-4=C6A:WXZFG'(,"q^d**!cQsc*Hkk3_[p2L.sT-;2)seAY[snB7MR6HW![Pdf\L.jj%uQOEeIhCbqY@S_+4n3n6u>(n_1_[&Mo-
%[H;*FFK5&1#i4aR0"X!U;=_b[a'+IV/*_Lk!0%5[jgVk0//Be<3%8gBnZXj]p#Arjqj**'P*ID,"nI7+*ir#<mCOtMCDW?oMcoAF
%T2F8MK0UC[_0Ct.T9#2:`7.<+@3Qu6okrf?%%9A^8BjDh\E\1:Kkb+b]VV,`X>MFlc@Tr7jR9A8ZrnNo"OP*KKbc,GC"Zr"EVW>8
%+O=j$"P+U.P1uL^Eg$gkP^+Z9&*;rIgcUgjLN7+e.P2/nqqCY7g7AOj"+ck^0UKUtc!W5l+h'LnjlWi'4I2JWEq<E$-[du9Y/PFi
%s37a<?$k\kqjk5V[jKp^QnB<h;]aJ#PEe?WhI-VCng;-&]M,C'h!UCIs'+$kq.,B;P1:o`f4D'GbYnD_-te]L^n0.p\#WiQ*Y."J
%qop#2XdhfrQ7&U>ZbV[A.$Z/nQ*Q7ee8)7\;JH$!&^iANZ@5KOc(pS:\.[Wc[OPV*5:_#e/1IoIoguDm%:+?dV-"(>6#5NXp$d2W
%ANtZTK9=]RX+Ys+#4=Wsg`7_#Z^B^q&BZ0Ch3uqF"H@TFCLi!r^WFFP'=%^Br4<h'r*'1=2jr'D"!U;2)ipbD1*G\N#mS7U2DD!k
%Sl[^6OZfA0UlTL.<#_CGC`0D+h`$NN/uj]^^<WP'F6>.^gbR83oiD>QHNnu.O#&k!3MoLQA8p%9Z:N*^"GJ+RBtG5eB*ni_\mZGA
%`(@e<9XW?!,A2QnSfA/FX4k+eqjf:i@;!_<hSPFL]iFuif?5P+UZp.>f5p!IYE1tc[e2PHhH="1ETFU3I)P)>H99d`m;CA4\'AHs
%b%JH2B+R&Rr^@t9C3Ieps2f6E@JZ>cA0T@LVZ\fk0]ag4rfI"8`;)Hk#T*:FpHdhO/_qu=%4b22ZK5iGbAo=\VW,h3[F?`0$o;s!
%2@DZc@='Beo`hP\2*Q+4K9`"E0P%?+VI#8<"m'lnDOJ[gUX*1jrAW]]?!'aG(W8DQop49nmpCJ6cQi[AL0)3',/^bq`r,9(ft+fq
%15e(R.uGmq3q=0$[m'tKrr'P/;p0Qp@X)L4K7[NI6]qd<lb+*u^$-^S;bd9QM`]l,>\7BERB\AIJ=66ABVu`N4;G$47`2F#q)*KH
%I?k7<I8)$lT9\C#i9fLhD_ba:j&FdXRTK(GI\UuF2.t@uK\QM7\Qn#n1%fZO:$HF/QS,@!eOjB+eU$&(mP8&;SW*n'6V_KACt(,p
%R<+NPY(/IU*fXX:l.0d@BJJnKT&jS4RG@6U6`sg?Ucnl7^KTp#:"m86GONR+%j4TrNn;EE<E=0=A5tF9;pM\R$`c/(.\tK"l<2\k
%;727C,D3lIA8ugFah^fS2LI0qP5(2A.iedr<]2>*:(!qc:U/8kW4[/]g8TPE!``KJ;G^@KY1]pVCUJ!E.;P+LV@bYjd&0k.f"3/-
%[%o+7W&uN5KFAdq&g'<(,q%%(9a[*n?<iXkiS`#gK(6cOf:Q_eiAIY.9J!XK]4Q!e2J-/Ljss<+,![[7V3NH3J=2\p`=/q<a[Ckt
%(QA/^PhF3sQL<0nPUq0Gc/;Kas5o`#;p0Wr@X;X6/P66!E^nWSA7DS'?]/qPr.3:%>)SOIR/'pMq-'$__V3ee[4(#VYSJOK&t*pN
%I](bkPjZt'PUsVoMFThqCJck7@bO9LY-(2Bh5.M-=b)nTWW/5bBkD?Z9dX'#6>K8XQF"8M?D\HDF%X[5jqP-hLu17O8^?6hm9aPo
%?T>D?bf)6\&C$sJb*):an+8F+%En1p_j>;PbKO4ph+"S^F1mk?"`q@8f5#H@2A:D=fRf9s]6:[=2'7Z9f4oB/p1J0K\[-IWS@,n.
%RqoDr>,rsQ#[L-^qY%:i,QeDQm3UGR\c=]+UYC]h4r9t&.%#q?>`;QCUC'"=_eMRDoP(0+M2Ag-o#<pTS5fO^CF;".a2K^G)fQu$
%rT=\`RRR0VD3Xuk[5%S^Q)U$F:#G7rRJ&d8e=@<Pn)1o:@[:jAAmf,;Fq_>P)%Xl;1R*`7L=5YY_9f1,2aa!OL@U7@Y9)^\rR.65
%-DSJ"ihe!^6l"R4*5"2g4+(q_M;7R1a(99'aDH*JR5W[\DEZJ;56u?YZT^=sK>qP9&Uu]XrkrCG'+0g"oP6'XIuA\DM4&Pc>RKc@
%TFGo9EHdeAqNq%pP)>nD68t*3+@A'R-B"DL9MeD<,V3kg_3om@S8K0u>o-/MTM3`2cN(kej]ErKjN56r[Aoe`]&1V=6"\J)Ap4!J
%hDX69W6CKcr(WY6h?bDeM\dRT8_]Y9$oG`JDgqY/p9+Gpi[sugf70\umEVp8cEI9IpMe=uL,$IB42:bV^])sub2'i39AUn"!LAD`
%N1T,.RdZIfJ>PG91;Ds5^ZIVmk'L<Qr:"L0i;7bNe>cU%*N62C_C[5n&?!"R`1i%r0grEIl*gOWd"$qMO[Y*&>"gYm9]45PmUVri
%4Ya,`K.?>u.M.)?"Y3l,b&uUK>?]>NGK;1DL?Pet+Z@Z.buBGaN]amsSfsS9aQ=AGH%p-sB#kO,b^Q">7:DZe/`1J_JsY\>Jg%:'
%"e4DL6-\k7[f#].d./)BYA;JUB9Utg-UTf@YJIE$q5-R9M0Te)#+3&QWqC7BfFoo:iYC%7E14eG;Oi2lg16pn;]HQd*-/GFPACcP
%kUu%Vk/iCX:-Q%SIL5qQeo/0A?p\WL12n7hr"aS#r[(Pq<d_?p^RO/Kh[70/aZT)K:V=mb0D!-*4Rk1&]_pAhbnDb:Q?_A&(7'4(
%=W#;rbS)X.*.cBK0=ONc9MU)mSTR+pP<_1h!RFGPORD=%'6iV?g05k+jsd&sC8T\@Ca.%L#LgE?7$^OWk*o(=#7U4K-7/jtp(_c"
%D]O>fUHBmaX*7=OlHjqUgc/'6@@;<!38]R,3fN*H-`/=NNjfG+VVXRM2^gIl)s9::h5q]bDF)nMmS!0-QR9\Kf)EYA[9!jPcQ?'V
%Vef7Q\*hDbYd`3]Y5G8=$"j0[p'_Ih/.^2jWE!)N:QDig^l[MhX&NfE`FJ2@=&>m'r=2Feb:dL-ag3>c`rtFp(^'[EFmior0Q!&b
%Wt3CF7qd*!65*p=EBK"_qq5![7271]n`#)j0'nJ--E7r>PJrrYTJ)Q>Lb)m""J+9H4S58)1/P8)KC@?2VF@#fhE6iR"d+<ncXY0q
%9Jc9c%-%iY0s\SKcXTXcUcW?I5L3i`o,,qGR<]i`T#[4\49c#h*A>mqWi6O+kLZ+X+K>!kQbH/W7e3l\[8RtZ9rF^AXES!QA\(;h
%<I7WZ<E`_.j40_+eLV*k=hCr#7GUaokqZcan'n3tNGe\3M"iP8f-MqC$7I'i@Af\iYO/qRs(g5)Pd5s]4nY_@qrTt&cSlb7C7*+\
%1iu7])9SaS.]oA8`V6*APCk-uF(RI!(.0'8%Z:(r:\0",k5.@@\h%h*GNbC]Pr-&4cY^*"qH\rMo5<m">6A-VAl<T^qam*D_?=da
%b7l;I8?2B,2gNX]V-0Pl]=-WJeu'>%D?6?*lu*[19_jjT/0N.QHqhM1Y>!*scWK[ZVfVC!EB`QeA`=;p4-YZLYh3Un;t7_SP)Gs.
%Il`YPk-<_&e_E9URn%OD0Ug0m4m(/IFFZ'+k2t(H<%5gK*R3EVPuW#ZT$+>E`XKk.)5*FRF7X?g*mW$J\UItTLN==q3;'G.F0C4h
%I+@enBVqbijjq@3&C"bg@NNii6Tg],)uLTDgg,8?5mCD:^*1DTj1(%,d*KdCi+@FFM>@.<o6hosE*nG.!dAjQf<<jM@l!l6)FQmX
%;8aE?26V,.R:AZOdjnE[5;k9nf%QZ:[4I/>?>i_hQgopU1F#C-iL(E8Efom(;MsmIG4XlT^7"gCB3'SOHNt56C2MZN[;`TsgMB)-
%n,%7)]@q&udFi<1j=Elih?K0Q\I9FcnAf>\Jd+BA4A-C<gL?&6@krO7nhRaqWS3Pf.`2n#G.1KA8q'gFdadL]m(WTHo4)KI`\(hP
%d-_q3kX<Uu4-*a$?Q%>1M7O@!O`CYKir)fXG;EOOLh]Zl*\sf1fTYKB\PGtcD!5<9X37QYF!@C_%_:UTpZA@"S""a/;sbIXlC#:@
%iuMZLZ9uEG&OZ1LR2C;hN.*b@inr"RiSP!X\B3MTRQEsQd4(O]7)+*nB3^1(g*sUS.K$fd5l"Gu_qYQe-bFko1`6_t9bqHRR@pcp
%n4%>NeOdS":(E"0F;VGE+U*KRh(T8l)(GfB4?47k<jd!SpG4tJ@&>Jcp4Vl+>K=@a#e="'S9WSX+lqE<:9e5qG2nrY.F4"6FR[`6
%36jj@1'7_9]0Vk>`n@h\Z^=%M5AY:BSY"`64(a6h^NC;JaUra_&_usuM.UNnU9T']biAs"]D0UZq*).6Y0"YQ^lLe=U6>%GUp!qr
%19<GCg10DB=5AMs1@28#'7,';>.7!Q8XntcXqnC)7M0FIe\p9aq!RD_+2@i9\4OiibjU\!Fr*'Y=NfXM:&Q[^^G!be&TEd1U\eII
%.K)'8ai'`S>PBrO2?VQ%DW-(?]h6(5#tU`\hmRn'S[_KO"14JB<YMf%K6nsDkp2rXgeBbD;DdtToj(MKD^p4ZXgTRDs-P\O9=YIF
%nW%fro3Z(R5Gi0kMV9nD?_=crUc*5)NRI&bWfarc'68.PRiOEARnYdSkK7V,\BLQ.iXcH:n<W#(QIfeOZ91]e$@2WrV*8dFUVYGm
%4`9G-c@d:aLbr71HCjsM6lfJ%B%:Yf#j5jrFhYfbpFNTI9f'<@6]`(cI8RL&2TjFbOJkjlU5S2#irj\%4bhO4\a<a()p'mcrU5#q
%c5H!(8Z`Bha7NILR#k;X0)_<rlF*m;7pa*FnlrZb<Z1$ZmUV?K/U4[,onqEe?M-DdC?tBG/R8lH]tU#[o*GF/l08*Md"]aT+W*,T
%A\JXH;KAKScjLA@/UmQhdl5r?X495J%DgdANmAW[pBLR_R9Y%Km,3FqqZr_`*4UYip8hG9f)2J0O?:IkE6/k:D`fR2Kt"^0#dOq[
%D-g(69p>+*.%%"=?VJEQ"GJd^@ptR?`RgS$q!.poI=\]mJ;W,ZmeoX!=8iS&St\'W-tSbS/I4k,9sUpYa@Lh=*^;#Yc0ob%#0=pJ
%D.^NSrY0ZlG?U4V##$0WDuN&hV,.$^^Q[(g9J*rTNPP>Rlko?X!jYn=M0]rBN[F&=g,Z0S\nC2$rGj`F?q@#liq^6d/"4a2PGnH2
%YLS6n;$0a]:"bId9i^"bq4OCTRXufRe?]GP&BkF.W.*]\(KWO@ftdH0?'7TA:+Z=$lJ&8S_YU!=C'IWr";P*.P=\_<!aX4;G]=*o
%!*g.]GsO+e$.5]PRR)`E<QS50Pc/AT*d4kARW<:a)^)Su'fCPIOl6`'8D$He%AZI"<(,pmCb<ai[$D,6/Sd)go=?@Q)T,;a'jAKk
%3LW:G'.DVi2ML!_'\+n^BI3_6KUedBksHg$8DFNs7"fdJ77d%p9;4f[0MGK4ACd0Ba<EsGR0!p1^.>OXlZ1LCMDN*ug=rVF1Qs:<
%fL&sV2,R5fR2J7n'u.ibLGNFBM`R%57ku5ZN]N@,7F`[K9JlhMX>>L(b0Y-crI'NUDbun%^/P)"QU@XpWusIUZQ>hJO<^]96uk^]
%kY.M.(3UlkXX+;<KZulQ9+4J+\OqZ96ti\QEGIh5U<9#',[D"Le,f0XFRV+\_(``$BEeh'=,ZTaC8QkrjCOEP&Q*9k3r8u"&k+]C
%76oX9R>AMHl;9gbW+lA\kX3oiM+pGJ.27?Q=HdqP.hQ<dR-4[[Ln`7XWZXnXQef:Y%&r1G[/Pnq-r?Y<-TVi.`BXVCJ=qe9k+a(N
%fE4JN9GY0D%D,LT)rcMr8PA]PJst2G4&gc%/V(W0$H%pV]So+uJ9s.2/XSUnb:mCi)lbA$-c>ib?"Lg?`0__sB9U&sJ8.4oAiMj]
%\l8r37>pi/@Ho0P*5kQ!fb+a"6NZ=[Ub=//KU/JUZFS26#hb`X*#/PM"]<U7$>;<L>[\]+[/f,pcUt:j@$XJdK\S2Qp]6q)RZW=,
%3s/a(\/"'8V4!RFY*pd['5B(`;(@_O4]IlEOq;>5dWCZ5]V<M)1!n"#j"ui?JPf^-c@q'[@!(T?@5[/"VNDTrVk-l<Pe!>>R$((9
%NQj-)%T8*A;b.cu#s^?.*gP%C-d3=8=A3LPR;ag9Z#)3\,EX)M,045GIMW^(96i[2'HiHe`\S](#HWG,ClgWp!6U1mBil&,&-S!N
%<(rQR"u8c/8>TR<.*+(sr`(dYU9'HPl3X0dY7]3u1m:\c!0O'R6$!sA)+cs7+B7*9ar#]fUG5*`)MsJS_%90=k_^pT`6,AT,Z"UQ
%31^OQW9?3\,c6?B`s,;,6s5GY&=CfUWA1V".6:1i%)d'^I;:f.@WNti.b*C,"]Zd-M:F!k*7bpn.nq:a!g5os%/#?@BOOG.R(=Fk
%WG8\lcqq)<1,FY!G7;3A8ot8d;G8]*VQ">;UEbQ&Q.qFcd35!S`cqZA2?dP,6e<3j9=h)>8ka7^5Fedm*_ITRP)YLX#,%hGO_34=
%,83X\!p?&+4d7FZR`I+%T`fp=i716R)-17C.Zu-@aoP5=YUOAGSWHl/9o0Re'[BehAP?LCR!25+Pt;.7P%A!0Y(Cr<X#]>$-Cj5n
%c4Kj[A_FLZ(HSXfl=M]JQ#f^0h&4s;>Vjn2HD%gTRic.p7hnDhk_;WoLqF0kQas+P;/_VTi*9\9Ch3XPHj%%L/Lml8gTda`Z.D"R
%9*T)majaju^f1p5)K?b[@Qe.cTMH0r"DdsZ45D9oh'2B?$lhn`#.SZM^h#*nQkjua3n"VP;[FfYbgY>2XTB>OKMf-(3\V;sK:qg0
%PseLPNM)KDf9d\:k^A9i^4[sTfh+S[Q!uc#OpFrs5pP=kXA[E.Q_IRFeY0%;U3]_V`8jmS,Ys[JFqKpDar6WMo$tTKomYj?lQi=j
%QKtg2WuA2J&_I4"Wt88s9Z_PaTi+4Hc<_qmNpiq8@^Q=GSgdM?<";W(;*b)Dr./KsE6!r4Y4kTA[m[fl+rPWdqhF<m4=s\O=AL]>
%!bU-iM$u26>"]_rAtDu4a66)!kVU^L+Y-1Kb]41%-eA/@lr7V`Pai6>9UHAi-,V(PP!DbW%&lflrf$%Unqs*%Mh%6:hID<CfUZ7h
%J6+#LcjWo_%](%<W:rsG1'eTP+Ce&am$/AtNFPRIm>52c7V^]fiT;?_)$P*Ba='SnGiq5]fPu'Zb$j'Xm;lBHG>bE3rY,^?nrm3'
%;.(ctIag$')KtfRP53(gdU=Bi8NT5;>DELAnN)2d`JaDn!&ILI1R0PIJj_):_!0g7BrE#JVZ3]7IaKR]1<>@i,Hh(u?7\6UZnK.=
%XnLo0oKQ<p'4[@57'gU*J'L0V/uoG/Yk[u4;P>_9oZZbd-_+^4=0h\f;ukYY)WS",6+pGu](*gYgIsC0X8Y_gq"KR]H')\.+rdYb
%\-s[IA7VD%`//tjV6KJA]3<"]e%t)NB*l6NTKWPEn$fUd7bbg23+tZFd:DFis$CVK`nt"n?dInQM/p6!I1#ar"uLV;<\<,J2(n0G
%OBXsB^"NaRYPg!_0q_[&<Mr0-Y@W<'m*3=&K-+"nds-,WhP&1`T+ZAo,6Ne:=3KWr@7$1925^L4co#tXN.U@Nk^[#[kZ9gcXm4I3
%V,K4=r^KiH6BH(qX2XFugF,jQ%frPE.csV&4'iepX'[Ouo3Y:*U!,;<R<U>]40=5'RdZT*(LJILmh7Q]$gTabEk,76g<Cbf0.X)M
%m2KB/E*,b!XjpY#X&VM.QVif?`H&;RO/Hm_kH&PKaIRYENo-l9'2DGj'Zo8bXF2nf[5sY*f.,tInT[&CG=>/,10/9]6#/;9CL7cs
%+l77iG#7ckIL^`qaq42a<I^qFh3kgNfCW:XG.$2/`ODFNR,)=I)_"XfK1ks.?4/\A")t;PkW6SAVQ-p_]MgQ<kn'5#)A(-uh%'&t
%FIQG1NDV^EC6CtoC(;UC^[8MEq71SHmnU#fY'.J$C9?1rc+'^oL)b=VAd\uQj."XaMik79rl?`o]CjsY&+o2YQ!BHecqmT>&Rp?0
%1ZngR3dq1p7!%SQ&fDWcN<BLF3V(qV&RQ/:'B:@k3c8unm5+j;@i>XcAGu*]oGUe:n&itI"O2`NC,j4>/\(FfVgbsVCT%#%M#/X4
%GY*0VT0<dSaci_:SNcRJ\8QMfqT[n"DS)R%MLTi)knT[=?,k/d$)RKU78&jtc9TFS9s0*=+KcH"Q&'=nZ*e>acZOb\##s+c<P:l"
%RKFksKj&.]<:W@>GotRr[I89S[?(a!@+p-53'0f:p)**O^\61C5kDmdjOK?[g/MLbBod!2k^I=)8_$P,5K>/fLE7R%K94LK["=dg
%ThlA"aVc.NIF7^a`c?k62nq8D@m,%eD)O[2g,Z`"RlgW3\!jF67'f0S>*Rcs;sX3$_A:tSA[Oh6g<][=@fRq-W_H;,R+_6RFNYEk
%*^ZR@asGT67FJU;%Cceq%*4&k]CCk#VAUkR+9X-RI=Ym$6*'@=#6:/rIi`^[k<m6PKP=Onjm>-t23O1+P;cAI,u$uVLhE6Y2@*7Z
%rf$rKO2_l:hEmN(=g=n<%:;Ar(HBi=LE`;S10q?fMIG77@9_s_pmADJGq>Fo:OgEu"N[=UM^N/tE#*4gXP>a,gAYKF&P2+Q=:!M]
%9$G:p8nc&l@ul,Qg!83tin%8.dcfc8[<en\'1SjsX7ir&p05pt["6c1l8SOMf=GZ$PtJb(1p^8$-*d]k?sjoPQ%qt\6nJU=ZW.<@
%EX_37-6e(hA&cGJW23r23!bL?nZn%Z):]UVH\obDcSb0l`j3gRC2FZd<3qil5T\M$9Bo?$Qi.83=#)`Vg,Jh.QX21na<A50=@gCL
%R,5+([N`F&<2\4qkM)hFXV@c+_(<^nGr7hd/Si>1&@_15p*aUZYFp"Q%6;'6.#",AN.r=j2/H`u7XH]/+9ho^Qa71uD%(_Pi;Z7b
%HO/YaejGYP!8c%ROAVrFTknp+,;9?YI_/P%2k+C.7C>P)3MJ:o>eehQ=3\E9bA?,=D\1TR`2tPB`W5_9q4r*;B`DL.1e11t<b9,g
%f,W<%hbB3H#*?1/]WGLufi,B#0i80Q!NJGI1aG3Ij1$GS"k?'gM!$bE..jab#aP*0\Em0VO`\]t9gZ1OYL[.GU`qN-0lK\%Wi+:h
%Wi>-9ekGAAJP$pIE&)$qA8L1'eJpb,X.2"c_ak8T6=14tVbX:RL=1U0J8HVTQTY(%PhK6Gm'j#s%;uY^PRnU&'TD::"qJXTYGe2I
%^8uMChCVud[#l5=P'S++ERd,qN=uj'"$J=)oF@kB,rcK!/qM.GlW_Y?rl@)OE+N3?F:Y*,U"BRMhHm'#;(LRO;N@`C&gftB8&u]\
%C6jDlhf%uYrQJ8WjeM&"P-*pg=ZKHB&C$9q8$&.uD[0bkGqk<GJS$]O<UnYFEFJu,_8g:s#H`JF<NG<#5V_J-7oj>sT+G'UeUNNE
%%-!_DQT1HjE.SeVNA1P!r.5nI7\L!q4D;1DegP`4ikJK2[F=^g;9s#7JqP34k;]IVL?%Yube\%;)l:s':[l[Q>mh4PGqS,=VD9>!
%1+(`Al!k,(dTk7Mi1S3-FOA402F[uldA.K1G()M.hAl?"8Mj0%_t#LB#T5@T@V6U-OLHr>rMC9$#$[1h5L?F.]'m(U-R_ha0sMjP
%kD:q^@>-:SM2YQf1sKG*<i_3[53Qj7@D*S_VS^8qZM#t%Zu;s=:o0.K)?]<5I*e[+5G7o:7or-Of^"K:L6HS3P9#VIKA^bl4No(F
%djZWfS.*Op$%;W7!P+k6Ef!d7Q!NZNfaLWnUserf?aJATb%MT3?DGa9p`hThXOSKfD7*Ir\h_[b.QnQ:eZB'dbqb6$lO*k&.S)n]
%ihZF[?T[d^'n7?+eZ:XS]Pmc]\Dl%Nc*r#oBUh0pineG1VUk/8"*Z!?(p`1Nj!KQIbB)nnGa-eI_+)mh6od--4&6i_B*pB=$(;m#
%i(N6BJ_tOhlr5a4W9\$spZZFLlVA+Jp0R,GCIGo.\m5bb@\"8-pC5XR]Td,/L.14Gn\b)O>HbLXD0g,$&*/MdC\DX]YC=0)e[Th]
%hHO93<2b-=p&j^De"X:TZ28Q[k=Bm(EVSM?d;H!hdbUX>A1WUqZ60EikDODh.QlA>r02]D]=$@/n$\i[lS-QNk2F!S=R2Vi?TigW
%\@\U4B8,XE:<CW@+'nQ!F]a)#"6toY\=p[llSr68g<.%8<N@/\[Xf)Qf./r:6J$@E#I!MJ[7@E/(oJPt>Rp,fJSnN\="iE[Yg*XP
%=2RO&f%]u0]63._gtcZ,lRU9G@b4o>.p$*q_O(/qije;R5/,V8g2?<&7`E+0'X%+Q@L=?P+$(_<nE]MnP=MfZ7kj1NiR?>T!5:Vo
%lKjl3n(DKrQNu*pg-UEdif.%-_D(,=V3Or`UqTq\>UpV[>LoPHE5d:?qKZY]nE?]Qn@Oa*?6(S%DjF#P%=Y@\'J"sjChQ[Jp[hMZ
%_<6gCVh;9\>C?!TXgR_nCE9!0r/(J*mqs1Ob:nm`q<I"CeL3S\YA>:tY3Y`kgJqNdDc^JM<SA6jDDoG3bE?qnIKc+f+8PbK=X\2f
%$gSiF=ZkDE>$L[eRXS.I0YBPRgb%l2/\E^=RO[a%iU">2(3]=:n7cJ"<VcTJFLgn'qV>j:!_>E,irp^OHgS67U4K8sZ#>r929qku
%b(kTDET+uApU2-SpK$.YE#9$[I%jrG$4J.ahVVDua3'FS`P69'/j<e<$`h7mX>fCGZk"/S7Te?s.BZ:gPH/QWdHg2%c174aT88r`
%N1n!r>7H@=>4t6=Koba<`22j"XQ:s3VV\YM$UV>_\">)&47,\_3d8<>30j/L?]1NMk^fjA^3m3Ye@F5:cEBk]lf:@ra?#YuA-#@'
%piZZVQ/<>6I"'M'Yf)nf`N>bMinfVt^@a<.g=sEBS/'5#;Wu_:?J/K6I*JUC4i8tm$ZY9nXh6Z5G?_38Qcd=qlR,(H6`mdRT]"k\
%'g"*6ojT]dH4oloWYf`\.i;l>A\5S83]5;#%b(r4gCpTgUE/_Wf\J[YgpbQ>3o,7$p/!PrqN1Pl>5,8f*-KueI+@LN<VP#8h5,nO
%jheEKqQ>&lCcut><bk_):UW3WR4sRfkW%A(/e1;/\ZN9c/rK#%]X.W,pUCuH<&Mt8et6*cTBmf3:cU34n_%L,/X5R>8WsXW_k(/_
%[U7(GCRrB1GP9MWL$bI'^b@GQs4H#:=nH.((L*hSA>-=!3p<2SDnQd2>OCc7mpDOGb,4aB#:H#<i%,\EmA`XUF7&p_[(NXC1koep
%hfr6.R6FnG-9GDa5'V8_NdC@!FIEVN(CqVVFY:gZlg44oZX2HoE`iX47o)#.r$])/I<E9m\OGPt)]31&74<V@0[_MT#1"UiTsjIq
%#i@LtV44Y!_\#F9C*$=&&)TT4"C8S:a?$F\+"-Bfn=G4]I&,u(f8oOSZaXQV(abs(_[73lkPE*V_Vs*f0kEZm5BJC+UJE>&E9b"N
%bP/.G&5^.O+%/c8lo?#j!*6U$=e8%Qa'_sBK&Z'@Bc@WZi\cPeRg1H*gR:fKXg?R67\O"6;+BL3@?kosfs@SlmT*1jVR$EMe`-k7
%It"c:B\*`I4OWPD/?$/MV#"3HI<E*'T0,7t'e_eb[,d#:*YbI4#G2@_?K#i>^[2$!Mq`i5\a`'m>q.snb'%0[F<ahOb4)<g)R;U[
%l)/]J.)!F&gXJ>(Tn$]4lcRpbF*2WM3L)5R22bRJ$T0cl`tBa<bJm`3j,VbG3+0=Yh.ZXH;2\/KK$u`R3RK)`)X,7OP<h_WbW%1B
%coID/;K)(Ze420XE70A.V4SpZYfj@06E/?ZSg?Xn`7SUcEHVbQNN:;?&JE@pV9pu$8SDQ?mYmr[An(C/!f#q_#&AneME<1N#ZYSt
%C_L(D:[0DJH7tim%$N%%c61+G8JX3uqA-od7ZDn<:)h7q)0c66+%C4gr6id!*1ESrg1IRP"GI]GNhOJ8a+Nm8,I0!sKZ<C#80bKX
%V#,D"Sk^GH94rT@%;?I`@"N;pUtplqQRX48X8sNO),9WH;Bq-#3A`AIP5<F\m_gA?1(@Y4=TEFZFhTY&)\R+PN8BR4M'a3V>L<^5
%b>ZXsQ]LAM,=)I5Y._tZ5b3Ce\KNf3L36\1H3OlBZY#9sYg-T=CUh!NGQYkM/acmE>1=iMiN[K3/8i!7Sb'n6S&3:\Q/\i':IEmF
%p)r=(,Wpe;0Ig39)&hN>k1"o]?:b9<U'UkF1L#2/52l)0U#D<Oq<lV;jI6AZ'IBP@>+tEdL,"8^5qfCC<YX`MPHRT!)#M1Z:)dh!
%Xg?<%]sr*m^6CfcF*GmJAf,TZ0#uog)e&dFq,cml@%WNn_nE4!$9&NnU3DoX2;s,MS#)ILQN#k$e2_2*r]I+]97?YVhg5"m"o?Sn
%DD)fEp=dQ9Mu/0_RLQ.l6Tti/ntSR1d;]?#*+<N3^$5C:O8^r5ntLQ@?9NQE/p6]"JN;brFT;='BPD.Y"N)L[V3k*l3#7=bZ&W,Q
%bNk'Qoo$8m=fF&\Ja<28"LRNCf(IL4J?rI<h'VRKT%-$E>p2T,hX4G&TfnDK#<U5]g@>n8_@(YP1H9?oNsaJhD[Ym]Sa?k]Y;E7W
%Tumg`J)60[A^kEc3h/;Y'#:I:!bN;[)=MVf:!@-MbjfY-Z$S#,-VnLpGf8Q,3]9N&e\(FE'`b'#MYm3Ya)q%3l4o-/Mio4M.7_)M
%^::ZMTdPTRS5p%'rqsX4]Nj+lXmJ0tEk07ZOht6X#prS[T=,ft%$N@#rUfXMJm3&55>-oHh$@.kC\>O?HUBG,*nW,@Foe&@p#eFL
%d!`N>]m,#"b&s#niJErbK85&-e%IjU%\I#bj%-a?3?c)J6/!$U5MY!qg"F!I#l3dr*ls^uB&=T1JE),WM1p-UZSJ0>)eo1UHm20"
%#TMlO9gG3=*"i0&cAQ(,3+2Ac4Z%AUSgT6%R=DL4jH]Hs*8t/[h0eqi5(o<TpX5TS>A&<E00l#oQF-P[Sk4#H,&AoT,p+#.675U-
%4h5HSM:1Mo:pD^u-P-&5D\k'qioTUjb=D@r;GC&)pGXVYP:tM_9CFHkYYc(h&%aSjkNQ0GX*[bcQqscn6"LnjLf)^o:lLUOAJAW7
%Q%U,/ab$<k&"QA458u,mM4("R?QheKb9s\lf2:Es.m%Z6547kp6T-(7mpSPAmDFit67L>p7m#oqq:"ogm`+iO2j)?GfC$81!m`1p
%$a)A%#$#=7c/ro"dRX<5[K#JIU9r0X\*%RKFo$Dg7E[@;p#@&LCFOJg\RHY)j`c7Cdro`mYuXG`YaG<LTsP%4?]Em$f3bSJQ)BsM
%],P\DA62HSZOl$,`&ok[nZC?Ng/I9!@F'4!@0sgH:'kV/DU\-Fa+r_cBFBU<!gZF'Zh'shnbDs]g>P%o^*aGK(II/W;`T%U6!RY(
%Nk1OfCV;Be:27s8?51^t?7k#aFuAaSmIfYGXRj>8PXfesJ,3AB]<*rsCRpuuJ)$uO1+GQ^f8l%P$*T-;VsSWbS&<;)[X<>a?>NrO
%pPp`jI'!LIYO:e,I8]Xr'1f=0AR%-so&A,"X1Sk^N.0LVK<K(Y;ID-OS.dOdpSGB\aQ2?VT<HqU\kiF)\Tt+?C`L4Gh/&Nh5B+7V
%d0?W9`f&dFcrsC[UKkP2g0`stRNn3g*k;G]]<TX%:UFoWJg![c?`UdXa"M0q[%t"lj!D:JZ!D\I*e_QoZ;/_i^\0J)6G$(M5&0P(
%\;QsP7!l7AG[>Xf,]Xj3d,*tje^AeW^N=d2/$GdE+8%iMg]M%1]Ps2ISfF1p5I_a%+EKm3J_co3S'N-X($B>jUS;Z`o*')rWfQ2C
%Qog,;<VuiBn,:i.K>e4/nu^p5qR^@n/SB,\c6#50F"\:MScOKp+,Z])F@qe+lpp;HVg)o??@lTDN`P68f(o-ZHRY8+Z6/adaHKet
%2\)6J%Y&pE_Bhtogk,22I)k&kbRV50lF@h0);0D^)ln4$l/q5qWI2/?!2_=VXb(`4_cUZ!Xg*0n\SVnUS\KJkZb*Wo`61PlXW]eH
%d"cPs4R*p=b1leHT5K-T*bBqgqgYSOQLZ,2R%+';&=sSgU]>/A!SYQr9TT=kWk8<D`&fdC@m`*@4a37MSoh&HDoHa+eEpnpb>,Tc
%Y,8@H^tb5@ko\ef`S-]YjP]X;RLn09g':Qk/'ii$:;o>o3L>f-Mrs!]es:+%)YY\9g;>bg!dI"Mj*>)3KCeH_eiNE]U_dZZDGdJd
%\Js,arK+%_QbX0&YA;mq[:=!1:"@qkC5[M?W-5HTf_KcLMDaibgV8f+Xr^0g>4%ooFa&Pb"VACfl/$d".RK[&&f[5O8<E`ejRJ(h
%kZ<5G[*/SJrET@:?N/Yam(%einZ_71mFNr]qSVn.f/YiPEu1;QkaC'%eZN`';duH]h@Y-nr@YYmB^'.;"UeX4GIQ/obCbSd=qC?]
%anu0S($0mQ>I^r&-2V7nWI=RSFc+h00;6)UNedZJ]_6OD0P?0LZs5U5fSB7cTT"Hp1Fot!I[ghK7Yr[9IhWTW'S%TMs.6A9+MB&@
%459Y:\%)1[!2d<k-7X3Lh2f>Q]+;tIThCs;6Yj;(:B($7/&Ak[g1oP0?=)0t4&Qh;db(\L29S_O/A:&pn[*q88Q_1eMC4S!\U$K#
%oD:O"C!)q,MS&LscV.6*=SB^h"[#Ygc7YS$(/RWWr@>L/htW@RTQZqc^II3#gD_'n[CkVcRkKdtXL%=fWSbLi/SDh)D1`k8lS-;H
%k'fKt1l$D]`uA6MkUIR;%i5H!4ENCg1KZ:F08$0<A*TULI/U>6IGV_Wf2j"?Cj*a2$(p;#o/Ar&C182K:N$O?m"6#^9]Z<]q=O2Y
%E6%^F7n/r3l'Ktr2t"S$e$kUF%A==9jGD6SWmm@D:oF+uc2R:qACoKf^Z[W^91pmD:YfYbSueA^-]b7ZH+8>W*;TXgY7C&;%gP,(
%gr!t\P`biDXV[$O^h/nt@T#3.F?@A=qn9*QYm@$(\#"2\nbgjIfDYV=W["F`dC&do8VYsmm=[>^M.`2X'Q2c[Xa%25<$!q6[*H#'
%[X1lpYG[/TITjDdMR4Jk)kU0Vn;>Xd05]e3L($h/i`XF!7tE,'I^X,3HgM<G6NBVphg;]a?@HtQH$8]IX5e,H\fVTF70K4t0\_j>
%BT`nlg;`7E_lV+fXU3D,e#2V&kMr#CqoCut?d[=n?F[9Ij+\5Of"5_L"q8#Q\+e0-s%p?j[pD-tlGI@t-B"*jW4sOobu>H+99I;H
%Wuph/B&WUbelUHafkkUH[C\^cS#C%.7J#"X'tbLKEHSsjDokG_po^o0N)H*DjU>]"bXGat=iOYE5%[O_8:rXmS\3Ft5<iFtSZYDJ
%2d_(Snn?9f)qGU'eFR8KAohaI].H0O?@fCDl^jI'`?7i1nkNQI\(,%+f@^k])pVGMFn,n&$QRV8I4q_Oi:+(]o6'jU)-A,Pm71B9
%`RU%C4_Q@rj-21T$`rlR.O&`mlf/*1nr8,+@^krNn*NR81F^O=N.t_)+qW'ODM'uWEu247Ml0@d+aO1sqq5&?jqOXkV&)cFjJjg!
%j[j_<7/#`B]-o9tFT(3@eN(-@&X"iPb"Y`[osJ7kKl@h=oo5QgUWUYlm_a6M%Ashd>bOR7^r/1`r3h/Zjn$0'^A5lsp28Q>=TFd&
%4=ZZ.pHKP9:ZZXr?9Qq_032FsoKj46FC#B%9R44Ec\8E8pCU_!2c>j"3bW8T<q*N1N_;j%SWD=1$`QeVYq"Bcn6R-S-qFNr0>KM1
%EZa[#\khWhg]S5=lN_^u?tDVu%UJB_.$cJebHrhZ[If+gfC(pll<g2/\!>*uJ(/[$5HT(1o7DDlO_G[7nb"cc$7t(oB?,=\Q`SHf
%c&XMp]s3&>3ZkOh8sgDSX6m'F]n,H..>&aD[fGQTQWeJQmN"4GV,$i5&'\1EG#5m#cI^pePD]+cm.K[6fm@+5]l(YsTAg=^[TKKb
%HiFB5B'"$sX!9`/CQQY>mhHn%&2Mc(6SS$#EY$X$Mk^-!47NBgoTD=l[Va-n$utP1I]_1t]/,(?mUtrG)mk\=QRn^fm_sIP>!Kl8
%cl),?GZXlnHoKZmFkC-YE9Du"FmYcI5_dSDeA"UNGgPa7Y\JaHG&+KThR&H7a(aPiQ)4(f^[:3sQCmJJq`0+0=0Cq7E6$m[meaEL
%aL/^"8-Z8[6TQet]9$4+a?A^onRT;N1Yg8$T6o7gNo@[rg8-k0&Ti*=)DhmA3PSh<1GfQll'5=ejJi[?/sft.eJnu;FjL,MEh*1l
%.f$V)h3.6gC*%0b"#j0KRa#$D`-2,nitK=<_YXdtmcKBg@jCU8!/"REF\moB<,Lg0N>m8H=+1EnU(AH9U$#=Sg)P1o84XHHCNj+^
%Q`mFgpC%aKgBU`R`Tj5`p?iYMC)42,LRl#5Gu.e'M%j@I+*Cp;e5Q\er$I$>b]t&_ZSnUdR_`.I"4bpO-eEAL"mm^O"JtEb;"ktQ
%*o"!,Ihhd8dF]3i\3ENZF2Dh]5im&"!*=ku?Osg2oQIiW$s-+"Y,6j\'UcHF]I)C0Vs7nl(OIb&7uW(5eOG5-0ffML-bUDE^ftGM
%]QAL*%jb7sU4_o?cb@fQ3:mpEN=>U=/>I*gM'S)KgN-fWTS^DgXdbQ\QW.fA[a'H%'!'Z?@!Bhd4%!Bp^H'Oek3!/fh^ANs!EN*'
%5?\R-Odcn4dL_NY`'aEH)l7Zp7(ZXXNZ><pc6?n%W>/ZaSO;k$hs0%4B/Ip]\0o,"UEN>>AKRS?bs*?8(NF9>/]^906I7.0]oi2'
%+E+Yc*I2R8p+;"gX-PTJqP8J>S.-gl/abl_XELt+'>'rLn=F4)3\&>PARc$1:baFEd=rW%K#`U_L!o9S^\3/C8MV\4n=%.g&Q3M?
%@hPo8O4t*gCr;klqBODGG-[:Y9ApkG2dlAocB2N@gOKA\I\,96G#4*ZS#_O3LE:5ti2)Po&dRtgrqU]GIbF4j[4H;4(RF[2mYMh:
%9F)[F'BdJS=@V%CKW3"VMBdPeZgK-&2J@2-Ob_pXhV]Xmlp;D*LA-R@WVb'%qt-809AYUcnj]s4p[11*;`j^ioCq,0m)[KKnPaMX
%obLcdp0$KjiGct$]6A0dIdk\O`pmq:m;CRss#:8NimL'\GOODZBBS-ba,fZG]=2m$+1e5=re^ZJqg0j*XV^jYHs(.CcSJ5oGZBAL
%%o2*N^:n7KqKm$*McHjOm_8PmFW%nU>b[k0cT>M(gVYW@\Sb'lQS&,\83_=E278H/5L@a9kL0>1riAt$>;eC3+H.iC'/+!j^FO//
%aV-.D$^He-s(Ll.k&p4b>e#j\<k>SRa9Qh;IDp[5@MS0EM(@/0V]VGOH,ZHRH*#QM\Nl5fN"T^!0er7c9l3t\p>8NKD*C)WVtU_%
%^cN\UdJ'r`dJ*Fu*@lfXh=gE)6/CD4p[M,B<T5ssWMbQ$LE/R+%Y-02DW$1e5:jJI`IKc5$;c!&N!c1._!`)3!>F=bF9\S&R1a4u
%kfuZ1PO\<'Ed>c"84NXTUAtDj$h3#VqmKAfXjm'JE8\HV2u\jo[X5$8Rke.Ypj&u0gp/p_Tp'_EFO+HO(@a[ZG^&@YM2*+6T>dBi
%SU;\&53u0&EY:ND=iJh,bJ4%c7(%*qEpg.t+pKNBckc.)pDjf,<r2r51COX-;#Ot42'>Zd!ZsKoccgk0*@G8Q_^BHe"\Fs3PJ.a%
%4c`8N<EV3S1P=pXRu&Na)UWX*DXmXAg<H+(]3`OXm->gA]_*F4++K2D=,$e6>Hm0g2`?1O&2IVCP#%^do#'`Os6SHTqAUAL+f)::
%XlSM_HFo(4RT,Um)hjpg<oMO1+0*#Z+bX1PIcDA$BXqcs7(ZCQFU([7Q.srQ6PZ6Gi4Pu(lTs:8N1>ikGquI,H7I&(n9_0":$ht6
%&$R!.*?T.ogKRBUr^dNQQk.+1T$$qi.dkC\;$-0Dd'o'Mn!*=`6JnikXsLQpTJ-RXM_X6DO<XZL;LXW.`2o2Oo2FIXT2Z^G1%nFi
%`:jDaEkOWsFB[RE8`_hI8!qI44[i9a'F>iaRnGml:l1e^/ZFnt=%j9lOCUt/H4"+%Ma]M,l@t,VL6ab49a@dPkg6(iPmo1G@W)l9
%cKgpr@%hK!<D=9N-0PBQ<E\A$$9g\>b%*f)GbJrH/\j]h&<3njOk!]fG9Ei]9''5__FH4GToh8CJQ5aDS]2&2.on'M(7._[!MIaX
%e6^VpVLUI!7F^QY.nt\\)B'h4!&ReH<Qj^*TFqB`)HkXi>8;,[F+H!S1R(?O-oqd;?k8Ej=(I<%<UeD#3q#>X9*4'KQLguRauGbS
%cR-Ut$)S11Z!$>D',Kl[^VMuC,^R*TQ,=k)0MVU"$mmaB5\3NL&W)5Dc,?gkbn+uO7%b2iLCL0Bl']4]LsImm=LS>5N3pt5)LUg'
%'T+q8+^SV@k[r]$=_/2;\h$\h&jEXfL(e)#=CcIQr*p8QBR'b'ND5oC$m[>1PoF=A6^goHWN-XH![2-?:WsN/)atTE_OAu,Y2TPh
%=h0.5d;d$:c&(sY*LIZcT.*(.]M,gIToCDip8XS5<DDTRao\tPJ6RS1q$[t))]">+BOQnH<Al.`"W99r:hU%]&&>#<=[lOL2;Wtg
%b#ep_ejPqG11];]?sDms\4KY!"p;^p@V$/@_0@'G;I3F\4Fhker"L^3'RZ.F`h3n%LF*\W<8\C:1,BW%Gu]EHYu&I'S3n0U`/nLU
%/2Lgk"rX@KQss/MJTO5H#d07\K;gPG))*9S^^?N%"+c\-]$:R1,EO5YMPpQ>RE1C2`-De(b%RQ<e,_c%g0f^KnT!&PUo@Tq`Mac@
%'G[W/RhZ]JArRPJ\e,YqHjW,&9kPFIjZ83,NX@'uB0CdhMRq"="cdLL1kB$k"],bFfR\Wj%LPT.1s6NL35@01#5/B`<cD;SB7-;O
%_$DIllL7["]Ws'i`riVA:nrWZ]9PXEYY_/dC@fQAefYf?',7I>Kq(C@--LgC6^9YM($lV+"/l_S"0#,T(hsSO"S5MOA:d8a5eS@T
%11sE[NX@9>LR)\,f$Nocf[L#-SYAZN63In]_2rUq&`?Y[ZO*Rn<LSP6O38j6f)T)3P6Y5WU.JUBLgY+>1gh7i,4bfZR)5+W'O=!4
%<?(KdFb$p=O:A>tJUDu%$#PNlKnZP"l<"=L=saFuN<orRJ<5j3!A5i\_2Us.#&T2@7h_*V_;.Xg1`r/0;%GGO/ZK?H!>,dr9kkW'
%L3X%Q"Q9r[4];M0!:L[O6/@,F;#iV(%OqmbWna0GH:48W8;*jTh!b<*&d&SR1:0p:JhWl&>m-*0;_dQ:<+8t,96+,_&Li9+,#a%l
%#0>qO"G;GR@THAC9Smtd.a32@j5D5EW<_nmW)o@p/oX]\V@(Pn/<Yi#7ojW@W2Q-W`dL:<W_c/S%$?&B#fs+VN<Z[K'nZQAclsZK
%!>udj!q%mu$W%:E;F2A=WP#=#,4>McRe-sX[OIpJU5*0U#)st'buAWh0L='B$845ISPK8K!.dNQ+@5m`lmTX\\f)?9Aj\9T*=D(+
%ie:c?224TY?*pk=Nj`+6L6h>NbJX`1r@hTH9*CV9`3$+3pj?k@9*A.HPV+Ef9bBeEK)nok6?Feil2d\V2TU,0QbX\J-:'[d#(qqs
%4\('r6AZDRXJ8A+1,(Bh7kNt.0iTY)MEM[VOICi-,D3HLPDtb8_Dj:P9H0dnFT;uoge,^s&AaIW]RZecfLQCm0Ps^(ZAr*d`GS]*
%Xh%1;TEWe)%_sQ]9JZ]\TNi^1$rg:FgRoXDAl`MIQKEn!6e,q5AlSTM%%6`AMA)6l.,%3.jB)s)/-N?bk"k16blH1RVN=[11_WTb
%J7:q_>ljX%$DFL%4D>(Y9SM]FE1N^'>Cm"lW>n#J*V"iL)o,m985GG=H-@A7.2W8%6j5_/R=kuWPgQVOkL+mX1)3P=77>QPaJbQD
%;+3sG3>qmMcI`Cc!ZaF'n=K5*.KROG$MlD`Y/.Xke:?u7F@kZ@%XL[I#:rqfWiUet+Q&+b0aGQ&,uY<^7>3fb.a"M]A,sfO(a9#I
%2Nm_?J>j`9TRdO:H8o%])bT1p#n#@8"O<5@OaEXH1cS8p-+SRlIE"!TM+eB^&7#hb.5_f6Kd$[8<.`C<#0+Ueb<mG1"/CO,W_/73
%crDu2"neT`:++[W?.$2JMkmAo4lsgR`oia/Z.fVs?08.Rf5s2`JI</+WY/%B^j4$O09kS>q:<ohVIFY6cp0%q'd-:G!C:'*o:-8s
%*Q/@!ngJa+/-LQm)iR?b0p8Gb;2o:GCgLLj$oAKp#_!grCBB61,*,"Y#=U0,$^gG(65W^1l5'#MTHYOYR%^0-*X1LF\!H[eSd,RT
%Mul;:1R<S9+Icl8^aKm6o`^L)8nh^E$G9rCi1YDsUgsBu5pq4)2%R>Li[Foa+dJnd"F@Mh#fJFL6f(DtBM>]SU]mFs]j0agR&LC#
%QmZVMl5,Zck&d7>13@R-^h#58Kbqn1kt#T'kUr!BU[?[\XareqMEF^';hi$[TIH*pV!XHZ!o4FK6mf^XX\u-&57LM[l1,r<"<B'!
%+]^r2!<0&u0k^j^hKV'E#NR.L=]Cs0!uRAmS.!QU@;Z;5B[4h8I8lb;7dHdhq:?A0'^35\p`M6`:Z3,-#TfZ_WXK_@N#:X+H+?E,
%R_j3i2uo.m^5ZWIR3GWZ"P]1+J15DmrPCr(+A=01'%)._^Br/Z+d;cSU=96(27b&e"pA>c'Ub;GBOdtPJl7T'<2@<hC)V+P>KfWk
%*N1M5,douDQbkA0Gq@Am@PK<dlu*B6:,P@='NFX5TMT*8(T(Z7J_:-VL@Gr/S!^\4<9F"MCl8uPC)HEG[#9f:5)#U,A;CDT-&be0
%r=&B%r-qB]J<gFo!qTti#r2Z2R<bV/\dI_l$)NZuY*(=`TbK>(s3N9]aY-C(!ms9Z0iTFAJP@kD8p+oW/dd$Dj;c$'-J')t$b_fK
%7Zgi4&pKfr9[4ea*_eWAD%,+u4>:;tOF^_;j=lRiU+af&)@ScMdDKEA"6tG(c`pH:A?_:d>_q5=qVjp.A2u+Ciet<Jb\="*>.qi_
%_ST+sJ-k\H$jKC7&f:;2/5/e^;'+%Bd;9<F!%]f,^&72GAo;<CpZD/<mp3S^K*FZ_ci>mB=:n8;QXeD?5fel*:'Gn_q9gORNCjVE
%,cF)i8h)]\SEOL7jjnKTUet(p*]5p9$7h8NK+K,WA"f&3`^3NiO,0;l$-'e*oE<c"LEd,`LRI)E_n9qf&3,5;A5YSubKr8':dBbM
%R+0$<*%3=F2?QPSY"U5UJJeP.;a?RU.Jbp#$a9p7AaBk_O-\[&0nY!4"8ra"<?ngZD@<C(U]H3Ai132=BE9^o'e/A9LcKEFcq.9B
%#i$k]\P<]!JWaLXd9Zo*Rh.Fp'QR#8""aZXPo!9r$!J7_"!W$@(ug)EeT1rA>nUhj'"WRCEs)9*AMuKkO"s5A5R0bTFB5E8JEc:8
%P8d-!PmElcc4HM0pl#Z=AOO=*`Z,bS$c/6i^4VHqU&6cK<"r^O?,aUNH:,MG84(/j!Sa@,,,,'P4f?JjH(ZT27_uim+s"R,_E6n-
%=aCjb0P7?t$(+EhWp(@<.;4lqDkK$s*\>_g22nmG[t-;C=K5j(RnCg%?kFMc_BL*]k!Q*`3dOn;@&g!?Ro4-`630Gc:!'hBr.Sis
%/C>kEO7=)JR=%tq?#5C15R:SK]Vq;DS$6K;jpVZu%3lkC'N+1iM$#CO.tSa>(o`=U%:FFD0j=om,,4mrfW^aN6&>Z6%M9CK:B<)b
%FOhA@_Z1P%6(t=bkct7.<(7l38HCYHAIq*`X?*YlJfFb)KY^@KNS#)HUS<[E#mtI+aTa:`o8*!<0LLS'2gBT2DQ?_>[Z$+5RkCt3
%-En]*Z78rYb%"mLh5'9QQsTh\TW=G46Prd]5gUUh[_N36ZqsIhh>rLb'*L.u5S#+[9EZ(1"VrTI'&56WM5^Ii_`;P5@^Z?N@5s5_
%&AXlFp'uBNBWtPdd9,%R#R7Sem\P4H)+,uT`\L6jHH#eG()[s]5nW5f3E^npFQrg(p[1).lq3K(X/%jCrS[Vu=,XgS:U#E$8t>Vt
%IV-lj.k@CkS:dsKB!@QSSgu!%%+=AVF)uNMg&5P<Z#l#)bMr!RJ5d?dd3'4Z#raK+PR*VM"_W#)H9E`t&s7*YqcOncR;r]."j\<<
%akj5l"*hbPS2$mj2lg9ObWakmP-%td5HA@*Hc2c$KL/9VDm=C2E@oI%(.f`u.+(<Gp7p1F2YgMXanWY^\+WtGkD.)sT#C(Y+g\VW
%6t]+o_lGjb^_Est)\/5&QuQf6ZQcW+,ar@>7pk5WE>l-_O.GL:^,ZSj,^MerSb$KcYB11qVXEZio3&[nB/.@ulo8D9=]nr0NFW"I
%[!s4_X_H@S0m'.1/Qt,H9Jn34/>a\jJX0q4#,:bS=Z5#-Z*pD.h<-%.+ikRj3"u)6MQQ[GqdV?fGu_&mZdeja9c!^$&j*GOI-k'4
%9*<2F6=hcS:aHcW-c_i=f:j6!KC<KORXBE$7@h)a39G0m&=mGi.qc>*V_0fRcJ&;PD81Jc3RTUDce75NL?,kCgb%J"T(hDGS8NhK
%eZ=YS<1c,D[oNA&A"hP2.9U](dZ;@%d<9okj/(sm?=sDIQL7OQlM8MWcBi+>Z=;@IaJI8KbdR.dV8C`pfKR?LJ%,)^fp$-dcLHoQ
%AM-RG9j^HDM1Mmjqd;=CU73nFck:-c#4dUdLlTgLLE7Nj.CtP.fLHaZUP[R9gOGg*>hCa\MXLDEfdU$n1rHqmprDHNlf]Ec(cH2&
%B3NX%@*6**h&\ICORB4mP%Qq-qH/rG!G?gFbAJ(B(fBVLgSsYCJE!#fE'(L65/u&<,8[)XlqV`l+u_l"<g$@.k+&J3j0p+m3-5_.
%Wl:4UW+X*c8oG,t(^%kE$0dsd@^sd[ITXP>mMuu--kot!3/?#aCY5RTC;U=*QSkU0<//_i0%Is4B(7.=f-)-TV41Gc<$7T!*e?6<
%4neBbrRaeGPJUe`U!5:Edb4EOS,I/toB/iJG%oR%`K*$$7)t#'](EK\/[A5X:,BdN'6$'"fm7dVF.T/8b"=kP5PYbEr(JaNV!#[^
%(-ARh@i*Nl(6"J?DO3b.=t(MR2HAM?7fuFolp&Q:.j2UK%ZqJdU+EC_Ytl<Q*U23d0TbV\\R`id*[/eKUcW3LZ0c/N=\qP]]goPF
%`3R`#4$a';CQ86:[p-+$AS"o!7^b?\S1XV%[s@q6$n-+4Ab2M(>$),t,hXC)B\NZuj3lt+E%.\IJNEg-)W9tXERp6t"llQq]a+^?
%;Rr9a.![,_p?G&9Qd<IFW6.J=DrbDd/RR70D6]h$^/-,5ig"PCn+-]@^6%+YekY@hd6s*oRpK]aWUH]tFRrr]S<-6l]l&#;D:3(f
%4U<bN=X.$28#%</;jrII)j0*]J5e"iP#`Q7g.Y\ipV=A`SKHi2.;[f*q:lqt)sG;i&j;/\7Go+d.omQX:YYU)Nn;S>SqM0j,`PCn
%+cg`iIbhVm2t_gef4*XY=k#H!n@`cn4a<6A1Vu/o@8/p9.1,Q_33>[qE#LZ.(T7-j)pZP\ja'tj*')`0n00>O#,"g+?_S'($TYqd
%>'Q.i2pSI4[X<Gi?Occ^:8M^GTl?D!6?\Ua$?'B4WGsqUgYP?9-<OZ(#)3TOR^'O6cTBB&Y9WT#ZO5#/olXR,ZfB@,p\Q38mL.]1
%@Ao%HG>`M`Bc]i%9,@.NSR_Y\FD2oXO@#0l;*M2F6QPD&dYJFQX5c%p[J_5oPXsc*"c^7ZB#fo\k7G.X7$@g!0JRAS&?#!AdoJuk
%(9QnEA[9I+)'QDc=:</C3gL<0Esrth%U:8IBD9[.0!4&VUdrb1EmF'H+.a9a%\+O;OhV;BD^CFq6'>df9/j9k,%]S\\0M\Z%s.Z@
%"t+!M(/7NCBKbg^rR=]kj\<l543N[d/BXln0;<N&nQPs;04$*QHI![O[k#oKm+ZTb8:-IYZsD^R*]s1r\CTMSpFc;im^k:[pia9q
%fD,'RT!EdGrEZ3c1't7-enGL5"e>IZE#l>h"Rcp(WL*0EUk#qhrhgH,;qCZUG:Q#A*SpVge16FDS"#H1cQ@`W9]bYZDka_]^.Vs`
%Dn!>snaO!e;4oYKh1.#[W[_XNN^^C@E(jG?c>R3>a@9:F9*lSX#q[9mhf8-MSB&lppWeOFKP-Q.0*$34Ll<Wi9\E^><1rbZda\[D
%BbPW`fO]IZ>O*N"8>_W\Y9nlObNLq+)%TrW]WbstYamAU/P@kK)\JcU`+C?.Q">J,2fLTe<[)B0(q<-Q*E,u6<$NF)h9Y@_6E\Am
%TBnlJaYqQ-%-F?Z#Mg)G5IVom:m@S!&6AkdEHsi%<8O2@,U_aMl#D`\_R'0I&q;s^E[=.MS.,'V<<">4T-%T_]aEg@j,592K&P?a
%7mhlb*$=>kCc)A2gG[36V[H$qLee,p+QRU(l=pG#LVRT%+<9Z&RlUAIak^C*ZY!@.SiMa`ZSIU.W*tQ(r%S3.*-5R$Mt3bsdg!aQ
%!^i+l54ba_KHiQ"e<IkmK4YHn/b1mj/XohM`,bCn8gMu3k!1]`b`C/Y$-mA1L160fCb;c93<q3F$7sc9&n=Ft(!&E$[%`YCN6G2Q
%2FQl<H9'u1cBoZe9HiD7?=!?SCsTNL6jd09@3lo%j-Ai7JM5LbV1@,740p1T^`#/ccl!F=]i6Z"41:rOCuts0bhDSIhc8UBU2P_"
%<AmLYi5$tta$<^@WEsXL.e<TF72#tf5J=9t*/EC3e"Ob2PCbr1&m#)'"D@n\^aJ8ST5Pi#g(GS<%A)`n*EJ7)$8EOHo6<+km\LM9
%Pn"%ZEi.e_OL*"O,bE+).VHgp6l['V$>[Pc@;qSJVT9m0&slB7jDc_E;DUr@*?TA"]WEL#e&bMp7Z7s^;st#4W(V=mA5!5'[2_cD
%`Tt5up=itf2-fe)\X:`Cf$H?qW55eTr6i&&akt.*T-I/ECL!iek)>qP\(3U1?quAC3,>eq;s%XY?`8\CE6lDg3[Q%>4_ILPmZ>IQ
%=qsKFN>r/=0f@BO9"$Z?-q'WZDZn#!P*^1^i4sUL>3Yf4h#XLM(uskEYAVB&K4@S^Sr1B?(#M(<QJYGn^Zd?VV7k%]q\RJg?P;s*
%;Hncf3hnmEF+srM$&34(XYbui.6T_KXW&u=jCVG)RdgdSEF]4uoQ877>bc0,mHK,Na?C"#lpG@UNBoVce*ATk3-@51OqR&[#fs&J
%"pg6mT)gWHEY:UP(%&Br_JT!d,sFdJ5<Z(*]L90qhpOFo:]JVA#IpM8mL7?#$AMo+0N`b&5tn2qr\l;mZBdj9(%Qi[ILji$P,l@S
%fuc?oV2b:s*-.jlcK-/OETWO=/@I?q7QQaaXuJul,O=ooR5&,Cr&^HnN9IpnHsL(0N-2GQ9e);sMKMS3E@mT?Y.n>HKT=*E\ON;?
%lpG&X4`H"fNubaU^?RD9R8_u-Ht+j6RcHC(El'=Q:WKr$s%bccm@E'uX<d1mWT1,4nOV9$=PJte5f!&f*oA5.$3Hjk-9Pm)FZ&VH
%,<<M3m+HXOQ$L[g6f.db:DFIC:A".DDmK+MIu6Gqq0C/m=8DR@SiPbakEP4$Lm++_]fHnLrfl\-0m"'d>.P).5@pk_Yt=X9k3u0#
%+h[6a;Vk'ecKj.bk)Fi@`lS&C:M%5!06d>YI<kUWpbg@C>CO<4pG`,5@1?l"DUt<Df<!]Uo/V]D%HW0\L7Ad*DCGKtMOnqK%$L-Z
%=BLHcW<NPGjbRkX'aXk'%N79Y`_K-0&"p60F\,\BWq&15.b!6<NqFBcmUI_*1=AZL37F)s-Sdkk;j#@tLLN2QbU]RYYpb;SdDa5L
%J8u-`Zd>Lq4(6iF^3_@`_2*3_SZf=HB=P$b%O^W0Zi+!Jng-PPTAricj@0e@)-<fI$k1W4cL\9V232m'A>#D,]H\^>Gp>ob!kR'<
%'#el=p,On$a[U`4Cr_ZH'eFWBapo4PSEt]'d/(CC5)2?e,t0'M,4Qh(Gt4D8V]L2.f\YVa0Ir/HM-\6KhGP[?`(%.J."bV&MM/13
%kcX2I87&C&F>3bMAYcgn4qs_<aF'=QfN*s$o_8me%t:/f01fm,Z^.nE`SF'g3codFMXEU!B6.jQk>Wl#=a$-3GASa9Hi@\Q^+Vo9
%B-I(k@'iA5LnfebAS5XuA0m%s4Doa1-K9JW.D^(Dfr/(m5Y6-B1c^c].1$5t0'2G&X5I5]5PA<Hq5:58J+E2_T\VGqMrZRZqF#a%
%Pp:8!gI`03SFMe/:b%6Z6WENM"jBH-#Z+4Q0h8,)rsOAXJi"puZbr@t:GF1Um2O_gn-uG`=Crg^o[Tm>dPe3BK<feU-UjOf4HkOo
%MN:P"clfdLjHFPU;GNnFNi5nFcol;a77h)<Pcc99#?ZPN;fH$+4?_WH*5t_Mjf]T*m.WR%,4R_7PLaHQZ/QJp379sd"r:6b20&hL
%iEWE?Q.usD-[KSS$;6X05b&)j*1?'qfUGLU@^nN_qQH?1ABU#7.Xb2lZq4<a&JNi<^kUo&B]=]ul-ShnK"6GpcO!=L!%^=@'.QLE
%4Cp1D-fVb7iGaalCqel;BE-MKqgVjUI+Adp'WrKihh@V3n/^d#7/$T+aq$3L1co<Y5;`6\^PhdTNE\m8Af]Ll1@SogCj?gIP,a6,
%H-;0kh&g!q*\oA`!`9;f?*R@i@j%sZIZ]%BrJUG.d'm5n?Kh9uqdWH]"\+*IGna5Q3p9Wn#.EBXR!K+kVAu!X61^"N#`Ut,!<3a7
%=+n9EEWAe^!dd'm7!F2^eOk;i0N/df./iI\n$9Dm^PQ<mI(SG)D'!$]]<1]IJ</+HV)XgN-o*V]4omYX>`$L3@"Z6N.7r_HPC_/\
%aGaJki\9AS@aC>7$C!Z$864;tM\@sOBAKnRlb#!NQR+7FWa0RB3!_!A'0ht4oTFW-XeGD[[^>5-RZf]t/X=]C&HQSq0hS/H&e1bX
%\f?*I6Z-$tS"5TbE;B'?\#"$TLo@mFei;C<>n\[04IF<SCcrDLf';Qdh%\E#i934t^X)`U;TJ^ngDu2,rOY\as,p7W5Q4F&8>:E5
%nKY#[^AG+#36+lpL`0DsPuko`3MoWo'\/=^`X/f0V7m9!b)iSgJ>hHG&0O)Q>IU\7/L=rWbP:Wa`_bfc:r\<ZDH^Je"BE0lCadCW
%=ge)e@a=Ijn!Zc<;B?14lDHn)J^mYk)ilFrL75(%r9i%MX@f9\.#FrR+-@iM]-S[&i!$,g5s2dm<gG;%&J%*DA@o-N4[i0Q`5@l&
%dqVpRZMI/)C-\En!HFY(3Qe,>DZPgLUKj.R.pYrkKMrlo+/;t^DRnoDTCV;Ls1<&'Ys-J^ffqXFN,>1G'Zc**7$&a0J7HS-Dlu2R
%44\b8j5I)uo$RMBTh1),Htm/hXp?R+#tR/"<4`/4J$g&81#?!\ZUlrgBi&RtV[3M^Z7[JVU6%Nb3"o*%?CVS@84TSr&5bB\Og+YE
%Q-kh0.@.@_f7GrIU1)^fJWTFO^s"+Z7<URaf!mYD/*[<6i*-afM6ih\crfhe9Z0E+Zd%nT<tqea5rhtZafXsc<NVWO'b,hIFI,6\
%T%k<hXWkh+<lRt,@)A_RT6@>?59@Q4?e0T(pYWU7^RaUOH\QXCo'ri`&&WV9Km!;AAm/mbC^=ZREth`<ZqP:^@<'Ye'NboXQiFQe
%)\-7X)qPCg:`^kR!ddl!6qhM47-KB!!>SL;p3^6:4s.:j.\H[E<EX`FiXHVo8#L4_IZhN/9DXYF@>KI0g'^(U;B@n#f/uRB?5-kA
%,Jf:7.dG&PFNoi>:k?:J#GHpU[,2SiB`]s2s.sR$<P\sJ;,Vf;4EW->!Sd^oj9/%4[DU;X?K.0b0*050Va8N7h@QN%JZ`):;,Eh-
%qbQo7o/+E<J/pG&j[RgW+e0"Y6^TW\[G]T]m<OO^L&Ujd<<N*6W/MUMpe1i>d\cS+IRkLbNI6rn<`Tkl^F;.SA;-gr$pPTt1R<+Q
%Oq4"uqCdA2561;V1Aoe#L`NhNo-]@/AkYLpL9h83YBgD$89Xte7tBq"WWbZOEOtRM.VHl&]E*KoV;Snr@lf03gFQ&K&^G364$`VR
%I$Q>I&0`eO#e$cN,W`sB"?<&iPm5tMY2@ZfBrp-O%31nn*MV5obXBHj4s*_2<Hl:u>bMioq:ZeRimA'W=9"@5.UQ8f,9B)]42o6o
%>"#?0DE(L]Lpi7<(?WPKSs75D2fZi[DIQ-HdOM's&8hb)cB5'4&+]j)H_O,4?mt@_]B6#br0:B9Au]Q;=j'82)lJiK$gO&]0k;C1
%"'!V]bRogOGTq*`"`t#_#g"Dk!pH]klc9PW%-/eOl`,gp??T6\]nCV_Wp`<?#f*[!$;YmtAJX%j=giHQC^+_X,2m%4$=mjOYh)lV
%'o1?N`QF@3GW)OO8^))D33\d'X(:U6=m_GR9gLm!S*\A7fhs,j8e[fD<V47>:c;cMci?HSmB_HmPetS\kS6^V[N6q[RXlg(DO\P9
%)`9-oBb6?f1[8?^aq1Jt-E2g%M$Dg%@*SaT>j^Q;-i_GqNG8IG*_-A60WRfJ/P:L^&&h@b<L2E+1a<>>"RO:KkiF$4I6Lt^J!C0\
%/7<(h$Ws46oS>minAA3)C.n^uPuSJ':-IQmEKCc(L=/B98X`QmDotg,''HL=J?^_a*E2aA!1NDZTZQHQ_G%N@#]s-1%FBJCI(f!0
%rVN:WJ'3bINh`UdDc((BlpPoV<0\'1UjQmer'(=[8&)]nLoXO.1>\iY<_gZ\gSsfK_#NS=Y=NF1e",V#q*WQ#?s8$9mS3?Ige[0M
%J=j=JI#W(5l^?WQ0BI+(prFY7"m.?D,PdL35=fi:&N8UYf=M<qc3u#lP/=9KJSoto%_O=>hm_cT;66LfkjdC<iN"EfrH=g-pZK7^
%mf5RjpNhhfn,!r]=es@m^!PS3Wrfn2,KUNc6&&!RW#R7,M^:]4j"k6Gs%_]8!SH+ma%$!X:tI6+N.[3Crc2+N?'-kq8>Xk5<g9r,
%]$dj;KTm2eMjU;^ASL;c=@>8`l'>pRRja@iX5C`+^-P_@=Rr%0Rkp%>LJUdJ5%pX7c`TmB-12.u;Pp[M/O%a)fQN+_.6a**_ZIb#
%3j'bE&-/$RB(u>;i=r;3r'KSkNY?%BWJ(4BJV?ZpXTF2J^60%(;>\gD<k/FXbZ@.FFO!$5bLFql,\dBQ,3g/^]!gLW"j;TR`(Y':
%+faJ#es)TWj&`3J1"15.3:9>2%<_$!U\T[EFfo4/FTo_Y\i]+LOB-c]KM-j`CuU_V#[=PZ&XAP.'._WX9Koub_p5>kEmG@BEGS4B
%Ud(U(B#);_T_TA2/D_W(gmV+r\#O@EiVF&7R1-LO7/<LLC'0ZVGsBS\o>-p3.Xh?&rs&TPCn.iGC+/Wk-]Jg,O40g9k$f-FT-&n.
%94eMIU)%[;$8O@0Fj!rR9+[nu+84LMLDbS:,#R8@$IU^OEBJtPIZk*\BcV3\+G+.b6NqOP/T8p0i:j.mkZTD3UONn&m20),4qh8g
%XK&?8KsW+8]+u*[H.e9sP29*+MUQ:X(c[<u$cF8"[^r:\jGLE@e<(qY]uES]F@hkCU\K#2I+KI6Y/f)lUi9JNAWDilH]^/cikO9T
%E\-Z8P_1k>q<d53WphYj43e)c6a-OWbPqN+3:^uSJUhW]eadF@U'c?@9^#T=F]Ei=:i*qO=^";5!bDUUd/!j)JNYVR1#S'V-q;`V
%2nP=p#lh8_0l0ha]Pbht+h985Zm'mRX"Y.+_5#j[1;&tiBUh2]WoWXRNZ=WSf`(g@^,t6hlr68hQ3dU<,;u'695%7Ii4-kPB!##6
%-[?XbjoWt2'TTLjU!Okq%JNX0(mo0.,t&+`7$T<MgE[Q,0Rq"K"PUcNXNAk4M\iFX!q#$jkt*'ZfFF^a.MN_VR]Ip`d#%P7"'63W
%:,.E`>0LHL+KmPY(k[BjF*&kgDZU)L%9[HN\+!m*b=`"QcGU]&r]e@@#tPkCpec>7N[!1S/eFM?617M['b+ZUF-k^QZ4Z5lqgr&F
%bV<Jniii`DkkbobV'J=3O^#=th%4\,.^n=W7'H_$$t*HY3SkVd=I(;T!6)?p?r2$R^j3m#"p^3XndUpORj?SZ'R'a3'A46Q=*Ght
%i(LB*UjRG9j=]Lm2jJ^+26T9u,r;KNpk[Q8N\$"[IVaRP>ZbKr>\.dmInY5He=a%eq>C7QGc@,3=.W,t#SN!Z%c77OmhF$mdH9U'
%&:tr+;Xn[6d.@bq[U@Jo2_6D.3$N!8FZaC%ScuRcnq]aHd0>8aChP,37T)FB?6.rHbGMiUNQ;]h9m1(Bft1o].qSY-3upBBef>kX
%33)Wt`o`[0+d95Wr-VQq(tiRS$5\4b_O0J1:`I(/R]jor^p"&/V(21+!5GAqLN>ZF]u^VuRqJU'@=X0'/A\QQD/hZ,I2c^IHFA2[
%$oS/2"\]>M"`glm0qh#/^s'2\94=#+%0TR0_HUG;=C[ga&5aYuh9T/T'qm6ui#uuF^2Ap^+RrLq*ab:>KE1N).T=W+M%h]q.O.N^
%O%i"C_DRF&S![7/V6T($?)Wr=rc2EUH#D/A^h'H+d'g_NKMMY#E-AQ?7t5MS9n:%@aP-,OTs&6[>qX'`_LQLsGZ#,4i"hjh9+f`m
%!S`&'MegL50O_g7;()V6LPdnqF;-Kg#_\22P(HTV-`F4rPgKYo&mHju1L.do=(,n[ra-.^M[o]eCL&MuX;,Igc(pthZGo,q>?Luk
%CKI>CH-bJ0lI`R`6+)Z3SALpZDG?453/SYa:0QtAM;`h&);5+1B*J$3,?<NR3adV#o4N!Aomu_J9.*?Ag?:2_EE3QB$YgsG`J)@P
%qrM$_OFie'o?Trfq*uQ+]/\fY6[Wsccj>.%Xo"fBrA&7PAjj2om7g+(LN8grMlTN^EB9L=K-T/>?%O'a&YQ%o\*RUMeKbVdSdmSQ
%KX</.=uE/![4#A`[O+G&=:lme7c<sl]\-:0V3_c-P.b[rSX;ELYIFE&Y+'1275mS24\-LJ1d[feb;,Fec!K`'<B3sB3`1PgeRf*U
%,3f'D!FO*m('85TWtqTm1SiK[ooluBWn[T$2`+5/)S.CW+MAh3HYqpe)ibOh1&>T31`1.1G2h/GG)RqK-4%B===WgfZg3=<W/dB?
%h$cGbn(QH>Y>F^[[N-*<X2(]U>qM_$cFsDm7)'`4pq1>hfQn-^m9$c\8itEH:?&>hX5jSqd0pH8C^&6pK=$\mP:Z;9_Tite=imae
%97c$#Nj*Tm4+>GGFho1gP#?$GQ%1I]EYrF/3=!#@fbdajj;WM?HnT=>*:"YX*TY?)B\iI25^QM6=B.&./2u8"(itQ]EH2QS"ai>P
%]":0pNgn:%lk'ii_)UHFfqh33DI%JSnG&MD!65=u\Vl9Lf5ZO_?Z-&Or1u+^)qO\Sr73<R_dC1?(tW5-9)tTMCa[I5^=CM+f?%&G
%2MP?!]_isUirg)'GBUXHqoX4_"ubJ66_)8%3pD?l-%9LES?U;YC;/^@SY.+?D8``684CTg_4l]W;E(R/S/VKr3B/Gt0.QYOYdn[.
%/nO=YCR/.W*1ifkVF5HHl+[?kF=YEl@`NHS[V&OF9&+M,3bZ>L+j4//d"%(C2h,e`ratF_f'!k]jM]olq"c;;RAn6*6EFipc;HSQ
%XS=Ys(p3q`9@cbc,#M#peK+^1[b2&_Sm2B3)VNrEL]>n0JZH\mT?[PW`>t4EfF8`USO'iG)^o6=p.h]0)`QC]RX=-)B3=70Mj/'K
%XLN&)C;sj4qoC@qXLj7Cs4t0-im8V?+9_/A5M_GS!VKjo.O<8MBV(o&)%_8=C:28eg\-;]G;k#^2!(9)*AUd_,j("9(q1'=pBL^l
%O/nV)#,\61\\>HVY7oABM+.8bU);@(Y5KJ_MFEl0r)#qWW4HR2!cAb&moKUMM(^i^@(/[gV7?]tp-/&<?hJ?/2L1PH-0ZY5m\4g$
%&.=/]*[^i,5Q4.a@^_;:r=^[]]YUf@3'4N'T473-fpb/)[cMd^MRH)\s+tT.W<uFArcl2MLr]D5qiaD.4kjf[^Ah$bI-^+s?Eu4[
%IM9K9pj'p+=8DjHs$W\`(8[)T>%K@rk#3Y[Vc\:gB7FV\=8=cmJWsp_^PTe1b5D+Kj]8I%I_7iAMXF58@d\XDjc36<pH*iH^-)<l
%r&N'S/`5FJpG`,DY57%QFeE'S-#ZL4(ePO3AkBR-KOj6RG;X7]pG?SO"kI"5I$ju(Zs,Gp!:32(THLKF*0j)Y85X2*X+:&3hJlq\
%eg+dhL@.uIX9u'OJ1hg$<G7MlF308<auMV`h_B3;9&bGfIg8'lPT;*,##\'W<L#3M6&=/S[6Z!G'V/ZRV+7HW7"@X=FFr^U0R#tI
%GhiRf4VdS.,S3tNUP#]qBW$S$YV"9_VN^;rnN`'CDJZ5VI<``3+bM-lj^8p:af'=bFlZgsY+eF&8@VVj5\N?cC<jFL71JlDPkmAC
%!Mb*DJbi?hORr><O6nZ3PLSOl2cBBB9f'KinJPGC#ER(Gq9bGte'5fgBhu)bff5dL'2Z(I<G087c&nDY.&/F>2+QK*kq3PWN2Y*d
%g+c+t_p,GRs0-[lH>2Om*(>jXP;m%lF.q][\97G]@u[$lW8H4Wab)Acl@E8i-Bm,&N"@V,,W:W20CF36k_;FO9L\3kbeXkPZYbST
%6b45REn>K>"WBMimMoeL"t]2$R0\";jB&@c]>-)ROXtu'cA\ds@5C)WKlNc#84kBXW:q=/W9P!CPatq/c_@*_5P\NAV=!&4aHIM,
%Ws;*^NCcHo_fC\g;g8-9<:pJ=VS:SC!_L\go'huf3?cV(B^t>TE\+EUAYO\%`i1:<@o6;u8QTc.*2`hbIQBP:-prJX'p\?qn09Q:
%&<]BDo$,_R8L0L/p]?($:Gd2Ifg;.iGjM6nMk?GnZ#93Ffj_p`&gc"PHt*K`j-Vp>j,AZZ-,0Dd\U?*LUL#G,A=Y;o$P%;`2#r>#
%bH2:t!@eT;':"EO2($6&3t_RiTV8;GST:n.M*r'q>cDbd+DD^jnZ0T'<3HYA;B-f:B@G!#TK9?aO)`JNFLr#Z7`60Y(DS$0h?&s4
%6_U8S_`=@5Mu-@#N2d=,;^LiGq:m*<C!.^/C.B,;h9H#ZTGaK;_D<9"iZp;HOTOl,kU@k0)auBDlcq(-neQud<FT8'D@3i^=+&A2
%`8nr5Ab7dAW,99P3?$5LV2BNFp'n',f*ZMJ81affRLWk)pZRo(4BA8p_E\_:;T'b3ll9d446gR<_F#&AcpK>>[9?+8l\A"@PXP>K
%7#A?M)%peM_J$n]Pp7jlVar(V+,SW`'$69".!S>IbL4o<NhAYs(oY5B[jRCAKep]B4;D69J%ir;4%'\Ec3DLTrLMJp#19)P%q1+N
%UR,qT;>AA!fS;or*]lUtlD'OF:`qCt)Mg+5ANL5s/naJu;4\gNq27&`kbu,s]MsY+L-3Gg&s">(_c,0`Y@<24(/7e,<?I%@0EfJ^
%6mSS1-k<S?n5SF\r#b!_k9b<,WPt8.4GU8l]=J(K-?LX$)2(A;5,T8A1f!EjO+^@-5l'\ih[0N?\MH,Q81aUlj<IdQ*P-JQScbIl
%l"c&fpt@1[CAD%E/Vc8+*X._,mT'`u7g($:O"G6Qo>"h59J831$37pQE]Sf$fPnKWR_IibgNaYddS]NYhr.b8o/jIU@ArNLLPUCZ
%BC+XoiC9V9hU7]]a-\#s't^&VkEtb'#NIL`;F[u#$a&S-(0^(s8!RI)VK&<LV4:P:W/#t>a\&E\3HV$WM^iQACdk^c5)#^:[\Qdq
%m,DIfEGH0(:^Z9>&ngl)quOR4M#8Z_DUj!uJUO@XgJ'5)SL[ra;i,T9$KE5/5lc6?(6Qn"<HX.ea*;d;Q\LriEh%@?#t3%h+V#&A
%_1QV'2hNqe-,>*^E6Mg!rj"B0`:F3VKtM!+&9a1IN!Q5ig9H_jq7K`d&!;$B]56jZlAD<fm]8g7X3b.(S4H?kG>gr"V!6s8Ci#k>
%4D$M51H1,i_L4aI%+jM';?ciL1uTFo?CEpu,pN>krb2-d?S80W^O*b064%bpK3CFdr'"FFFuSrkjs_848-bipE7I9LKITWq<:B[#
%Nr99R3(+Lr6bAHsqLoV!#8EqfSW5>AJ8`TM+fZAOZKYY\E3D^D5uFbuO\8*bk?rokY7*e(#0Hmd/I%ii0EiKO%_+DSPSFI9_R=tV
%d%Vo0)M.n=Nsmif]s<S]#U_nRNAsGu)lP1k_:"UU&/Cf+bE\_&KJcb7DsMT`1/)ra/FW?'imBbSb<.@:>QPPAZbGMsbRpIfdSo+5
%N]m1eqU0$Ta'PFc1_26<.e`cti3D*E*Rf:52)@fnYL-;@N*a3_P_p&hZe6P"=^A0j@'B_a5GD!V"cK^FCN>_X5T.Q/+btd2*J9cG
%o-3IrCEP![j4W-IbOu?\EF$!ajZFEZL78<TL$JZg>/Z76\K$mGl."=89h)(=1M&(ietuQD.E/17N4S/Nhe),Fs,[Mbb/Eb");E?%
%@6-".1>\ko6[++sn;EFBMr<5D*T*?NWZ&+CDmrZ$&W>lE\Q>RiN:kT4rbr#gj6,en7ISQNPMQ=hhX:%Thr"1rJ#W<1RLIC@<ZK?H
%Wr%$4Rp$(&mZuS,2Z[<t3q!7_+Y<5]I_=JDn2'%a[qB$0p(Fbujo'tAG"C.R>MSXPo_I-`BoMKODQc"ori4iX;1B7&b;(*WT[R_C
%MqH9hiMt^]I'BSu2<5LOC-a>J-MK^NW\;KMXOVXFQp[Z;M%IoC<.\lkNWDs.C;CTL?t$,N<=hDb79utJ)1sUVq\p%*)9CtZo\@em
%A<k#g5$$C!GY,X%c\<+5')C);e+]LD<`,hW1'j@@)\Yh'V\3Br:Rt-"-L*)%s5D&@b+8suD43ke.EM`@*&9ou&?U;LK+n-40M&$k
%&uB9+L:"#W_icZt<.\H3-TBU?'aTVA^)=!dc!lgHOE%6daMFJ(0'"#u!2<I`!(076@4%Vc'Ko+E-l`tL!?Yj*<W!22hXm`?W2eBi
%)RJsln_:#!0o`s*cEY5f3n5\$h$c7k`$DNb:k?$Fr>OMdZ0KS[&J>3b+3CMp,([=I)Q.E:,Sk0%SlB\nIs?NH*ES`g%+uZ_&W%"n
%B=s%J8KFNJ#[D[n9J_\=k7a-D7_&#tVEIi!I7[N9<?d,rZ4#/n&P'h7R0kfqmV-bt`CS0S:Q!A/+M3R%Fum12=(6/653ShDTYdt"
%NMg/#fDYik1CH%,)D^Z4Ve6IH'ca3UJK"&.lFe)OVV4UT5OB.8JZ(t8#O<.uiCRTI>ZtFi[)AS?1q]8f.'@Cg*D#V)&XLB)RmGZ`
%Vr5<Q2-l2dUO47sF1mBhB@a:"NcO+b-iT2pp#`EP3FCE'?tl>F4NS%uU5gc:\)VUsU:S!Y!sgQOS2=`U2^=,of7)8N2Z9jdk^IYE
%1ps)VZTOrB_hQ1&8AYA2]$q$WbbonI#!-UVr:[R*+X!'Mc]hZN+FIb3WNHSa4iKhi_Pu\5@^i-9nHd,%0-T9s_S2au1A@7WZj.ah
%!@Kq73f.J-CJ7>h#`_\.-KM!UYn11eJQN&eS3\@#,'lVQ`:Ib6%GG(1iR)Sq2D%]&0Cb7*97<6T\BIE$A]YHMfW%Jj=Q.H:/B+VC
%K;37oEMh$a*Mbr^U*qRmp9TD*Uo[I7(/Q?`fKiJ7FE]nuHc36mG;)QrpXX$DNF)eo<*4n7*osKJLc_Er<_h-mh]]f5S"_A*1)O4_
%8@KhPG$m%sRsTWq3IBQc6Q*)`>u<AC<n[=(*IhUfAPmCK(o5^&Ir4).9^CKMUt:I(qrNo,`iP7fIJoB^-s7:%SV7*.;+NCOh=0jX
%C1YB4U9?T@QR-N$Po1"d!4Z^\7l0\,?.>g=JH#7qWKnq.MCZNe`6@3Nj6l"[J(SrVl^Ak"2d[;r*dj/=C[orS0EVaWad!V,^<C]2
%R.%lY=pqIic<;d8$%5S@jXr2qS]E+1oY_fUR"[?!g*KA'Z'\T&IY./qkilc1%>1!$;_1b1;4,WQ"$%-oltjE#jsK7OTN/@Ih35?@
%fJr7U"S1neF`dp#f5'0<>>Yc]+pb&\M2EPZ?4)@d\`#MT5ID=q;)O>^4;@UB.ZUHNFm"%7089-H@f`BK(JR[c`W1S#RRjEH@80Ta
%%5?tM)JF8kJ\eZuh3T(MGT%E)ZFk(!V&mP%O!@VI:#?b=PTe_(eJ>#$E"C%d"Criik,+d:]^1ra4Ss&EVK#?-6P-SM'kVDP-+I+!
%b!eC/Y]8"r&7HkH@eEkad]t<4[^?Oe3uS3mKh]qCrIG^KPtim/$bq*f7h']W1,_akODc$7_Zfs>>&J]umuD-#[Mk]9l^i!7V[S`r
%HZ<%/7PAE8/gc5#Atm(kXg"Q->Mh:EV.ECahgjOqY--SQg@UI;X^lIj\QmfEfdFRZZ)pRLEVFqI*A6mW=VtCVD*RJq@'ud]![TmY
%Lau?>RS%O!!VR8KV3_tS\B^2;/g.am,RAi_";1CfQbY_Ap?kL(XLtoJ)^g_hp*2b$kV&$h>FSU*20u4$'($#o[?m;F+2R0c&.%_^
%CN+<OU>NcrNnq,7Meu07*9Eb-9AEWkMc2`hA.G^U(t6B+r0q-@1\#!ZZec5k%C/`e*J2'JMLij,(;"R\H9i0K?+MaP]4#-I.AiK$
%iLqmmbf1?L.qi(VaL+Mps)A&=r*<2hO9<\k^T1SjM#H,'T;d^C`"k_H8XDa.>Z!.>h;Flu,QV)[>b7&,:*8S.9#OrP\[&=tWB8mE
%#^dK+?[bR?9"!I&Ic%f^YE7@A7smfBN!YA6==[YooOX^]\8QSqEJ@4@/O&5D4+=j.\p?bEeu$Pf`6p%+2%Yt-_/->P&\(FEkV`)q
%BCZgM]765mN2oIJKZWq(NiIjn!(h0/$&9Kep#8H.7j$XV!3a,*ZK``H+^,^i7JZi[qb,ET[=BX1GdUr+Ah@?Q<LOHP+Y7F.Gl/9U
%BkU<i7j8maF"m>]&10N`kjNP/elBU+&iBQf$r,X64[S#de;]9gmHq&4qL*f1_A.B02j<ZWrNYWnk1AA%$fB"o-@_$LmB3'7p+QlG
%8srZJ"38nEMN>ENTjB0TjP&.2LCi"=;sR`!?JR*GaMlU`[=^\^95Sef2riX0Y4*oqUnd/P\&7aS06_gXIMp#7r&*?W]7.KH_^p1r
%-[p+]s2);i/nqjH=V/n!9!o#'[Nu11,eX`X6%Kj\k7qm<\^qkom_l%,KG+j&!X=ufYTZ+k8en1hl1Ca8Y_5/;gG5aObu]@A%bXuF
%Wp`n6[QunJQf9+X^f(!@_ce*#d>O7VOCf498-\gtKdP"<m06(`rfDSc1hZ`rW<_E#(SLhKH+q$]1$cbBG9Vb9OM"Z"g>NRnk/U>l
%Uc3Yq'R,bf_+lj8)I@,2[b,FF;7oQNIC9L%`YI&TFPi\944o4[Co^_\V/X7G4Zkh.KA+scTQ^lK=XcNj\LchIeV7_C$mc=[/.7HG
%6eLj(e#;k\I9Rb[Hq<K0KrLko-'U_t(Z,,hHI+.D`d3_2-(.Cd=Z@)Un_<hsHGNq=5kRg8EJhDRRI\oda&ao]n+?)Yrfh[a]D.9V
%"IO\W0ht)^7H-/[buP"iH\HA1j7sl@b]Y"a&6X:lNq']Eje0Gspq!t$9*iS&8"q\fK.41n?'jf;TTtf\[=dL.P("ce)$k_&.YAcc
%ln=sL+\knli3e-cc>2<!X<foNXG#Hu/(@[Ai_nMciKLe0Of?`n-Wc#F+-1L<T:`l2>=K`dRH`A=q@IBt?,jK])geH,ZXMY2=5bp;
%iMqV_LB>W0nFNfuCT;&RhhH*(<_i6U8`"o$;l"'`meS:-14j`GCUe;,rHtl*=a6p3IY0ncKk7GpY4<nt]hc1DX4/.i8a>A:IM7mn
%^"1$3S3bP\ilc2l:c\U5`t6+;/fD*$0>7<DRqlnj\a:3lgDIZG56q+0gWrsu4qI[+1OAV,P<+2-JID6qQ,M';/X/Z&E^3(<r6e0k
%bcH]p`3t4FF[R_iL!n_inp-LR!5an-dY-V9-P:<WL"3',qqe(<^tYSA3QJ46cr*af/NMV/pPCeS7h0'#_d[24:*!:o`lcSE5H?4]
%hY6l6qjo8_9\*3mHRX7G^fMCm%CV`Jp0eHgdX@RXY.fb$+Xl?\o\a^;o20Plb;%VV9b^0]E7U@mP+pL8?9P8_:<2=X+!MdY/0W^n
%bn.HTVhF_4:LJ*WN\)9Xi#G65k\>I$[oQ!\aTNX9"P'dOlO11&mXe4[A,MH/SP6Bo(CfrQ"T44\hZZC#=0JtDD$n'LjSmRd`%CUU
%c(+&cp/HVKgnu$B>LQ"GMW'M"YMu0I/fhZONDGO.&H'2q!D`=W9:(=A7i/s#%bcpT%/#1<YQK!u4/g',L#katmdfXiX=+$M4_N6o
%#'9&;;fuh6ca/`!MkRbYrmL]+E/'a)YKnZhRsgpLX'M\mod=<qWRjr6nTZJ*G)KQAChbFMABTqkp$O+(Y2.IX&8^U&NOt,1H*dRr
%=u^pa\*1&5@IU404%_MY?&0%W_AE>)BKNpkLAOR=/%<6EV:sk2]-<DATF@[Km\JC0_k"<Q?.Yle=+8E`n!!A#GM[q*2%H]Gm^t,m
%<E[%m(6]$%iq4AIeXDJ:pMa6,hSIEt*t#JEkdG49B*m<"RjcAkOt<X6>,099gt.;Q_oXFWA5`M^Tgh"c_6,>C"^Z.RI3j9PFW5]G
%Z+XhoC>sNSk;D.*\KB)6/Gsi$`buVA[4eDV1SQ$T#`2Kl1hF0h,^\dL\.)m4j@G>j3[,mB!USoU(d_KM%VT4;A?*XKq+1Q&9;<JS
%-u+k4mn2)g%>1bBY$"2#"&uLn<9pI/2]iq)#"C_&S&/QHEa%Dd-3\VnXWcZ5qLt5FGolp)DLT-5e'i\H/KWe'.SpTH+HcLN`6.X>
%MOEmh6X1I#X:+)"5ngQ24=AXs-Bepu%RlJA3Y_B'gddY5,Y-G(VDQf_k/p_hB1OQV]9mOD^dqH'*"e9t&1)rWLZu5>CtOuZ;oM1\
%+c$@CmB+<f7jllc2h.<\D(HGgi8uH(&T\Gki%u/qrQ'/\-D<;I@n>1;Yo99F8'K)r&JZ+86^cW$f]8l-SQ*fQ=aL0\j:eUs5&g)$
%G/a;(%80d:,-BZ%_dL1dKlul@Xr`<Y1JViQ#IP0%aJu!,+[WjWMf\qRo&Xi>$HU0#BWn,]e@56^MRWNR1i[_3?)-/e:1V=h6ZRb*
%ZF"&j;N9P[)SoV2->HAB@[m"-Pku%+!#LqnDnYgB'P.c),<9>mZM+`o/Z,o(Za4ii?m9>^LZkVe>pcSX+66jAM@)>oU@[sV17W^<
%-RL]c)J6q5T$SXdZ\K@3=haq7)Z>eV\NR>E1J:$?R^F'"a5O^)WbMj4eeOX;%#gNm^In:?RjA[MqM9gXeYmYaOS]N$mb6C@h]M8F
%K*W:.s!i^:"jBp$cUG+YJR22IZV]VV)99`B=EZ=cDPS_La@$lsKVti-C_a(GmVOcI.%it,F?nh]:VSgY^IN4_MfmRYk_kXAe?"Pj
%`N5[Tem.kjmi83ss!#?INTQ1<ig$'CH+tZ-5(T3<5Q/`H3H(2[qXRQBd&UMlq'l43oJc;UTV&^kI%g#trq`S3Tn45*N"Oq]lEjUK
%`CIq&kQ0k8l:Un*K@8(QoM)955qIi$)tIk3a8;&PdBup[DK!_q4,RlKc1cLq2qdA8hh806^>88L7=KaJYXe\e?Ru@X:#V&A4\De6
%Z%3::MgkcEmV$&%;!?c("c*=uJsY"$8BE?T)KAe`Sg#Wn?4g>FV8H>tZ=VK&B0E8IX'.(TpVKn'>DcI>8.(h&d(iWQ.DO'.Zrk-^
%Ur,MWM+HM]ngW9d0AZi];sukKJA9V/15P&3C+m8XAL8W(CjhjO1G[J1mU=i+4Q32*<3uFGhEIIQIlP:e:\uN?i9;5/4>EH<ej#_A
%:WN.WZ2R6$i4H8`?rK0j+9+-UZJTK+?X`5J2s['Z^HYhX:IaH0nbH^t4WAR*#2lhiphWqofUh!&<6`PR[^m:.P>V?fr;XT/G]YC+
%>`V*o.8LGuKAZ:]&cBIjG]5FPq]e=tk2X4[q=hK)p+,L=n$^r6:%nnan&\IT0IWPEY\.J5af,)hrV'tT5$4$[VJ!EGY@Ah2L#pgY
%KG"DiT67Xn1M&JmAmg"X9$sShRQuU8;q&CAQ[$'\r(I-^0;^nKdj&!I\"c6a&2M/4ZBYq4C\nTq0h!WB.R.$ti)n&S&eoaK5b<m$
%9X:6I,+U(+'Nr(Jf\Vm[MlThpTR(ROJ9e/UUcAte>Qj:$ZiOI4P4J7ZA_<tHMTT:oI/'PC5M6Oa-+foV-knFf10%m9g',`aC1DEC
%b?X&.f5r:G38S*JNLoX`8Dcdg^af%qSu&10+Cl=La9K[gnRL!&ah-up77/=3-e'7W;9u`N[S]GdhrV:u*\X^:T,q*.$GFCrP=:QY
%L4u`3);ZnVQ)J14#h3"[ET9eF`O3gUS@%^OL07Ur:tF`-Q&(oj.>#UfA(Mb>(=t_/Vl?bZ%Hmn9b?\%#RBC9?Im(Io!3::`YUDlO
%Z#[U<Gp(27GYu]`\:Q)%=6i].nXp<q:9q%:DsD;,[#2[WA@EMP`%)Z_Gu?,$GSBAI'L,k<jdHZZqs&4n*.['?D8.,UU-]dd;CJ4]
%rn()&50]6?=he%1mhuR7SGd>h6brh'do2\Y.]Ma`^aWZR#]OVg<tt0Z^>^/[f>_4SY8L9gZYp*t?'W[-\?\b*,gQDM1qsSL+Y4[;
%#:$RX/mK:>Q=KJrbBd,WA@4b(.p+/4.FJVtZd*7_Zj^f#hUaRfX.,X5QU@Mm$9n-3K)L\$$JF?s+c9T:6NL#sHSQCs#*l*SOJt3W
%1!hAq`!qH3a`Bj<HRa0c\4]:Z#s#KtW:nck_&;OlES+L%a\QdV2ApW2l7%#r_"8S_&C76/:S@36dL/3cFj40bbfWe(O(mesOUKE3
%LU;/F];\\59rh?fW_V85P^@?h8h>@V`H/sn74'8t)TadJ<`I2DI]'V\>rgg[.:D'[/*>*ladHJRJsg_qcjgt)/J+UL@2Z%Tf^q?j
%RJ3#B)88iehF+Z_eM?GJG%(P#J5F9>IL.7iAPZE+1703%b6T"s-\E^'glN8KZ<TrVm#(b704)pahPLd^4]kchb-.MB.`t9hmAWbJ
%(,D/M#^MjtlKIB)V4JeVD>mUMPMqg%&hUTX>,nXj<Y7X5N093Y7tM^+U;Vp\)77,F\u>fGG-*qYY_7.F;=7b*CiafN%o#S*@36Z1
%9`W]bU&(R!<JkHaPE"ET/Z0IKdDAWAQlNCb2!5r=)7$5ZkDPiU6Z^^Tcs\Q3="`HTZmltOKG\&,G0%9o`G9=uf[J+(>lGIId/mu1
%<4V!./jVZnOZauX]P06s2J6-/pU$^P5[53=;rC&Y#4aMS"[l[D=dJtp(iBB@k,,3Ug!pC'akF6e2Q^[lIinNN+XV,UQ3h-Vd?Ic0
%`nlcO2Y)/+p;qB*:^XsHKl'bskAK8h*K0L?eXWmXY>GIu^2FBUc<U>@6D`Kb-dCpdWG"Q9V3S?qB;=k>k'-^jaU\5\1>XlhGE;/H
%X33sF\T<X!`*CaZHuec?/<n2b?\9@H\$(UDRa4HL[400b<-%8PR_$[M;I<Xl]+c!j6,b_S_5UXTDG#0arXVUTa>F-.ADccDK#%8^
%LB-V6Bj]5JCQ#k7<X@s_!L86tnP8o+4TZ,/ou*n`\7!`))<EIp@2hL,G%;;fW@%c5'XLJ.#`:'[8t^l:IPB_qE'`s/7"Zo.0Z5P2
%;hXPD)`\m@D%5`hQrl6:s16S41q@EPLa$`AQ.M6OH</rc:T7s%FXmBGo.,8-A6fV["("*\`\^@?4%tr+c)WVpI&%r>>D17m%!F<@
%f1p0hM<V.onKqS^JLA19$lnSX[E1"23ImGiX[17YA=tXRR!@Y9=?<;VAZ&LU?c#9gAHaP2b^aR^-E@3VWa`V2m\kI)3eiu:B],H@
%(%(fsEJq)1@'YXW/o?t+>RuVU\]UCs7ga"!A'87Vg;Du>_-?.J808=OO[Afm:&NA<\g9Va!S]Kp;9E$M'9d+?5^"S4*&#Uh;nu'0
%+?0Q6a'fuLn6HnT?CAicQc5@C_B.*t>-i0E_9FdIQubkt",/:DSo/<GB/)So=$`Pj,lgi9WK6DuUHL/a5!>*Kh74s`M]jM4RIhbt
%rIue!-<V-(RlIT"_d?Nd&Eqb-L=BtqKH>.0/Pi:dCK7/K"H(4ZEocN)<o"/u1CYl$B<9U#qB"iD`=tD,q[ou&/GkkEX_>>@1/C4g
%+`9j\,HqrI6?KV?.Q/"!;V7uU\/gn%2,MV,WVXB<luLU`\7/*$?:m#J7)<;bLNfp;f!*(HZcWZ4A`_FI?`2jEl$#M^Sp9jle'7cq
%=BE^:Y7[I4>+!CL.]mZKi"D4GI\SV/>e!9TghG5WW7g8h12C$rbm&&KAhEJ@E9,8ugN%J8.230s(V6&4m&7/[K%j$hF0D3c68.JL
%kAjU/N<L!`1A'Q#Q30bX@Ts>s.L^AIlfG@d'KSXsSD>5%]TP6B;Ui+/Tb&>Hl/-38G'_XgQ9WqWI?*H!D?UBpdr)3OXmJ`C(o0Jl
%p-3>XNX^8#4DMI.)Z!dNVlkV3AF9*SR)3j(BFH]&c?dV\7CWZGhqiB?l/1F=dH[WniWLT_@S\)+\g7#UNO@PmAudEYaX-`S.)($=
%O']hY6h9<M4Sh%p/>"T3p[<sX?]i5%SqDD]<BfLZT2UhIWQN8_k5Y@Jf=NK=hsu)cRC1(Gh7q+u]qk]N;MC1"[HAgj;mPguk4LnC
%qNNIWbUVJnr,6kJ?P,d,4_+)FfD.c<kTO%"PZ%?Fp?=S5op!aJb'Z>uae"Z0NsVWF>glVHl7m_K7-V2Q[Bna$RI6u3pga0s3Rdqk
%&V!KGs-CHC_Y!U#m47#hPa21`l.aNHmo)FF+cZ>gE.(F(reh3QB<(]Q7ee-Jr4C;L2fcD>?5o63Amgb<m3?oZLp9s&(&I%+m6B)'
%:H$i\Bd+TfS7.dn`EqV)V+R+eX41gR19hs^%%QYm,0"YMVf\=L254i,b=naI6/?99C9qqlr,/DP!QgmIR+U,f)ALqu?FTd1.\G5(
%*Q*HuR#uR>8(Mc<[PQMESl6`([pF>M3.C-h6^HgNC,Egf92/U5YDC23[d@.>gn+jO$@BOR)pmH]=R+n%:auU8Z[^ZIje-9?oU/2r
%*>-5sq_kA9r[.J&c!1bsiptgY'u%;=?*`OG4MW;=9b.Z%o8NdXlKVe5+ZEZ"YZt6?p&/:b]giJJERRLheHQ+s=KLc3goDFI=U%*%
%!:*BVM%36B.BaV]a4UpC6$pd@EOqCklsck)LT7s1`RU]/*\kWDC$`'(e:%YP[q4"th:7uH&ft<nV'R<N]>q71+EX8_4dX<rbcm1I
%G:LNWkEtrphlDrM8O<A<Bp`Cs8ss-kFYsZUj5Pf[k9N[6Y++%Ca4'Eg-.+_i+.tNrn]7U+R]30>\t$-XA*:saGhpfYHXo4)qt(K]
%L<;nL>d"`6:BhPe>&`sWM+UsNJ1.QHKMM7#B"=?PIb(Ap;C'1G^!lLFr>K7?V^U1[;Z-8%/?]qs)TeET`/*>(p%+9h9X7A4C#ef*
%B6=IfX+qf"Rc7)[nMI/\K.HgT*8q.#pW5Anl:(SZdQ:(8DD9:<Xcu;EN]*(1Q>WK3W$Bo)+g,^aTY0U#Stjjo-MH#^<7<_D'VMU2
%4*!Qtma-r8#S\K`fnE-e7,MhJ*aOkrI&/H1H`\jhB#_[+6E50`IN)Rb*%-3\8>^6H"7,6Lm+c&),LkO"fj0P-6S9rCbUDZ;Q3phs
%.%Y*A7eF:LI?%[Bios,'1m"i2Y'Sp+=iFBrI*&h`IFTjK<1A]eeWi_rJf0uNoB*rZIC*7_GJ(,2j;],$h-38C<@ubDa3FSlMcqWn
%cH6s>Wb)jF76W9udB"b^na*]V3bP0kS"L\a5$QebU<YBRHIbqLbbr22C[3EunM;ft(?p&NLjY,Or/:`l$Rha_U'?`@^kC1P;j1kj
%?jOFB7BD<0kITt6))%_M(Ht@Z`'IQtG0H;!*F!@b)InZ:9@8`bDaXrXg)N^BXk9pbL:(2/.bW#dLNNmcF(AaUd+,-_FB#&N1sG!]
%`^c0Ir&"&<O4aC1kM<NAO4rIKq7;h-S<WU[:5<FS.LBS,V3D[Y)q%tc'k9imOk`Hd2mPq0U(DRp8Zdpodqi!k*#[.V/=Dr!lZ+3(
%*4-1#[U(2@0C)/QV9>9S#mHRDorrFu1^1W5U081H=p^Nq@[SIfY&0JiAEkEf=VA'joS8pWE.%ds6C+^Q>;3F+Xnq;3ATK[c`F]!7
%$E51!e#n6T:](p+[P6_e==EG\#S^@+%g':#5a`j4VDi]=!kg1"2(V,D5/c7.Lq>;$<A8aK2PM3f1e#T4"ZN<)k)*bSLY1*F9I:c4
%eG!lt[DY4<'N%3$r#NP,;i![o">j+-IssEm<e3Vfkf*)8Z5CEYK-1aT@,C+!r.BG+C6ti3iK-[3E)J\q?CFmK%g\QNbp_U9:W8R^
%G0tGc*q.GRI"+DkYI9bnS_Fg828<.h1--jE"m'0L=@L7[@5Co._f_H+Ccf1I35f;*=Z<ibJX6-r+):kCYhFuYC)Y`<2)Ag''7j,T
%R&71hQS!?*8GP_iL?!mlhS:4P*tQ`EP%>q,e2J\_0I`G'DgZ#?2j>?F9GZ5S;`maOV4,_L8!ut&9uOr;G]>ETgJ,g80m4U06;k*4
%%1b1&=qSF,>Y`EA6ZafMba+=*R>omYZ^Sm'(oB-qg!OG=2HEh4"VPRhK!<NIAH+mP\?9g/Hj4o,>+!N0$b4?VJ?QQ<ip?75d4$(#
%13'8Cj84NgC?'FdDn<UZT[D'o$Wq5ikM[F^5V`(S8*c`V]/0Q<C\r<5HKt.3'F5=YAuk(A;j^1%CT8lG6hQ[NVfM1k<Sf<a.#tWW
%kua8.c^K"q].b+.KsW/W.p#+#pd6B\2AXW$f?t+J$0UjR!/t/'U!#Ta=-1<eF[)5TLiZm'm1>CKP*LR[+YQ)#n!27MiE0HRW1=>#
%,nR@50d:D.aGnn*Gb)FGJYU%.bl$`shVA9h[8)?c;5ckX^QVDVnOp)d(^3pZEAa!CqW[?an=$'?f6Ct"0W1+2cm%Lub#mm_D0cY6
%D=0ai#\5Eb%,BW5?;J#_W:V/Y%c4IEG1`HQJXb#jS]iq`V[>SPI)i5I`)25'Fi*6,f8a&C6.?#&%WTeBY>cHmYkWb]1CXR\3tMY<
%C5EGS;gj`^='61gkn#m*XpNh6"j,I!`]pMh;*t-r4\$d#`Ld5C7u%XL3/VN#+PN'rj[bIP2Q5bT6$GlL921@oO;:_DiuH]#aHD:8
%rju_1FeVHqm*]dc=)EdN:"6sRJYcO.qZE$5qSPF,J2Mi!oa7nOW^qQ?eYLFI\gg3OHNf%#2\bms9^eqn@?F-N>P5-f#>GJuc_FLG
%c%E%])`\Ubf'r%so.saR$k/S)NCOslmrIoB0P1/L@%Haeckd@9mq_d\"[hj?@1P:_T[Dt(>OeE$^Tq.&3nLUQ+:(eJ9k:<\6NaV1
%8k+;d!S\b1WB@.T[$SZBh]I<"aAa0=fi/E^@%XlD3=CO\G_ri#ddg2Ug%r]ARIpH#(uE4+JUl,(D@%;UICqf!P++%:'moWFBA5Ns
%D`<$0]fl*ar#4SL%:?=0nCDeIqXk;dHd$h##$lYq&qmaqY#WotaL%hq0Z5W+Feu$R<Ool!`/]H81Wp7fF28VD+d2ss[R<jegZ9RI
%oi$0728]SYGbF:=82b9J#@F7<Y0AGJk]i]-",%j?C1fXlpru!b/2*R3V782L57s7>aqHP/63>&i%_K],T)";E`$X^9DjQ)GQ4\bS
%eftcq[2L!PZFiAmk5@cai<W7C4oKYe2]YckS=Jo/A[QHXHR['n6*0iBn8WaZG>DN![j[03_"?iSNEofPYbP_+\RgNsJPH+AiNHZ!
%\%C%`G1+8H<k?3m0CcS-NO\UZ;X;3I^<8RZXtX;A`92qU;![M7oH)1.T6ia"b&1V%A>tU8T5kXIo&Yn(U:4dM8ae(bme;$sLDTt!
%cHFEMWaY-7H(_kIoa5^T=^Qhi9A";ibQYM$MqF@I`$,uX`hCT(p_i$K7lBKodYi]eCl0A\K"cd&`^m-s1j!jiqZaK[5P["0;&%$3
%7^Q])jmH^i:Lh-]H\``;fu@:$%GAXQ>Ej1=Rkd\=-TMCLd+Vo(<ARK_V9(d?1`PcVPqgR91Gace`"9[_+3!9?i';/&We-[&'+__u
%;D9C@.d$\R^R-T1k3UG>dEG>1A0KBLAE49a7=g'Y>r%O>+$s3CETCl#)]AU8V\fC/pPN@n+)3tPT?b2ia5li[p4q\sq_@noU3^I%
%;]3>ZDgg(e%nc%_@lu6--RJDdY?\@)9fr@^nTRG$T^_u#2EW!)Il_J=:8XpVm-1bOj14s`#^n[I+&@[4F6*/(Gs%FbNj,FVmcd^K
%:TBS-2fjF(YenV0[[I,[H1bd+ICIk#c(%"#6r0,t^G<+Om'6"[gNV]G[r_-^;88ZkYES;:0`3lTc.CqIE"kMY?I.fidrG.9cHXZ;
%p>I!?4L5!M.Xd+jr/(X5[lDGr\E"0_Q,b#k6`fES<6)P@jc+`-dhHoH$5Ku(D=j>q+Y>\tkFNUMdrMdIKNX&hQrH_Wj@k??oVDO>
%MGfR"MPr'F+<4[)\cj<*=Bec/_gmV3A>E*JhYo+"FmY1WZ*1&Bfsbph/n]IZ;Z,"Gj@5iX7#QiH-&8M!6'%b\6HR6*f,HhQ;rA:,
%l%4_g`"rI9/iBd<&rh<t=Bs\-%S83:M8,-MV<[V0r&W^dXdbOLAs>FrDi_?TZW6[/I!r?M?3r[Sm<IS"mPiTK*8eA+lD\P*#^;-D
%C_\9<)Cg1`+ud90$=-eW8PM8@Y">OD16GF-i8gkhhK0F'<B2CVm:u+5==1X)8"4OWd_#m6%\G1;<7Ij55!V'o?iX03h;R!sm(7_U
%o%OBg%dDL&[PiHP.7.>FZojC[I2-+$H'KE.K;tr)B'Bq;h$ln,"6VCJj4,ZKkp!.X[V67JB(8ZT`adDt:=1EKX>Fd*h5E&jk2@1)
%Md!O+kncJTAbeGlIKX"Ws$B6,f&pZagI[]+`m/#*Wp1n%?I[=FDCPP"c4F+:%_W0KaA'-Q58oWP6a3tq!;N"4LHg]#\ju7S0G//-
%-/MctXT/[[nKFCns.Z<Rq-4*eNG3#Rib.\ZbT_;M:Xeg-#-o^qb6tAqMV?9pYkW75oc@enokNt@q`T4IX/tGM7I?WO.7JDbX!9uO
%f0YTOiBZI5X;9c<3hh9hE9UJ,!GCGf9P@Y0Wc0$47.f'==s"^r^dGNUCFU!TWXH])C9*:CagAq-GRt3]/(rM<H(:][!#?S,#%fno
%1n7<DE,muUl(`7+2)%baMUKkuU[9,CnLO\o`;L9o;'pW)&ssP?C+a"#<O2'BP+RlTrLQ`/b.;snd/8i*[nU.cGrPE8:%a97:fUmJ
%B1s&CC9Y/8XJoiBR+_*W"t0%Mic8r]^tfVhmTDA\d)(h`P;YSQB7?hfd(sjpUo@*=I%=tB=C+kAgCuW.H?huJL#g%O;jTQ4kRubE
%hJim(<<`,m[U&^:8#o2=pa0jCHI)I$NctTtDuHEY(];j5CMVV!?@^u0kejPNpXhLk>i]s&h&WlFeNNJ`HVKD)]Va:2.c8)If#[Z+
%gU]V!2YZ1!Th)ZdO>:b@DrFG/f9"%smOpp\6\c<bQFfG\lj"OF:&u(5XfDu#Z_b5dT2!(1ZNY!Tp2YAI]nn((1Q7AMS/'a\q0IoF
%KT]23HI_sL+!QBRH"@849F=L5P=9L>?,`1seVfSfK:<F=Q"*H8(G,LqFlm1+lXn)LB>:%DA5<LhRJ7=Q$:HI-),/bd2Oqah/bjXG
%*7Xe"7'9_t5n@[HLH?P4i"(\8mjWBb9onnJKK^K*W`kUNOn]dHWDiK`M\q9nOLRd?(1Ch!m]Zm#Tc!&+0cYHsJ4?4?(D27cagu+q
%N4?HTKS8_CW#2p_.Z",Pe='?J"f0YM&?)P-q:=X0\5VSn(59;nR_/n=,3>52=b5ko]28:i64"Dtmr7Va5,i9#G#F&,9njah,2AT&
%YCLKDEOf7Ul#LCGQ!c6^gIE/Rbo/\HD-fl.7>Gf0nPs\J=%Yl,Nd=H5"KRtX:LENj8*m[HDg=F0B/8,9SHP.ONd&W5Q`7Dn-aBVh
%).>F@dS2r9n6%mZFgOoq,tD#UXnbt]Do1nWcI!$%gEFgqkH`;'mTuu+V6FfW:U,Gr\\!7,>2-1"B_\1P6W,E_O%4.@*Em;e3e_qj
%YhUo2`*M_fouG-*L7V@rL+LC=WPJ1n'hD\u"[f-Z='VbgN)Q".RcBBe].J*pNBS\rbjrCqi).AT?E`YdC9(150XI*N=j!]MfQ$`#
%+B&>kTJ'9FQm;h$W:;1G^hYFHN8Llcl6l5dR#TWl)Qr=*fs*<&N(<qgorfdo'*ecJL+]>)IraMfDcsiF0kna<NWjf3X%:cnop:]l
%+qO*VWi6nX^cq%I`()KOm_9!;D`IJ?G5E!5I1?I2NuL=%QbQ%$4`,]kHf1aC/hq5*I)2pl1BjV*%r1HchX<s5mo='983`!3n,X89
%ks>Y8ZLZ.Qj=Zu0(b:mI>-CZO%9?bJ'EBdac<\r6r=L[To7$68ACV=plSl'!?*?\f17BmkQUkT.%AAu/(,V1uCt"1SGST?gC!3G:
%?t"4(Gb6EOTVdT(ZV,DHJLer!e#RN#3&Dt7\=.L@[dU$f+E/OQV[&l`^Y9F!m0W[`%$Q#<e31Y9Sl4$eaC7AH]AKsS^:'DQft1M>
%:YIu:@5N90e]XV@NC#;qoVPmDh*L$4S1A0lNbdWcg6T-`-quM<b<=*]Zu`K7>nbD;r=%?pKbIfjeH]?LC;"BtNLI_IWiH@t:C:*V
%2A&&:PYsSJk1%6W@(@7A3OE9,ed-A,>b-2F25N/4(UPdp!jb"mQ`3#u9d$:[I/:3)@lP?2R82e-?>:LjO@Fmp05l8rSLVTe^>l$I
%F3jVfXnU-S__l;`&JgH322c6u'umM]StQt-.f-_\*+[7`@`cR;QcD:j6?gK+CShR!*Dr$+=6_Z`+g&g\[k+f+5['9VX=,D"0bZfd
%!q"og>D2rqGl(.ikYgd;KR7`WaX8/;=f]V;<)MOHc[WZO7hEi95N%H=i'@6Il'XL249%XKZCV!RQCaVFre0\fQ:/cX5Hl3SK<@nh
%VOq*fi5VloeTKq(#2()1M3eVS``$W1VfYj%S6&Sk8jt*t4:&=b;nBrZboe#IiK0-Ge(c721hgr[<9pR\nh];D*Zc:Mm6=Kd"=qZN
%p3Ud029a5*Hn8a7%C!>SgI50/IQ`MF*O7f`kn1D73(J`;-XJ#^I&",08Z17rO6$aMIJK2>pifT@X/?cV++..)W:Y2o+E"/!0f0oN
%HAr`0NdkH1VAY`<hK2_Jj&[sV_gtH`Z=Vq6PX&FC4bd,X<AkZeS/g)ISqNpi,K3oFX3a";#6lhK=-m>+WT_V(#IBQ(f*i[)EN\qk
%dH+3p6^K4eX/X3nE3FREaDuJ6`nqs70"\^+Fdtg/dTd-YcG&=eTRDsGS)"47UsA,)1DS=6%V/+s]Bq)R)4fsSNThgo-Jj"nS#.*"
%)s*]q`2e:K'Jll-D5As!k<A@QGk%cufL%s6O^+.N^L@7#lrAMDghm3G<_DC3Q]`;*R@0PFk&e/'%FM.5/Y@]R::MMP)^e@.!pI\!
%rTZ0.'OS9"k/gI*dCUIoE$n"2Gg:\d3ht8nLl*Xb%DQOLlrm/i-qYC@TP2^2D6lqWJS`^\C$WBqj<eA@VGXn]jg_obW"?/a<[,R)
%mA]&E,<7;,1>Hb[W^Uj@:J]5@#1NgLZk#Z:g]1n6;J=$KM30!WlXgYZ1*\o,`+Zr-Q'*'1%AB^+>Z7+joe)&>TH,'$*9fT.KgIOU
%[cq2cl<7#_4)WfBTl`6":cVO:R01:`Fp]5C'[H6"c3DZJ/*mAK=KPSIdi]486NcIbs,Y1AfJ7h]'\@1M6d%5K7d;=6M09]"W\Eu+
%mmF`QC)saM&PW,i->]J\i--=5g:[d`<"5.bNJ4"#(GgUKC8s9["_-sS1Xq,1@2(THif:#g4jTGU52=im`%Jm!-F-(L-lL"J2bb8!
%dHI)sOZhHr\;qshPDb$5Zr)$&4Ea&c">EETkG8Z=R><?IPGaW9>&K_*g8jm4P]goQEl0<"Rm^31bWU;lD3I=sj?AKG+QCCT84]V<
%\>*4FT)f[0;QluTRitLWF"P[2G&j,A9(8`IGI^19R)S1CARg[)[_**QL)JD!L"(>$=FEtl(J!?f/UBQt.N!e%VM\&@.O$D=Gil$c
%]Q[/u:c,J-d"*oOoaXusC&9<#<D5d#;c^60ZNb,2g>%NFMcK/#gl^/02S5oCB9U2kN^>95gtp0YD/Q'lk/$Z;[/\?1g?cYR@WRrT
%Ze<%)Bg('nB%?e)gQ+hqF&W@G<c2gdSu&>`KP7E\&.^.UamjF1L:8V>@E/aESM.&+U4qdg)<.pWiT@fC,Y!KhB=CAKZGnJ;!*Zt0
%fimPmR*BqM+n;o9OCe:(=D=bH.-L#c0E'IS(/&:Y1d[hW9U647NKlUKltej.1?Y[f6Mp,g\/[Jac8`1H,tV:*'6%;<Qr;#E,FaSN
%9"'p.IkkQ/XX6:V=ACi%QR`$k(*+SjNi_9qlEh].d%+:?3e?'+\EeD+IZguJDI_G\Kj*#)TQ,7TfSe'^e-:,%0j>Dr?K92JoUCVm
%2RK1K]m.cU0pRF9LZU?QFR'4[8)p]E&PXBaYBY098R?Dc03]91&ljkDI#7@-FR]i=\g(7is#aL,Qjq??G<+Oh4lj',aMr>o*-(X[
%9NmsI>$H,Pp('##+"VQF-B^V!BQ1[h][uAg:$B,?D3QmML/e&K\N1[EC(f&o]\9MNV]SE5$ZT`)q*rd$:j9jLi-3Y]J7kcs]2H=h
%WuKJ>(NHs;ZG3&gDl"ZA5NOu<2nda?=(.D%;*j`ST?\=VG:?I!cII\"Rd>neZ!'B6]^?s24@&WYqoV<6:n^eYq-$cl@Kcq`/oM]t
%`('M*ft92ta]rE3kGNhH\ft[Jea2X)1T0RLYqj/41t;CFog's)T(foANOjKS&uUe9'+KSC327u[7D37$OS(3%_-FG4+c!RF)o]b?
%^u0d!f[0gBB9kmOVGMBH+#5=kONqIEF3Ba+Qh6l,7eT[W1sU:8rAB%I5,lleNSEVsjBLiWF)I\1]>m:.:inQLIMZjk0uCipUTgY_
%,3"SCkHE?np*C!/"'.\L[#;ZY:/6S-5\rNN-1aqak"7u.MW>r=WdQLYZNS2>;D.;'dE1>nk;?3P+TsV]k%PiRjunP>f^u2/Wji[&
%B>a!YOG00fYsF\7-_gFNQlT8olf+dRIT>HJa3g$nNF4cK2Ojr^33DL5V'+fbpD4<m16Ef2fSkg5fi(gmW/B=]>1:NSi[N&$Wri79
%ABg(Ml]S>!*qkeao?V&(8/5QaP[S8,0):3\!Ns>Bgh_<XrOg)7-el0ZZco]"Vs6!tN)Y!@e-]%K<2EqGBi7!(2s$XV/I>[%GX"=H
%K4E/:\"bVAkZ/G^YY&U)?-J<*n4d<[j7I\bU!8`>f7+Br@,^Cs3s%#9%f?7p/!JqG"jlGaT.1EMI`"+dgQOjuY;*cIme&1CYO)X1
%UA;(_0VUi4(]"W2B''Y+e=^@"A.T/L3?&<.EE%PChp\0T`5t10"<]e0,cGOf=b2NZ'Y*;d[[CJU(Wb?,+u/)8GJ:9<TtgU_oOPIF
%f\^hR(?,WT&[LUC#cf!=B7OVbQUtLKr`4dsS*W>R3&+Da?;Q]Z\8rkuVZ;,H$!FuJ%Yr@%[hOX-l_e4<e(baCY!:0WHk/hfM:dP5
%#SA`IA#e4dDGo$^inTlhamKYA9r.A&J1>l+3F4&KA5pc?pZJF_'.u'@Gp5qiJXaHa4[&]Q$auD4n"`j5a0<KN1X!CtD"6/'a/;Os
%_d?sH4u>=dM\tK*M1*"4;CIgR5G*C9s*.Gmh0/OjlGq8ch!n,2p?Xa&*Tc&S52YN"MuWAu"qc#NUr9QgKf)lc'SUgb/UK(i(V1?c
%;XG':E9@VJ=uoL/T>%f`#:-RSCV/AYDOGOZ9aX!VMBm'QLTs\AK!%)3UVij+kJe\O<\4sAO@?RF0O;cDl(FV=]s<,KbIBHZFn"ks
%HiO"J:u<Y^YI!9RS9R"hSsB?I3Uq'[4<H`?"5c&([c[=$pp=7tpX\poI+YUJ48XM2A,WROIT[,/;gAnBnIJ7a8`)^FjZf^4-VaV_
%,5h!#GWKKOSO_!uoL[m<5qDt$JUc;E:M7Q)n_kheBFI3@e:B0B)hf!,OlAV&+P-@4F5Su]jCJf`)&WD%'`#+>*itiDMr<95Gd&q%
%Ke`-R>+SEW7k<f46g!\*h[Z(#'B/3:pt(;FlTBJS[iRF*j.YsaG5SC.k&hS***U\OgL"j]-N5..iIO=J*TjFi4&!]Cae,e?alq%4
%h%'^Hkl"GA=XV3f4SgLErB8(NB18(3^)Yc#\.S4#bjO9o%\0mir"!Bkp#Q3,&=$WO'l]GYN=uCQFb)ak?U'$'G?"GR8$;n"gu(AA
%EWJ/,Z56h-lj+16_k#OP!\9_I&Zg($$D;?f'_a27kEe@QY[Z*uIuKuD'[)?:8;[7c:uW-LgIp?/W/_C$WY@$"O=B"uc_f&\i:U6U
%P?#YLH'c5!IE+%7_$RE1df&G+HK?kUp5bENh_JpWH+2r>h,>rp.HgG\o\`XlnU%k;%uJCmj=n@13rb9WIE\?JAQk^iZ;:;NV`aDi
%;Smq)*^=5(*u!'5WU$GjpE,RW%sdcer;(Iar\83gPhl?a&E#W^huR$NQs4u4_gYD45%JeGX/)H11!.H?<)Yh*3A7he-jYQ(7?Xa,
%eAXQdHcmb&6sRioI"8mJZe^/BGfI^CQ>A<C0%aHD/#N6WDO.R>Ck3aN-<l$WP(Q#\B6*Ri1ojYo,UctJ`Jm"]+Lte4FI5N15./he
%lT"89[\?JsEZ9))/X@\'d@:$OK,Gmrr04aN:\HB\q4%fj4_krZW*\<!IAe^*ki!_+oRenq)R2O'drMnZ1><iH[\Z_QpDbg&7MTQG
%L]b!*hqoA@;nTU3]5=rNIfbW5JCSqXoK6e35/`nn'MD/t]i5r'mSe#'3a!!Yfi(2k1%H'Z&Y-%@8e@2;aR$h?Tq,mLj.iuI=Fb.I
%[iR?]GG5&.'RrfJ5H!0Vo'oLiqr\+^!u0Z"1@QZ5_%RC=$*`n(Cr6npiYaB=&9E4-:HjIertP#$*ZKM7TftkKp!!LKfXL!4lt=j?
%=BAEb"!]-#k!"IYE4)nP865A0VG,9b<O>MH(7NHL^ii`=^CLt^_.Am@pM?!;"I,8$Q9/'.(ud5j[SQIg((2kfV$<tH1dkf]AF%/T
%Dfkh;_te1-^;YAiiX!:MrYBKu$;<R;0V3k::I1+-`(qEu/J%B=`sB\+Yi@_lndn%]S\Y+r(\uu0l6JeMGYo]^oud*YT)mtmO(RKI
%W8a>FA9>#tD8dMKcf>m"`N[T]D'$<NP@J,4Z5`ri_<m#ZUuZVV"ki=1_BRVon/dZM%fJ.%Xg&$)ZtO)>(;Pb2-:QQ*BA+dk^i<aA
%8`[p"s2ir8FhP#K/G_a:@M%.W/g<R1=%+fX@m/<CGp#J"838%ha[IgNnJ\s%&qeCn[K:\-[)n3fXnGa]<^Ou$//5.VSk+tg'CE"/
%3ml8b_BrTJAH50'A(iBWP6K!R<n)In@S_=Yfqb&Rg$Anq0K$saG7fYIcj.qHS2*P#1p^bT2+VmcLH^[7+A-.1U$*^<Ne>XeZpEUt
%:GSGW\;`W+2)^Vol2Hkb;q("5o2/qbiT_m*m3AB-oD,IMr#"Qc`'>ldma1,H(KQ+u`5n.gYY:,_dV1:K\A\nK8]+N(3[*l@n^Bd(
%.'iesa)h)%$eAoS,T@(ie1o3%(MY9S8Du883g<%'HF>@oJ(m,-N#YHAf.r"rQH,LA\3lQQ5U*gJ)EM_0'Dlg-cWo4?D4M>m;d@Qa
%4d2@5!F3G)B>ac(*/Ln1ke5E`2*CQTFMB#*2NQ_Q.0B6Zf$rXSVlsEYWap7R3"BO4B8s3u5_D*\KJ6Knp2Js`cLt$g(6$GX7,*r-
%:XrW-0M!mMb:K"b75]1Me!F'>(L@8>VLSP0<c%?jK4CiNf(8it,H]SZB:J!b=Ru.X,h8`,>uh_h'oCokGFO?'07UdD8MMV`.Y^]j
%IS4Fo)RosYn$2s")+BF!)@9m!E%/VS/U)S%7#Rm;fr5GdEEF`->Dr$'Gj.BE?L&.QJ*:8u^]kEDIeSBRq.Uhq'B\Ha)tZ4Nkbl6N
%UU4gI(:rp6_:U!.<m7\l#gEA<0PiXU--&goae</elBI'22k'mhKG'(YkaN#g%LI9!H&Z(0At,%!?75oi:V!g7Eh]O;?Ds.3a&ZG?
%BntP.6O)4d3S'd<Bl.,umBS_mYh.#i-L%Mo``TMR):%2?7:J99XojNZ4*(*u@ps.S)p[f$k%>>HU8,$ffo3$WE#9O$S@:(NE/rqJ
%if;*bd5^Ym)KprS,:][k527N@U/T&b'fF.i1TjH*1!m:].dOkf;J*%pA,>8ZG(m+>#>,dU^*a3<!EkHS#co"g2k3`L77B^9@?1/.
%3Vd8Y28j:q8J#.0)V[qA_u\Uo\He!!`5<"&Dd8hr$OTR<D-CjS9uk@VF=_alk%E;?U/E9f-jh"Cg5U&V5k[*J@rIO$mA%?]>L2Nr
%Uq8ZU88MaNjMt'/qeSR$abO0e@%c-k%Eq.'b\D?^Z:Z#>.9'39m\"u=Sr\u@fOdqC[dPWSmsmDNcX9J[af-=k6^?kMR!!]bk4-:U
%HaB0a((82R+>TE2Yt0'n+I%I5fb35@WfK3dBH/LNGAQRQHC^hMJUt(fmjd#V/pW)!q"/;'TWj,%7<"iU4iTCIefUu`$-aocf,Omh
%T4@hE(qT*@froBYNF\1cf.o+aNX+'l[7SnHnKJ,pg1>0EJ@S5"BRq>uC;`[S1c_h2=mOp<"'m6(%W\@k:Qh-gbNa'aJi=](&D.Q:
%+bFM0C#GU$hZ"=?r4eNY3@c=9?`!0]Wr;f@Z#ItD4eB6$.Zi9d9V2)J9ic]Dgf0P==[UEqhL1V0#u@M3$6WX46qGJ%/6.A_!iYr6
%"'08sFu$["Bt!W%n%,a2$AF#*Wpp6Y'_po"239&`iE=(pFeaaZcI5A5V1'4o*bknK4Ee<8$><ds_i:a(XGO5T-^dTUSoD/<+T:L`
%82Q&dO].7Yc42GU>#onf'Ru!G>*jF5P!-a;W-D1QUq4QCL,bi.QRk`$:f=n%]U)Ql7XebY=9JD%_"+mm18MjlJkq$K2_#03HGZKq
%4J5G,/B)F5+-m*29b!43ja)I>$[LgHr&YUt,H2;'Z*bfWn%1p+=p:FZD;EV?5^YM5?el2f'`m"W&gYaZ4HZ_FligPNCariD[R*j4
%C,8@e&Z/a&GUWDgYc.nRWZlIqF()-aKeen8E"ca5f9Iho47t7"$3p(nU=:]ONps]aXo^7W2`GS0c<5osgsqAA%qgg-XLll"KFo:Z
%$?2p0[X0m"Yc;*7Q0'E'%9&mU_a`j)1e^HFlHNo?EPLJf#m2P=dU]S]o,-!"7B/56nU]=WHa[$`(AI!]dFY0Rco[]nY'"uRMqe:Y
%WRu!EdofID-+j$8NIF)PeV*?X7qq^*d]e,Tedk!%h5=)ifYcNY;Qq5Xfiq06e'nsB=%DD`_XY!JSIgtMGL>[go/R.cFk<>lad\/9
%s-+.IWSTaF"Al;u2J&ioWk(Hmpu'*De*S"sVDQ0B/?S<Z->HJ'AGGgBA=G&AIrXZceG,PS=fTD5'u^aq3jZPX<uVuc2.l7!]aXhX
%<R$p`Y+TOgN:;+dk"D7+$,)B_P7;*T[MMdp$'m(!GF+Z6,iL^ukb-9_h)03'H<Y4X%cuuN3S_)@Hmk]*WSWAVEc,N2Mu55^[<QqQ
%0QJ>>S)&[&%5MqpYZm!r("4D(d2B2;QrVr4Wk>:r$Wb8dLJ\mC>3q.&gb=O&$DoDc%)>TAka(R,k;@-eY)^&/fa,tHSogtNh!gQ>
%fGV"b>YIOf3@4/CR?9GYp`m]%.T.5X0$=laGl4R#@.$VmUn\bBpuf!_L-9nlRgp2H<=X4mK+S7j"eq18Q>b"+_4HC8Z+GB+5m:&1
%XJdBl`t6%1(tUG:G5)7:U,9DGq3Yt,9#tn9Yh4r!0Zl\'lnfG.T/j\g9fa;O$*+RL4]ijXdP7[GM7RD<-Z13s8Y)OTV%`d9/37E@
%Ha?'"r`YLZCQ4Oc8)Y-kTEa@L\E>TaWg?(M\5,LCDQos@BMZB<Hb!4"2C$NtUS+P*K75m32_Ih,Xk!!5>2pC@JcbhOkT!g#k\q,(
%Sm*.";b-$U9R%@.hNf*\il`p]"j5]TQ/Z\@I)mmM%o3'&![],'=5')*<*DDS<e>@>&.aKbQm+HhP!eRb8("B\>8KLnfJDglUpnk,
%P%@KUMPjmk0R[A0beg-R#L]WUMgKKR,Z*,D/=.1`9LiC/r1_TcMOmLgh)WMQe`V+%6W9crLYOVb]CE1C\VD$HZtBLVS%<@6,O2uT
%.`kXu^?G'j;#3oZ:?l/BK/61dUJE>qK14_,a_KO?@<F]6k5+]_X9dQ.c<aoi?uX9Oib0f\pu.i*_f0/UmN)o-ab5*:B%W[^nu2Sh
%\:/m@,6fD\i_%8B6>>7*m^X[Md)#.A&Wl#n>.WIEF%0s[Lc=['OsQ7Rd5A8jWBNK$K9N]AlXtjZmGPV!dT#F"?eW5ii<FjKh.4@!
%QdLmsIERUn$$]_hMHaf?[^)Fe64=.m?!;iE$sii!iNHYja5WR/PLADd%80t5[G%fd2m.&+7Cs0VH>bPjQo=BB5/dLJ3AOob>al@h
%>s@*drfZO2+g:\,:U0je#Pr_d2pqN/?fJP'^@(dq3oAflc3\bmI;J>U\rg?RC658]\;4A@+he5cb7Kmc4-sMQV\Uk89>?5om[m`3
%'b\X8g#UTY$sBj:r-%&P<%_rrku"Ps(CI.Kp2jj1D:D6Lbp1LE\r:2"PjX7Z^&T7`2s%b74OIM`%<'`j7rhrHn8?44.LAZgU#ku1
%Y#EAB;@fr/mIF[L(G4!>mSDYa0kI[q50\>"M^J#6*ZoZ+%B8_g/+C7<RolT]l7jZO'\g6U+EDA'@m-VEE5?R@^L&>3,MD7T6`-o`
%Gl)tpH^e;4P3k;O:4Vep'+XWNmGE<D8k=I4!j.%9NJm.-<!,1WE(P.=Dr:Pr[ETrA#n(?NYY[Sbf$4O3GB:+h^Xl@oq=l4<4dDq:
%Y4s8hrp;*'I@$!F5+^ltYod\15G7smUJItN2O\9VTsjgYNU#2rW/WS(gO@Pa+0jl[ML)2I\(^S9U>@?kSaQM0:;N:7nI]F"oc1Z:
%[l6fuIu8HJrC&#KoYsY@][]D3Sb8`3[YJmII,CLc2[\MDGO0Fq:*':^)#0Y=q/"]Tc-XI6rPG^#S%tSogtA",);:O[?Wa`a)n7Vf
%>H@U#R>1/+W_=MWDkeP,ThHP3GGgsT$>lj?[Mn_'b4MBO?e+aKOh[V)IHKRc=-?98_2^`iX&\b1MW9>(WjZ)_6:#H^j!:ZF2Cb!B
%bm&,c!B0!G<^GhVBad$karh9MEgQl34PU0`$%\GcqB/;n]$)Iq>It<eK[Fb\#X!IC9_C8kS`GB[N5F,>?UljR+q@?8E][fB3ao'W
%.8lmA]LZ@j:Q@5O[tdf+B?2j-$(A4f^OQQd*/)$Y'%iF#*oMPMJ]c4'))C>iai[mQ4o8BfA5E1;_njTKZFK/b<!:>5>*_KuSB!5)
%c?:1mNm##P7%="F'hd1,7Xua.436V:;4jQ<%R@OmPDt>:'[q=7RlpQWAP.8?l&8a&Ae9LYlUf247D_EjU9M8GZWrdN!%t<I?'8%Y
%e<W32?5_RZ9MbrErqjp]mDk&k<FG&)-ugDX.u0oBT/=asYI_X75&>WNOWrI<'Lah8_I=n3Y?=i[W[Q0cgB=3FI'HsMp8tAsQ>g-C
%`CWJ..Od]ogOf"Z'EtP6kQ@27M#*>"b(0d3?7\LTf,?MZ'O#S<I8[d.R=Lj7jH&GjlorBlfHi$Pdo"u^%)jXbV*/JPM+@[nIe+,.
%o-KmG-IZ0\NE\\(jbb>nk6O_%Bm#0CM&Sq6bq9,@A5.d&ISR_#..]c+48=4l8$2F?#oZLcf-.7Tj8!*Nkd9[r,35VJP8qCLD)sAD
%9r^q^1A);lZIF#MXHP$H[dfnPJS7-U<e'L]-uQ!5S=8-O'fsuhC/PfB2R%g8$t!nLlt!bPI@XS>VAM#oVsC+0Bi$,gX@^JG/nKT^
%;AKlSE.l\q=;c-*rb/-iW&hJF%,aFnqQ,hQ"(4V`Nn>rTh"urGi#e+dFY_'Wh+**OgA4rr\L%5p18A^)S"DN:>seDH<%[4^$eIi$
%YDNDY&e6jY=j],<KcuNL2Ym(IOuQ7f"MabRLN`)W5Bp.f&^R>e0MOc^_d5*Da46*g4MF5'0,B+%3G1K<LqnsX39*Ui3HtXJ4/^0D
%2B8ete3G#ZObBleSFj<6q+`8ZBV2kpOl4*ABf_3aSWii]W_'a6C@U<A*``b0'fSm#g(VDs/DE7d<hA`NC.F;;<BN42#:@%f`q.Qg
%dfh>+c<1<33%QRpD4F&/?&Pm^o++F?#q[F'+%n`c'.&$>/%h>%k@>+d;Z0"`_[+T_,F%urA.f^$]^4iLc0hTeB\!.k64X(N'N(J'
%Q?arkV%6mj.af$<c1JnO@:YF;IQG+mY1a#U0kL*c)>$Z`F3aD/eoadM5,V.)d%eoBi$E]JW/'$0f)#5kaWVA'qX++1QYb?_/FN/n
%Nsa_f4^IV]p@R[C`,VQuQWt'.HhOis9Guq5M87h>o6%#h9TXX*<16uY%O$8CjO*LRRZkrp2XEBA%6rn=aYgQu-ZuR572*.CLm6^b
%G$1U3l^-jqep\k,Wr>_@ZDDgDU_S0dEB<TL=:mE$WFCY^<#sr-iJ4s`i??C6)<0)=Js^nrI2ng!.CRs10/H5LisAr<__ffs$@G'd
%RC4J+2<f8k./G\^9b*Ldr4<\NmfMhjbp:OdVfDK;cmBu`0Z9;j.7;J!%'`?ilbg!D[8DQ?Z8n\_Gn@Up0nq/gUK,UJ7=\97\Eu*_
%DLR#i(X]!bo$$i%oCW9sI9#N;i_)a&fJdB'jkr6H!oI.iZt/fG(0:6NXV'TdcTf$P5@Z_-l#$4jk_S6Edj:Vs:I"f>5&Tn1`Q*VD
%54]kcl$69L<foId\5SkY27HG=)n!6.YMOd_46U1n*FCb[DGtFsd$r:ggQ]>Kqcb&`c\M0<Nr&(HhAlPSRUW0np6oWhUUKIS<U%3I
%N]T]+U2[T1@]rc)\n@q:G3Wn=oeu+*Db0J9bhX(F]>SV=kc]s4P?iXBhf$`p)p>atTYE7j:Nh"r^NZRSM]uH,l\cs8BXEbVr-&k>
%PIfQujfL.^U\8lrnJ@)T8`fA>o1k5D_.2etg)q?`ML2[_;5TWGCF2mAmESN"F#B6iqErtq=VA!8%8hdI9(ift"^Wf[mgOte`=E<I
%QV7i\Le&GW:Z5C$pIWh1!pU1DGI8_g2M;/fk_hHsb10(bAC%*$b)@*iK9@r&8)GJFn&uR3a/:uhL?LpgX^O>f.@jHh=c-#g1i0,F
%AnX)br8ds&=\3?:K70HbEWIW4l8<>qJ<-HlF->!E[%o&iMZLP:QY[N7n<.pk1Y#A.@9Rb?*BG<8StVU`AXS,&,m.ZoAYfWH6FNeq
%XS#-*@L7]scc_hW2X@0UY!o3fY1_[YXR1/B![Dml*CTaZ?R<=LE.r^#W]K-1rZt^?PDk(`;491u)a@3oh-W?\NY'gE;#JTn'p(.6
%WK&M&:a<77,JL;BJ+`SZe]JE=jX/l/n)8-iUIGY1_3K%4Mu-<U;nHa,o:`TfGRr(K&T`9]E4]S]&M<n<&_cO#$m.U##&#%mZc!Hl
%Iae(B)BeWVd5l^.HEVphdmH&]9W5/"C]4^p&3L=Z?:S>ZmcNt7)rYmLHS@ObS>OXYX$p,0D;?6BHV#Y/2aAG3/4bju6bZo$@m4&S
%r1WNd(3UiH8DKFiEDpD.Y7&J73tr7Wd\LoqYVX4_<*,lde7b)Z6C5qK:>C$3mdLHTcp)a=fH67"I7`43o"2*)@!u7#Rl[4$bK1;G
%6_UhWj&C1GGsl]p)QXr6\q@LQ@9nYPXI!`a5H%:Z;4Ca_1;&tgU>gFhj@'%c*/KbM4JbM:L+!g1nN/fh9;/J[U[KdkS[las5UoW2
%M%NT`(U^[d1\QukJ0*4nM-K-sG*u2],+Sul1#&Bb4[g9Fm$qp0Fhhhd/g4@s+V,N%DhUia\K9SBWotS';3k+Nld!<oWH&m>N#X8_
%4KHAeZ#j!F*c_)q3r)aQr@#hf:TLn)50ZC^.ZbuT[)*s4k=/cLClM*O7%3a^=X1aUo7DYLI*"cT)&iHIbB#c$)R$m1PLG!&i/&kU
%5M^:eahR/h\#K409)g47s!.G2m;"#d\pfE(?aW8%Bj[n-eI4\*Kp2U;fi/F(2'uTT<X1($.`2UHd6W8F1[\3g=a98.l+Z:%O_^Jn
%KXGL4)S9[eF9mjr)?eSL>8X^t==BlJl01s@(GKtL,t@*_:kb44ZEG5L<@^'8B9u7^]]J^@P4M3-h,EsJ4QHf^]'dYb'$%DFW4FHQ
%._<dg?galcnIRD_Z;POW5kZJWP?h>&ZP^,=f;)&]V-(,q^]<geL+eI6LO6DWX-a'6_CXZ*:9-o7e\\tc5$;Ho789SkK7>*'@GXJE
%Nt[\E#h@@1;+e<QdaZL=(44D.<43]$`Pr(A+AR`=(ZdU&?.aOjg*,5<c'@=:Q*nk/W=Q2mg98W-3RoA#%o*'`#jCHQp,[pe(Y5Rg
%+(s5S=GO-tluD]Kr>rg_=$04o?+(oW!W6E#pkB@+;l)%r2k=M#j<HM)k;E;8b;g3jhjGj>^4b2fdsSOYia6B=A<F:l#1/g;YQ]BD
%4k9jOc"V\ja\246hdpZME[aW^CS+OHpBX2>.:G;$J=a\;@gYQ`ZP]0iIcJq"Kk[tJ$cshgQ;>h7V.M\%U,_H"WHdn]aVW%MLZPu^
%-I,!OQ]+(hN72c#HlQ[I5k<0FP7_%`:?TNFRX$ZGXpU[E"7(8B&KLY9K(0WWkbd'kVMg2mqZ,%bXfqQ=ab6RRFBc>mk]77a;^N\`
%;7K6TJ;B@b6XU\p77ha",KIH%NY.IJ0%53/L""Xo#m"m,F,Wj@<0N!Wpu2REhq&ScXNWW*Jm_k:@A&=\%_02U>to;GBS.a.::FQk
%+kg%X2$n8^=/fo8DK5ctFXYTSY>!8"UZB6#0LT+CdZW$1n.92Hl1J.GJ,RkcPA$b6"hIQ,%rQ0C[.Z]CDD_iD#qLs>ANeWGeK"Yg
%-6="US+[llrnD+%e5QOT)ZLg4mjqp7W%&B#.BV4K%NAsg+jp?2o#-@E-,dXmp`*CPW\&;PI<nSH=5JhDJo3]l*'iN(rsO\cceXZ"
%F$lD\n$294_i"Vc$2#.oAK<kmOW)S^e!$D:2,LnK3T[;WQ"j:qN/B<KLSc43\C$Mce6"*k@/@r`"30iUBfa2a'h434pmgQ3*oF?!
%QWlO<2F1H<YCft6SSI)_!rbb%e/"7(?mWEd@2'5HC4O3geV'#pg!je%F9-.,3paY4:ib'HC%4?B>X_;P<%g+2+4)t<W:pr>T0DC+
%:HWZM1\a4HTIj$SH6Y",h*c&H;&0["-9m-!-2dDZ0NRuca^>ucN0A:C!aoEinN(qEY!@cR&W@RoB1++2Hp$nH>-]i+,8efdF@;NI
%3J4k-Y7_:"Re?<cYXY-^1tO^+#nSdjZI?LT$q(/40nrg];`u<R)N:i2Jn]-?l38VXKMl2>kA!\_Ttla/@,AsPSOkZ#m7A*&j+ptG
%4e6l3LXS%thb>WZ4!<tBdoN0KB71jh:b7:63Q7\hH2SF>kI&-?[V%B0_]+_k-8`QhlhDh<hU<6a/i%`%$aX%O]&QBV"N?-tJ`qXH
%YY0cu-q;=^<+13/XK&jtET3NIkp9b"lDdePKkRpf38]G&01\KH2MN^3r4j$WEZ8&'<Ztd)1fG0CRpVt[$UZeG1:p*bd+O@4LleM<
%.%mG!;tF#.f."jr>/N`OcDi.*Gu&ei=:^dH@1d73UmK:ZZbmE-GnkW3"jsng"G9*!i!;%\#22@JeT?q6lnFZ+AXXdh5%P0!Tn-]W
%$l_ID&nXp'?bY-g)mR,Imqd4XkQ0B]O[e366$NOE<qYG@gUmq'Var_G5lqp%iD").5s7&0Q^1=V*1W`ZboRfOe*&+9emT-#;m)%J
%BS:EUNZ>MiLMTpAJKP)>:2;"6eXgoc5sX/X8kOHV=C#BVs4/XS2eGJlnZX0p&'L45O7/"m:CeR3+B#=.4c<0^R+Nck'h7@Lr=\7b
%JeTH&eAdIEdN=H*Tl*eI%Yf!5j-HUR)!F)AXUHM55l`4]VIdd0=J'EX;M*acN>m$r2XaU8!jBD_6:PAXl]Z"h`Y#DM/`h7',7A7)
%/h_kN(CtCNZ#Li3<XV;kSM46KJdRho2ED8j7tn2u>sS>UIb&;>Z]ktm[s,SQ]Mh]88Mg/H^0hn@lD0'^p?ZiO9i[iA#O\d\&<cjP
%3hVaXEN8XM>=Un:F3n.tn.iu=mA<nh&=7D<Ae".AEU!odVd20K/n;eV0a%09Gu17f(K!uF!GW*+D_4<9R_mrMT?K9P_i.b#*3BD]
%Jeb;$D[>XdW(VA'VGAUSe$F"FA]EnqCY@P)`<01ed[>h9_ilf]`0c]/Jo1H[gX>0R*iA/rDM"0Q:Bmb52DQ7,iA`%V&/VYfrY,?o
%r+"qNcHr2]oQhZ:<U]$a.3>1?-+ClUCKV]>_70AV<i3c\!`0#PiFSR+(sdY#!7d8*^%<"&09,]KZ@lpPW++K12Bu[+dF-$mBE5gD
%Qjdudo*hF-!\CFRLQT&E:CeIqGL2RHX<U[CeI[(%H<JW.Lb=8).R69g76opfk9(bfGR?eX/-N?BG`..QB(cf_kphaKV6dbr'XSbe
%e];e@e3Q.GRQhaa)lIYl6WTE0Bum=)^:mBt-P11$e'`7rH86$;#s-MMgJISmX5qp;"I_85NQZ(BX63p$1GW^/<Q`H:q\R=)OP#ms
%SB^t_@aJD`PZ4-C@Wfo:MjWSi>Psp^1tu7(/REoaU09)7P%k-Z!1hWnT#J9a$g'UFS\UEb/7]B@Y/'-BVs)`8^o+6E5@6AD\:Z+*
%)=*JK1&LV%,j_,K(OaArDr=d2DYEmppLETV@''q&*5rKR"DF^D<Xe8BpbeK3)l"Q5+N(=3>u5)<`NW=m><WgB^#]:YWT1dPVSCAX
%-O:7[<-:54&jcj*J&FJiegln2J!dmG*Ie)ZaHk?)AUtDI(FitDaHWX/Y58CP`WmMmBCsWaDVcK-)9kLD%^[1Pb%lBF"r@8R=)e2g
%'>g9B8Y^hG0C__>CV]#@NGS>5W]O>K!lR>6e:1;`$tL%BF)CW'#n[P\\j'Hb6[14l]8cOs4PVu9QWe98rSo%,Lk$5qDM?^h)GOQ=
%ZrCMJ8IR4W(@(gZQVULi62FEoU!m.hRS2<>G+gIVaKPKR#g/E5C*>?f`ZbF7C[cWTpUsFUGDJku;a&N;5Z?^[h/_I0=65/?,'4=V
%cCTa.1D,b!P1-5K.Qq.)\HH42knZU/Vh^.\p$[rnFZd<b+4klU52X/^r4^p`X$3+jZNreqaEFPbMRJ]*l1;%>hs9L>6JlMV2cdeb
%i,sNt`%0JV`pL4jD6WtFghtjE%M,_!G'P`rRWXW#)ONU1bjCBkW/cX8k>u0``E_6-@V^ODO1BS(MiA<r@kHQ)QE:VmQ+;4HCc`<?
%\!LG4HQ9#gBDk#.qpYF(Nqu*rlnlf_UqJdSgB7A#:A]IW3utV,2o!*fbe)HJ'gVAN3dk03M<tMp"\ggPcWAD/jC:KRM.]_aqCF7$
%:gJss&LJbQ(:1NB-J>b)bM+$+[`D)8CsqFE;Ge\Y\pEg_fXRrk*[L>5YJ&iWe^5PR[Ta5M.B\l'Gp[\P8/X9OmF/XWWasU2/.3%b
%Gh/e-ho:OhKbTl<;K()77LQn&Bc[SjF.S;qJhNc^nij%``.q8>`$rJP>ucR(9:1;Zf/+bM'G\-Inu./0XA5piJnlH7)8T6SGX^aF
%j$;?o0ON2j3TR`85[ZFiU(U7kSabYMmge*`2]j2mon@Qadp!&ml]&UJgKm%UXY73W)W,e,n%@&-htkX?h0R"Dhtc/LZsUN;Sc?Fu
%nD:[->K?9knM9hkl.1-.olM:ljCV&#X).P1rhR1g<nfG*k-XQ;p.c(`oYioRZI_J`NV-&WD)L9QB>.<K>A_#OgNsCE[0CuiYuNB&
%271n8Hfar9^3s2m@`L1m20sLhh69D9s!Pa4-TL<WV$'X61M4pN.+'+O3NC3S8EL=O6=_5Jg$5jEW6LV*P%no*2e&U#F7,J<W6h\a
%P/!V=@tHFQ_J+.OJXC]\U#/DC$,"Wl$7Uh+W[a<+J4;0&j=%ddqp+0o9deN%C*V!p,;)ee8t/58lbX04!EW1\Fe$$sF)fG1Hb-%o
%=+a+'=>%ja1jpT19>L08TZ*.`+oCS0&2H\VG8;RX[SVS3nt9[35hC;\af":B`X_/D36e_mPof\EVSJC:OYr_rP"j-&U.cA>q#1kB
%kAi\ke(R@r5>t<,9dG/hBWm<e/BDtZH7!C"O?pAj6mg;C!TKtD>!h&'-EhVr^pc0r(V'p[%',aa_l_ljMa5;-#\QhX_[[C=Tg!`)
%fQZ;6VPbroJ/T5@aZ".h0ugo`G0&osM)UVX_N..L[Qhm`/L-k]FT2?#H`([s&n%(c7s2f%Kcp/1L?0+&R"Wa3DI;jPL@D]m`8Pc0
%-'f-Bc=W/`nKPC+]$i\!7?C8G^Oq2W9Am9[l\ac$iKUOJP_\s,K&G@R-]Is=Qdit"T\k@t-a5bAlE.X9"=-<Q]<jqd2Aa%mV6O[f
%DVu29m7l5V0taqWp^36LU6u'f5M&tT7t<4H9L`>'cQ#4D"O^eFor*.MFm-a_WePaPg>M?9]GX`GBGWI"]@ru[8W-bX@."-;h,TVi
%CoVj(gfkk#]hf%c&@P)7ELI>AC8If+9W$:R#"K*03,OCNDuGkDZ,K!kh-@cdLKojeF($2m^te2A$?%#[n6PJ\ge>&MWT9p+.+;C;
%.7URRR8p#,dn*Q8-jU-^h@RkP9F\`>b.GAlY,WD"hMck3)O\X.=*D0"]3]MPa0QYIaOkFmI!2u-0I,W6+bm9<L%]M=)f"I0Ro$gn
%JBD:Ki(p@'!q=r@'Ii61D7=6k-Su`G\,`PmZqG`Sj3.:_dIAN9^a#GD!5%j\iP^Ed\pJ@X<M6lsI4q(-M''4sh6^4qBu9X]VE[(i
%0E_R/\bJ<l,X-J#,;37Y?,p#6S@;9;*`2)SWPe'2D3dg7=D@60Ph^dF60c;XknJ8Xoa`!;BGV6-F)2S)P\aF*?UN,@WpFSNFtugd
%&#OJLO<JXk>[Y(JXZUCa0lL8n_82+8Y]:n2F[pOQqYRr\L:3A5Cec(3@0@tBoPCs*:@()X'TnN=Z8?]W$1(.Q'QE-^/?u]lhaHO4
%3$4"YD+]NZ^9U\""k:7\7oX5$1Ok38?bXW&3QArQkVM!.i?b)=6MBUf@thd'Um2_nqYNKpT5`PQoFZ+Bbt)b-/88^LlnC6U_PFGT
%Y53-Fi2%*&e$8T"h">.toO5nJ*:s0Xr?JgS3OMQhZtYM'=4m.BD*+n,(Z@l[cScf;X"!_LHZ\"SqS">"e%iP3FaYhgreObqaV5f;
%M^u<=U"S#\glRddfV]UDe]tG"](F.(okOZ.=UEp*-mqi/dr#c3j?0RYc1n+M1R"[mqeMnhkf]jH.%1.2a7XC55odDa:04XpoPM`O
%b:$I(B@rB7\T%NFYi-n;gfNo_PV=@:\sX[>9`PAWeeKZbg*/td_>f&!4mR&q^Ro-Jb;nllC?6!'$:(KZ'?Yj:AO)TA$n0jjY=Ip?
%L^%5uQV)LN'Y%05#7ih^D_cC#WEWKf\X_`n<,*"pM47cGYWCcW]a4W%AElalmI[KeE'$>p5/O#DUmPj$#h7qAM%+#.KeWJ"/Vb?_
%f&+jHUjUdc:34l0dfE8-<i]A:7(dKYi_F\DE]VP"mh]t40P1'2A!M(L\p:^gXV0Cf@5h,$RuOmoafdkO^&fR]_2H[7e!=W;_=5j5
%JCpPaZ%\*/)PbhQJYQ2T!9/X*;9QVH2&K^.\Y1"[[]F8hX+Z6f!m_Lt9'1F=mb3Dc:OT!I,7G)a@l\1D5pm92/?@H/"!ggNCj,2e
%eHPR8rFtfk"'dc%D]D0bR:7ror[7jfDN:A9X4lO5h,IQBUUY#QGedOPHDgj0%k)0F0XLM.!6NMgPr=T!/Y9j:ma.tGou,br$^ApH
%"u+cYQW$t!-#BHN;84g/;Nf<Q5V4bZYpuPScfEN<a)^5^*+q5JaBS3C,=JQG643i#),N%+GSMD<0)d:a_jUh8Y/$$l>NcoP\`7i9
%.7aSc-R#e2q5mUWh9c,W#,b4Ke7am&fYOmk$W'RkZF&O%dhLI+Jhj/4o,:9#aOnAbojF-UXRRJ?V8g)5Nr`D\Da7X/&ZHk7K+U:6
%oeB/F]ODa6?sZ#mD'ak3)RJ/&80l/Z66\AU@0IS)]L-^[W9JXgs&?l^U[,9W.oVjaV%:^Wq^MfWV*hH5XPS@cU,2KVVkFkGi6:#K
%?;4)ZB$A!5?"u10Y,P@S;1ktAd2]i_8ne*XCtaKJ!cM7uG-+5@gQML5\`PZQOQ+dO#$==+1\/6FM":U4]-U42kk1^_pl#Vi&e4%#
%XAAX'=cF?&?B+U'VhbD>=5@?-BrbY5\QXf+M,Qr-jn$W(3RLkKC4HqPP@ouQ;pb:OVkpNf(ZSu2q/@E9Lo-gZFakM-crth&enFD8
%Sg)!JdsYWoP/j]JWjNlRqqb2_cl0H*j@;d!jCN(s:jh(-4ds)K64]m@&N%R225T%-Q5iN.)3[q_FKDPXT_2>I`=o3\'-]0/lNZ_u
%r2i<T1N>iOAgC"0i,%8gWp!J4s126JQ>fE\W3oo?r]\H!_9's<,$%7b'e>^<*S*2Ub%pi):N%`Kb*geUL[+)OWF\rXDXZQ)];`$L
%WLOK-cBtPj,.$ZU$$?-?ZU=b$6'D=R?^]dN?A'\IC$7%n3jL3'Q5V)u(8h.i^9gEEF1!>)%3S_.b7%L%Q1kU/n:<O>=(ro1^:1_G
%pg=TC24>SOinW=p?^9gmE,NE,%7)%];,ok4BMp]\ii%DYWijtB.)*tl+FF]3cf(e@i;SojB%%WHVn97/Jgq6Ks,Wdp=[[LbVY\7,
%@VmaQ?2l3h;>eLfis4I<;(Da>S/%W7-mHmd>,p:S(!BUm<nK`@Mi;hY)Ne[;kR!$nN(7aU3=ukElC1WD`Q(#r0Ed!^@6kMIk%9Uc
%GXYUC]XiiLVIefj.?Fsk9h5MO$=0H+4<0/,76j80]X^FDC=h5J$s_"'?W)9ll_nL_89m.uN("dZ0iNb&c)nP==-Jk-e3FXWoN*5Q
%O=o-6:DV2ul9h,N?umtVU/T_d>mum!+019U3Yi57^M&=d.!,l)V5n&$K?Yg<=HPnPoXYr@f5%Fc06R*rP4_=m2[aJ`2)p0MdH/FR
%?(q\-;4"5Q?7?G#Xf1Hk2=5&j@d3P5p&0bYL@5V4_WD=+r#?G<,E6-,hnK[DAba%OKe2kBB;52kCUQ_37C9qk<plA\SrVKdIAW*<
%0kV6;UL*g2=pVHu'57eV<$You7Z[o<7:4T13V/fkaL1UdUMW@*6l][fp&r&b>GiI*'!rQJj[T'-dAJ7P&na$Z+1Nt[;NluIHD*C`
%WY@6L>2L4a/0qE,'SCrFF[=.>HG*<s+#f/0nWI1/W,+/Q93?T72G<q3<;[sg$moY[VTrpb9'77a94XmS+A>pA(;>,hWuXn8f7$ho
%Ij`>*r(4r"P0OJ9!@/#pUPjIg4-pk%V-74'>Q?S45ZWl#*2aVK>(Z)=O=V32\j30ilkjK#]$rAn.KONP$b2l9WoH.GHn`CZU"cX/
%$O+>Iaqj&$"#P8j(^he@3DoX7K!*`hR<A>CTQb(b68Mf$qAG3]R7juO\tkZrY(H"&\g8`#>6[8bV8<bMl"';F('Z'^&O8nGK-SD+
%&5<99;9WRe=Ud#,FF6&uoQE96<["D<H8q'$7n6NSW\lM!Zf&;9NU?;=TqS/Oa[D2SXhHaZ5u=A_;:V/fE12uSE_)C'ho99HG$/>6
%^,O%n)(q"We%c#ilM5P^#b&'`kb/b@"b2^:*;V;PBtO`$F)P+*N*A84?rN,0l@Tf'$L3;'8[7,h<4M;6o-2na]Qs@>.1QX4\p9mn
%.dIes`FWsqY.<t2C;q>-/E"dCQ?WLHhij.a?&=erOGK^+6jc.(RZ:3%=9lM5GNe7K*fUN2!_/#[$7Sj]V^722,+F^R[d&uL'+7N)
%+Np*iXq"^kK%4[8cDl;\mg&(k"A&-AiEH<R>u"b/YUpD$9e3Oqk@ltlLn'2:aEVKS+Z`/\\j4MCd?-%uJ1i0]InZ.9&lmM8X;RY!
%6tN=&F0$BIH31[S$L<t+;l&)o<C;5AqL0+>Hpj;SL'YHq=C#KZk]Ja/>iVkW-*^'=3*_B[pm"_\%BW"(BKOeLA^e_VRg^3DKsGu`
%F<I,5NRZp0DcKN;f7&.Q4&8-P'0BL-M2Gp+r-lRr!ScOZ'nN&:Po>)U+.S:dB'n;!lnh+C20plun-!ptHPP_?HkM7pH0+r01n:&-
%?%*9S*(2)TJU*Vp#`Z%PpkP)L1(B!%n4_Z%#ih6k%mEW(%\*.Ge)feAaeO92qV<G)YG$lLj7,DR/Mc&QEOdIEe*fJrpC0;=pNVX`
%k7)?tjG:s=I!l2V7TG:[G"WPe,'&#6rbB2Q,DcmRmo8h<4#;C65NSR%V*ZD,<PDm;8VGhHOcjOQ^O+W\=fImC;]esA.[pfZcdP$E
%`.!B+:;eM5*U+\E7?lo[<7RToGIePU!-'Mk]HCQNWbHe89ul@r7"s_<9qh`qI]?:qr[tcU^WTJalEcAbnAnr'U??r1kBI"-o&.`!
%CSSU`^Aq6E"q6WGnF]M?Wg)GL2BmcT%&CH:@0Np5DM[^4JM&1Dc<LOZ8IierUaKMtq:TmTMTLaBERMPp@F&PaQi*0/g%83]?Q+If
%IM+romL8fq<2jJFdrdZ5\]^+]rnS.U>u"ChcVh*K[83-9&j?3]PB>X=e)g#<G^8/<G>&GVSZ;]anC:IfPq#>tRN-8l1j]t.^f`4g
%$70Ce*&bR;n_W1k'uFLVgrNL"+1aR59L6tKbL8]dQRQl/7gsM&N514O2SVU&A9I%F9C\#j'_j<n"oK6"JhofKV3=@r/QtT%9RPMb
%n`X)K)3k-dl@kVs^14]EKM@*_Pc#8dCY)*4=2SI^RW\2-__qVZ\YOfA:7Do3\;J[g%GTD9,nkq^Lgf]C%\;RG$E:)k3E/MS20?U6
%()2aZW+7n-@)<C44@lK=b^plMStAI@T=5@\CWm\-5h'>2J\h]Q>uEf=e?CWFX@$4g\gtYGrPr-(2muJ)o$o.+9]t!Zm>U&EEpcWf
%Dm=@ICR>X)b-.gYUTh0VAughr("Q-brFSLs7=BYfotT_d=)5$!)]S\F`X6S,e]+b/XP_l.DXH[iX1L5.48Z=m69B7rZ"k<E[kj5_
%Is,>^kC!!,*Y-T;D>Js9ol.i-mb5t4ff;G^\*4_.e\_uGFk='Nh%t,N#4.7.^$X^s9)cu'hKF*QSTe[_BE*-UnlOuG[_&`oH#(G"
%i'@h##?`(SWc7%g;2"kB7!)m7SErl`r;$"OqR'+f2;$7<Thf*"Z;[Aq*8O4@;^[=>!_#PG!"gO$;5L5V^]^Xb0Hts>JOQIL0=:=s
%oLY4/g-qb-P,h;3#&,XWFMph4kFhG2];iJ>V,WTR-oE3A&sCEq)_L?el[E9lX*Q5)^ERoXWV#kW!2!/?YXg[_)_$>4P%U6kg?"9"
%E_Dl)e36g=8SPm#]jC;?iRB1dbm9#SF:4g7I-S@&-1`ToP2V02=o;&;2HpEPYA0an8\j_)(mZ@+&;a!DDJ+mren[?_7<+OTrC<*+
%6E/C6Q+:@FOd"bcMY94H$^^k[QE#5(HEnj;#!./[G.Nb<KXchp`E#b6a[tc[[$,gcgrI2>;drb=-2f4m[8o/Nd'SkMR'''3_G@"t
%!-9*q+`\Q76+_,qaPNMkVIU7/O62+un7W!]EQVq205]F4Zq%6gK!OZtHBtm+?%"=;m0PaV9c1d(cFb,bVDsfAL#@kl<Z\RsqnThT
%(8f3[\Fua3IeX3qY9dr^Ln%hG9gl"Z4/p<>:)&Q!UhN2KIa.%nZG-5.n0X4/aYpn*95jFRRk4<#FEfdQ1i)l2*_Mhe&(o(i8l#W_
%>'/"-"_IL5cLG2?dQ/d5b1lds/m&uh'e&TeJN22=CJcVZTi>E0fO=&sFG=-@Z5lgWTo9I:7eCV43?dj\T%66nIF0lCQ+k'Rh$"t)
%ei'$eIP[r2(sR&bA$#PJ__hM8J<Dj.;%A^GmXE`j"c"3!l:YPp;ndLUF6L4`pD7S'Cg3Z8U30tqqE!iA7b8V#$I#QoK=7MLfs5U>
%)rhYm"&_M]_@7c];s11eM=OuJmM'u@?_R?E6XNb#`ZV4IVH6"pVmLTMq:,:7)F6o#9@9&8fVkQDXIVsGJe3,HTf>&!Y8W]bf2Ce(
%1i-/[.mck!2X=n]Tg#X6e>X<\i'UGoP\)3Eac4T1/W5?c16Xo4hBe&TINTd]AQ3*cR/QZ$'@@9NK;!j?XtQ*Ca9bQeA(>$R@%dcV
%m17Id@n'c\rnQsX@:3"rGc<Gd5$:XfGBq5@d+UTnKkVRQ7,+noaA^@t"^Pm\]>S7?LP8/><SBaKko`s)^KO*hG/[0I?0^IXp:dNQ
%DsQE;!rAe<r_egWBc$KEFoq^oDH/]T8tEer)t5;Q_RnSL.U<)A`XQ[ua_I9a<[C3l^*/T8UpL+(.+\7F1T<SZMk<QK81uEU5\S!:
%^djrk^h]VJ;GgF!d:jROlsMCtpX@QL2^:rU\E/o4mFN/]I.ef3k"?<<Y(PT6#UbL6Pt!+%#2m`!5Tk=-(%^P^Co[K(hLKGV_:M_?
%>rTX/D.1oNYj$bl[K>f"#%"kJ^,-qqMi0Lu_pTr4iGnU.7m`m97=L[+akV[#X^-#o_["SJOWk7<3FOF]FRsMoq799HN3IA%1><Mo
%p(]Q_rN+9a#nbW1f5:^$?f&1DD#,,0h%9IlM-YVMV@-nc%']+;GjR*82^)!/6pL"/:C`[Yh).M-d!SnPI'#$h8s$Ygj_o#RH7kA/
%3;*&E8p`/"m437<7.`d8o>mq4Kdi!J,LsYJU32Z\h.:Htl.srRn0VAPb9(WnN%`;oIF8bm\K5Q@([TRYX+'uoo@n$>CXmE'RX?\p
%rd4:\+?H56W8Ud9c6;t&[b,_aTF4AV@hk[A%f**ZAQl#cB6+UE$!;/'!HkE)f*d;AG#i+XFM;nNNKZMe4;pq*o.VOT[$jp0lpCG?
%Up2NU"6f=X&>/H*SC1'%:h?QXhOYY!NQ-5^\Z[f6VFQ\!`fblA`4=$FE:2fGSNT,-0.:qlA6cr^LGulbOIsNS11/'RFq6T#qSBTa
%,52[ds2+q\aGQIZ>IS)neo?nMC/2-_A.P:!DCj1g`?F1F\be_`#.U8e,RCQ!5LqO]V,R$M->iLPP=Yb[E!i9n)LaPQqor)B1%>Ka
%bn8j16/TB-N9d2JkBICodk]#r0!oYu78#g3qMGV-D&P9dQjK._]mDnW@.M[g%FW4K5/d5aFA8'9m)b+5**7fEr_fVf@]n+\RKYf6
%8^t[t4=h>GlB__soU9+5<)rr&chAjUcK&6if#'LeBb-9j0Vb?gLYff`g-EC4Bu#Xg(-Df5rA'9TC%?@2Q3O[XLLt',"&gU-\Wd/[
%,!"!h'+gefg#[:P/r1)N.h>L^,i''Kq?_>TBT3/YQuOsd]e]5?eA%'Je=+nm/-^mW`pm1]SYAJ*-TVisS-dc$J.rDD.XD?_K>n=i
%B7i[35+@fO7IPHnO#Obi6^'UCa/3!aIXEmWUFhJE3sZ*;We%pD@sGORI(@S7cnkp[bNgJb0h_]^JEU,_1EAr-YKG9f/dVT.19t\9
%.)M%/&fI-D^m2\.l1NGO/D=c6AE?KZP!fM$`=<bq'Oa/ZK'Pj8+^/9[pbek,Vkt,F/C`/2I2^ga!Q^-Z@Y0SEqL[E9Y7Ipb%-%RK
%+Q.Y4[BVkd`"G?<`UV7==Ose:q9q2W2>*cu5>A[/Nf,6C+`^X0ShtW+l.7eA^tT`G,>OZKT&\(%?BG"Vd2Bj>m4^1%E\EWgn6fOa
%-,%gT<2hIR]KqGJE;[Xg&ttU4PC*k4S@L59h\0!@R7`/7q5pQmE$gTnl=7N`b;$OAgM-X$b>bT'70HtaX<3Jg:9n>XngXotCV>fE
%,H2&_)Klm,eY@$Ikt_d!:@0XN))H(oKp#e(!u\b(3d[Ua)cO0$l[j2GrcR3N_bnn>9>:.rhe`.PQ]-+W91HA-#h)a`;A^[bAA^+8
%i;>:eE0C&Xr9ImRnb:!6T+$T]7I?b%LQ>W,mI/01Gh:B7K.=-'Go<nW4$Y%Yl#m,6N0h7QYbYg#@H8;s(#cZkP_DCfE05=0r$a&V
%FS=\.Au_`_eO(R*Ntu<gGH[*je(G2[%CC7%ih$AC*h>eZCT)f3/(Gu@T$+WoR=(IfJ76I8Rc3RNqps+)8+hXmBX\^99[/o`q(1[>
%F(#8Zg46/]:GNE3DsBnrXgOcS-odd`AtFL!aaSP)^5=;UTq52/>k2$@s7Wd<h;m#g*tRu>gp&'%m<FVp;;_Ya,,,W(rCRla4Jl5/
%koPq#5!N_Jj^hGrYDaif\6CoX2,cFJg%]9#,\1FQOUX0[J,VLN#1Y>[I<=:iogauVe[mh,52A<Q)'2P.laDe,kZ"4bS]^%5m7QU,
%QdPu]a-.<uqj_eW=\;(kE3l\InG4P9WcO!sC-jbg!PgmIS$:[H9I'nZXO4Kf^EYcWBDur7Z0Hc[Ga"uW5p2L/S=l4D5^"W43&/F3
%Q3m>'@nGc2+8'Y#Elc77aE)%SO6!]eeJ#0sNb9J:<CP#Ce(7r6pEcRMMcsgXe88',$Q-/\:En;3/7^I9(jqJIlsORa:L_3>g:f^W
%ZAJ=LI=(h\-2M=-qaHC*D5DZpi3Ve?gRlE(Rnm*j:U>?77iGiO-I;)a-)^#'F^&Mm/Z=bd=.MohCV6f"iHlop_Ll8>Z?lWeE=6,=
%1Qh[4B+'C\?W#^hq;ttufBJmo`sp<`'1XV)X/TOmF2lfhIY^V[flgGQ.G]GV3gQJ40=o95@B&U1<t2+!W2S<<%ui?@f9^QS0tE>V
%T>?7IoIS$m7&a>`PnZJKS/"8S_%^+9$E1%L15H%R79oRq&f^7i"?[Sk<<18jdMd-I]r`Do-L%Z_lT0=!A@Uu]Z-F'T:M&hY2rFdM
%QNn,Kji.b0O`C\e?n>,h^)"i=H:HVu_NduNa:-\i`;@Eb.HSS&^Q`s>[Tg6`IoO>5`h7e50n(jj3to<:W*A#g1XS9o/uA-=XZh-:
%?PV<j!H,<q:9j1#i#>ttRuP3bg[JXhnmY$oD9X$#['O+XbhU2^DN3i)aM+q"44CktnU%mT2.:Dsh:=&nm,u[<DCtGJDarH+=C8_Q
%LGQA[g4&/>h/;/r?/0a.>A%d<[/J.Z]A:8^]=@Sd5?mMd,/77I-/P'Lhda'4bPCE/lqQZg`pQOjn$(NTa7/@!C`S6p\2t!iFW#]7
%c@U,*LhC*q,dZiG]WOW-Z>ZO+,o\/7#dUc:>$N3*N9DJQHi;Tmf^5I?J0C*d?Y('36R+_(eBMl!Rdf\,b'6Y#Tp9jZPEMRsR+9k9
%,CarN]]Leiq9@MjkRUnN1S"ojA=V?W"n4J,4@lDRMS#$Q9_Zf@pj._GCglBF<EakfO%3+i,8M$hQ'#7K]Xa:m3F)16#p9>Ed?EFP
%EV0-&>d<^b<<6?,;TE2c;8b'50ppVu(ufjb6Z*c&61rS\RD%<'b8FR@V[+cC4"U6'+49^C8^-/D$^h)qZZ^[\5Jf>i:<M9bf8=4)
%ZU`\WMkXB<RAd3.5uer'X"f"8"DX:=2k-,G#=)MurO/4kIS<+\$BNZX9[:p;'GX_jR2d2Zm"jFU09gL?r280a][.9OT!L"^FOA6_
%Xj2?TJ:U'j0ab(YOqn[BW^]IFU-/#\Om\c4<8WL5%.PF'<8CLXY/OiOe@P3LXl&+J6kE_ok+Q7H</0(;YCAP+rK?@#V8HXrk<J=Y
%k-8;G'4!H;A?D%KSmcuP?Zj;J8!`4H)DZ8;5gc$\^<$bjG-7Y8agY$=^ZU;IUqZV&cmWI6FppFf[$sW_V=jgL"rCE&b!Luc5j=l!
%4XXn#7Jgq4r=]<s)Q3j6m<)AbQ)Si`7L1o-Rr:0E.nTL\:'5&ZK2dYs?&gY^A:@_tM.RJC^`_M-UTVPk&V(.=O[.Npj(?"Vi8eU9
%^91^#DfgL>h`asM'HU)oJ6W9f.D@'TF"!OkPonp#]8fJ.#-:@S*R6_e(s$\B,?*g11So5e`3:[r[m42L;G9r`&Ogf!pX*rYl00[?
%TbIqib[_=VN>FR3/"BO$Ap"-;2W[eMXY@+P3phjl*r@Ba-/(GDUI%kVA(WY*m$&o-;Z2cT3^_KHV>B'RMjq4s(Os.,<DcLA.uuG3
%M*</@::6eHG<,InnpZqdIo?k;6q4n.d4l!,!TseY44C7B7=2t_?^'%_9C+'j[XY`p[=\)h;-bB#Gn]FZK>L@P\.:C'R16s+$3V2J
%aK!X!Fe=U&]ucZ1P3^jJr'"Kf=slK6,3Y@S`*$/A4,*.kEq!KgrW*2biXA;7B1(F5K-Hl&>If_,n<q*3#n#I%h0!"jPr;MMSnXFJ
%/oUP.[I4J's4+=!de)g$"GFfB+L/a@F:\Zgoo,,djSe_e'4uO<(!&bpo:b.RqTC0I%@?kGB\I*,>k2r+5e>@mja0O?C>1pIcrg??
%*/mHhhs=<Nh7,R7+Ek1B>ZpCqX?o$'[<r">m?Z.H2,T6)_`rB8kFu!Z8@u-G6,]@LE55Ep1/b5T#ah3>4qGWJZ,F!t)%%<JkX8O@
%L2]g+m>Kj6(g,232ht8?Sgj.6+^o<.>+(^);"Oe_?&mO<S]kYL\_e%%/Nnn$FbRVHAsc8&IIOa^$Gc+5[f^XcI^4ZLDiM8Y)s5o/
%'I*22d7PPMJe:VYg3+dW`"d"5Vq0\HJ/9"Vf-LZH5PPTr&'Q>7Wd.'I4D;4ck34/Ub"I:=4]:cA%k&ZC1-R'J6+e'rDbdL:Z;@3W
%%N:/K5ej+gF_tgM3Lb#p^p=\Hq9YprUMbVN6BmDG-]DH?EMoN"^3U_4>,upOoSQh?$CEg;?%G7RUpm\?X5!*#e;M/5BSg/R9eU[#
%,IQJ;Mg0:S.KkA%)'$3]Id,.'i1#nEd#1&X)h\ar>%K=%B_NElZNgX4-t880Q5t(b-?"2DU'`k\9FUo.>B^(UB3]uVgus&3?d$PU
%Fr@"eS+&Iia]k]6e;)J*AbS]ba4YBVb<"+Zk=ri$A+6C?/?)7Z_P*A5""NK=QFI"WT1AQA/9ac1%TOl8dHd;h-pS/UVUHNgrjdYn
%DX"Uj,t!G])DEh<C>GpF6?KH_Ne$HfF\&G"9r6U)Hts6rdV-.$Ao=]Vhq(e3lT_;8-4YiH!O3Y5mbQ/L-].g7$2Y>3k-.2E'qd9>
%*[p&QP[C6nO*GY$MKNcuVg]\US78?cnfpI/o=PLtf36<@>3K8tSAqh&K\?JW*&L(XS"!^aqNpM6&$2P&TkZ)EKe"BY7h.S4:;kQ_
%?W6p6L!PnhZSOP9au[Ce@mhP(gl$@/B=N'nV+I'k2%,<OPH['#STa$d8<Gp7hc_UGf:A(1oGJE!2h6?DST(c419K$u&<1rWpLF<l
%1?(_&#uO$!d"a-aji/Qs4_.GRQc"=/6IS_5LR^[=p''C@oj/1XV;;<k3ogh[B*SKL?!n_NFVYWp!/F0ajeaKY"OJ+)dsu_4gljU2
%0HjCSZ=%I3nNe]:?=TA7Ke%t`SgI-b:BfsN9:-Jf$c3LPo4rJ>eEDaI3^L;AYDu@OT3d&l^Xfi$MKAmWOVTfCUQaRU3pHssB;_+.
%oN<<t7/*e692jVDC`3=+hIWYAh,2+=XGnU-?rciW)L%(h>FfY/aD05GTq$pDlePJnTKf*cW>hOmM3c#sWYBsO6!I"ZhD,^c?C7@3
%K"b\MeNKj@(?7.226">YRg,+s@t\;OeOJoED*]NnX6Ms(+7&P68n`$G9mjl%B;-iSF[%OU!p4DHm+#Ataq[JuCi&cC%g2gTN>N+"
%]r,'J1[WRH,2-p?X5aU96ZT6h)lJBepYtouDP/'*SRM7*oM'G_!,8%?(FrpNnY%_8Bla[@eoC*9Zj(7*ZQ4%0PdO9H;(oJ_?).BB
%U*Ss957'cme)Keej@oEC<^0lU1QgG$ch@u;>lg34*m!BZif80gkAf0fiU]2pbO6C!^?jn-?IrU;OY@(d0i!^;R#:(40D(g=McXLq
%,ujc3X"d<[d%).mV#$XBp"_@dY#,Mo!86'9YD81'K_4_*G_V?-^&SG6;>FY9%Cgn9Zpd7bQ6f?i5<V>]BSrsLh6D"_4bHIgYaNIb
%mA>&N#ucl=ReGciKsK\LI*[G(+C0p\+)%?Qn(pJO]t)!kD;t=e%tj"5=.!t2:*g-bq]]'_E_$r-0HH@6:WIrt*:>A0)*'*InK86U
%M]Q73A(rUZ.IS/(;Z.RoS:./_%4=t"$T+V:LjA9kpTM&Fhd'mS1rV4W^U9e7P$h;k92<KX0Dj/9m[:cpPF5U%HOmY(hG2nKj0GKB
%;-9IY@0qF<mug]hkPd0Ha`-'3Q[KK1hnpi;]&DhqhN,*LLIZOPO5T*RWCe\qSR1,ei2s#,VcL86GcRs[%ph3J8%aK!NneI,r>s^3
%aR.Q,Zd4+/AaoAKItW3M%ph-64#O@r8T0jF7aLIEi`:E?dBm,[][Pbb*V2`Dm8_b"4h"FK>P5PW[=88plHZ-<=S7IFh&>S9@FZGP
%^t)Z@>1>LnGAjF0LK/i6!'=h%mob%ga\2)Ne]G9agoB&bUQZerE2W!Ykef@%F0B2*Xco@kpeKB.mD9r>QHGr3UZ?`"J4c_$5?gg>
%8l^.m)N('N=N+EolR8S8",LH'FDX0A-A?]qV+\fG`Nc1HLiaH&SX1HHRI2"BO\DJV(:?ZXU7gTQ=oKhWo[EVtC\=Vd\Yq<akMa,(
%F`l6NR&E]1Z5*$EAIi1*\*8O;Oh?.f2=.X^mo('mI)diqnh,p-c+.Ys1N-2PgUtib6aTE4q,LJUL3S+V5R<T'43i3+#Ohdi>pUl0
%#C)eJ#FT$Uo2k3d+4.3Rn-n:f8!k@de-dp"M]=b(-cP?0%V2#'N$_s*8-IT%*3/9"L(GuG=="]OCQ;\*Y.QH.\N6PlL(6W?8o0N\
%6QD=k8u2*tn`oI&aW3*CES9?[*:\0/F^CJMpT0KW3ENJ[C2>BN[<a4#jZi=d@Os\:8]@;PRK&G$gug0E,rXX,6!ppoqon=`$bO[8
%^.n$51Vqh9nS<a0=!7=cejf)U-nU62]XEU%enqut&=Ka?F:fcUEkEG?m/^G&rkQV;$oLn>NX%^a`Pl"=GO6nP:OU/-!YF&''Jk!3
%3As$JO"_Lq]H2R9hHj7^K:<:,"pR8l?J<a7oSB>8&?71[15#NB3/QAqOh!R?#Tm/U]sU.C>+1^X=aPFXl.7]WM?;Pl_/#m`hcItB
%GLhbu5VE=42.n>A8jQ`Y47&6r:%hSf+Q'l4A;n&I+3mDS&0kjZ/P-3l>op8\K?%-V&imGYK;1seE/=/'DaM+5nLdlDLf),g=":9K
%l#_W/A@kFe+=Wb:5f]?Ln4ao\9@KHFL1[/7dY<:8c_6\[$7VZM)P&Y$'sFBX5D.n@K1d/kd"Y='0NHW^<@Tt\C_lYiD_^nLiLUQl
%&9ACe=Tnp;-RagaPR9lZh%]fY@?R^M8^]rB3/f+P,?VSAe^A(`PLG-lN(,BR\592qoklok=j'PTl"M6=7Td[tFugK2>cY*7hQI6'
%AMs58n87%[--,E]0M7]KFm9ND$VC2`K<DLMR'q!XSeH](UW[b_&gD&ANtA4^:/jZ#7)?1<:qj:ekV[4WQr[JHP38u-qQ?!m0>$WZ
%[-t$*qpOr98A)-Y^+5XibH%hS=C5LjYe.3kF'81o?pU5<-qa/;Hg/cRXWaj%:gK6>hi\#@C&W&l[f#cBFd5O*?fm5"2YI!/E0N9"
%s)"7@]:OUk"2^p6iE]O&Xoi.j.^<grfJa=W]*pSL#qJ8$"aXgj7RWLd/aR[CaJW'.jFMH!KtX!b,K3h$[Ss1QQ8(fK+5<5q,E)>j
%Q>:]q+Ma:Yl%s14lVSX75_*]HdQrr,4$HtXjWed<+5tYi%$k5R)r018coqe(F&b:WAe#<5P"YV:RJf:+#tR<.\t&[lj3eL]'(EIm
%a9sbo7Pe7r4jW3m>p%>>0?G?NC<i!dFS$ir7PWt,Arrt659tiHd?Eo2j;hs<JU<je;)E[8TXe6RR6\lM'oF*mF6\Yr-jX=s]&!^#
%'I#>ccKg%A/qAA@Z-#iiBnX:lTXcXUNS*m/YW*%EQ^R/?qF;)@V]M<=F-uK/HK8SFk^K'?8>.S<Z)5W_,B-7[V,@"S"!Bk7WR6K]
%f7W>/!`B\kB2?DE<;n>)kqMUj:G\SSn;NO/#D#L]/q0pZ31K-+f%W<NB,<=74=<79nX#$NY;`kg#VR&AH,U-e>jYo)G"ob63eZ@Y
%k$G_JGa>MQa;QmQ7X`+LleIWl-!Lo8j3u$o1F_+:p^IMf:>[I]FN/E:Zik$FLLL(=R,VFmY:(8Q,JAUm,["#H1mg)NYD;Jfb(%N#
%BXbRV;HUlTj+H(PVFh'o#_t+7qi7Qfh@'5Al(eU..^,%VX^36^2N4fa)=>Z+r!@0Up/:@H=^*$ASqj9p0<Z2=4m]+tQBLrlTK\5e
%Mh+Qk`G]A6-N%3FaGmNk?(X"0Eom?rIoK/'!_9#JID(,glEF3a*?^A`X[Yh:AgY4167?(W+=WoUPi0:%[AO"POT3@AeE^/K-$'h+
%ZOi0Y[o7T`P$$L;;JZ[Y3)TS1JTW!+6"a&m-+58d=_$`[cs%FS#l>5_D&ILj[fs:%T%F#_%Ip`1NX>Irrp_0`_T"S3L^+_5*%j\o
%=n*@7mhjc?1b+#;U`D<&I2i1#F01oc^&e;ud*GrYHj\=(r0pG'Oq,A2$IW+rRTJOFJ#CBE_0jG!*@1;:2L7<fIMs;.oXQeD#X;O#
%ml54<T?N6>A-#i3-Q;]?%!Od]nao7Q<.XMfRaD:FfiO",d'pjW,Sd1,G.bl]J'$:M#m_@_ZDLZ^0UG<8)u;Y'kV;`K5T..b+NqnE
%!<sfoGjAps//N9RJAa&JCp0''$*!u48ZeKI\XAEHo[e.LT)$c*g"Q47GieL9^cj35?)OrsYiQ_in]_u]'RF<mQO2P$=6Wnj-34O:
%Rothaaa>@-N0n5cZ\XsnYDZKhS&/"Zd(PA0P1(X0EcnfI%aBgS$Ds82]s#Zfe<k]@_l%lbUF.+G>KMWh*Z@k)2;T9;D5[=.8o%YI
%FpLTt6HXL\hTbZH::^=J":[E3U\ZIbcmLSB^p$NFWLQuQ=gg+/.bYTt?q0AGVS6q9is8T.q78,::+,H*p%1hEaur]+:6fb0+(+`)
%16fi])U9:]HQPnm#h%]JqnbfYdjT1+T4P5X):A.\XGKY7e`2g-Y>>,Oo<0h#cWHD7)XOA_Np*Kl]&Z6Pl.;QGpPh?hq08RaB4%]k
%pRsVg(I"!P#^(`S/qHqPIEb@XG/sXR$XcJL];=SN#2N8q672Gf$WZttB&<aQ`EQ(92MD@OS7>$dVt_O_@RN[J$1T8kJk&0d:>\mf
%]dY+?7U3RD_Z1t9!#aQV:f;k9`NZ:>m:8fPbNUe$5an6$r#]Os7!'e);YFm\rDb]9hnb*`($9Di@R]Ao!^-@nl8(HUA23WM*lqO2
%D@Mi\jWf^b3p?5/1C;PA#cr;(j3OAo$Lt?iT_+q\QlRL@IXKreE)B=^;\H9@pMGbP=nEY+S;#QJ`7u]hRQNgXa>>H%o->Z\i;:)=
%.K+-iHiNr*rJX/_K$euFW/SdpFNGo`o<1B8mi-[[o'nuKci/`WSr-%)dmBTDPckQ^'c!IbJ%p7O-OJo%bXA/7.OU*CZ-gR6Z-I]=
%Ed#1DMq>=@Y,pW_e?s]E_*-fli8!R7T6tA&J*KhDZurp8=O6IN/m"K['A;Cq4P>5@>HQ*J_j@&CX)`CY*C.\AM(fjmkF01#%=i8l
%&pd-eiHc\MGqlGL$Cum5/0FHMZ(-TaSnu60$94`HOLS*BV^b^r^-8fH&+9VJ=`<ar.;=2LQFF\oCR@qG'=<o=h%0eMcrtJYr@GD^
%W*]1FfR(5@,@GaR\O3"R-+dK6JdAX\[2aOV#2(PN$5ganr>^qG(<\Hrm8(HW#(;NdpVE$Sk#ZXqdhr9jX$kN;$ic"jE<Sg-EM+q(
%;b@Y7rK^Z@OJ5M$rXe81/kGaTZ2@6WYmEMK"=Ta9Af'sLGRmF^e1A=sC[5!#"-U'0rfc=*go!77i3PGWj8jX153Dr3Dp@NF*WZ5@
%O%166PABuSpBC]%S\o^4M,E%"m."(%s'IlP!r+R"p@rn,q2f4"4['aJ>6iUKXr^V\86!$.6e)18]/A[q7k?1Q/TcpmZ#"<\f-do8
%DX9`^Jhe.?*j.^.Sq]nQ'*qncb)ENVo>bbOGY21;(=K;bfp/]gT=dmLX1$d;*+=@#_j[B9Ku+t&n"JB(ZI8iqG=%*D9O8q5/0Z&F
%`c<."kR%*bn=3:]OdssDoS)h*f=IYH9+.Eb,AD4T!)k;q>u7KGXtKQdjP/3R2<Zc_S#ok:W"jsTK(32P,=W;"W5AL>0e'nV9sb@T
%<mN+'J^u<,bG'Qhof8HNQM--3)4NORJX?fi,b<)'JTRiQd&2u4BF4-h<13AjLugZ3`[,1k>2X=70p.I\eR2LbQi$)I&Zli5+A&D:
%;M,i(n\*#H0[4ECB&`6T>n^dJdg(ElXJd3@F3t9B!o6Xd>`u`L*OF^bHGkkS%l=X>hR&#'f!>@>Y<AsNnI12*UG-l'dM;bm0HKh/
%1jW%:E%p.+N]ArS>Fr`P;N\*+42E_-5"Xd(e%M(\PSrEBLk+D4_'='cEuF%#[DpKVo&nMkLopR;e/G><f/pB01&Vqtq%X&_h3MuV
%R=(lK*lD@BV*$Z8O_klqNm;libp*Rmr+*QkHk@msCj+n1=L9S&>*HkUjC$iMT+Q,Ti@mBDP]Ddjp!Y3/ZM8Qlr?8$F?2D%n99M$'
%bl.J*9D103fXT>L8"Ujd^?"UdhbH6[>Xr0#625@uku-KGA$m_aq4hO0@)L>R,$2Dfd9RI^1&8Pe_q=<EAN2lq/@uJBYqSeh,3t"L
%r\G65a*K63p8,d>Vc1`@Dur@<f<Fc_5(==^rTA),X?,uF00/Cm0c,XkVHN-3Xjbcse*T]uJ0RR$VXPgn^s*\<VqhnM(Z"Dc^+Gde
%nc/6\^]kT\CQI]'YoCEYq?fk#hEVGUPsXm*,K)/L'YUSQn.;kJP,/n\%b!t5_kfuGL;<>,'*D*Dpe6fY*[ZkT\73N44?T9S6A-Sc
%aAA8ag"5Tc#*KuR(LhtZbJ?E((fk;(\(9^e-e:bkM2Wpd.mRNkSMlf?FjUIT%an7d@f]AFi^_F8%htLH7fYMF6>a&FGP7e#W2*^>
%)1t""j&?3.?`9UmUIoh'l8&ie$=qA)cB(u=Zi)!s`7@crP=2sKE2UTLf.8_2M1G/lYbhE^9P0]c6"W)ABgkgY87=-VSo#</ICk)W
%Q2NTG(hVI`n2/sQnDg-Z]QuQXGn\RaA?XgZo&l,Ulcq#?7To@%6B/`]c!RA6+.I]l[:msj2noi7;i9OVc.C]`2,L&nb5aBoD*3Z#
%iQg+gOM$bNa>pXqM>]8pI`m+C^fIQh[Q]S$V\A[3jHD-DI4\'IAQE>G+.'qDPk+Y%QYa@\\C&>e*tS"RjQj/Pr$+;h2m7V2mFT&A
%Adc<*D6Fn"Z[^m!o_kKYH?T";CjR/Z*8?h9p1@fPp@"KA^,m%@_m;@82QSRoj^TUY?7aL\@dS$eWtjDmbI<6!eHTqcoc'[?Zi=tA
%KGW[W21o+Kq:;e<D"(M)]f#*G!W>gB5<^^0k@Y:&-kkBa6t3ZoY)]AM46<j=Qq\"CJQfqG#shcBkH:7>Z4TTbLedIC"nbh]es_O7
%bqNnX6roVG%eulH`l&rfYU\<c9"9L"SWVG_\iIC,e40.n\GE^\4u>GaVA9Yb*kJCq:VQJm'[g$DYoKm24"DAB9(M(B4@*.M=.h7i
%V\k1\peJm/^8h`O@^A$gQ,+nJfC`!LV,2]>O$8r:KU]3O>2<_BLhUhR,4'.*g;s\2p%;#2]mdZ&./u%HhnhTBE"W(H;Pp>ai?I'R
%(:ToJpb,oe]%?'=Z2?FNV-u,Sp7C(s&CN.2=CSb:B<sYIAa&Jf&,_c'8>E[p%F<a$B+MH3lsDuBJLESLc*B*O/H'QAP^6A)Mb&Cb
%Omo"X+9j%Drj($4ZA9g4WM=oqX#3QO`BMbj<R'u;Hft%1^HVErOVoip?>2M]Dk.lM-5'+hW1*=(-0'rN2k4QDX@6V#R-\=:7kH6<
%WS`OWEeZB>$js%:?U9D=\!<NnEM#!DK7;`"NhWc.oLR0V_t/%)#hi2![SUuc;>*^n=4%HlD>Qu7%L9Zda2@']isbHohRBPKXN0t9
%HWdeLJ'/t^cDgX7,(B;O4$RHJ;XM-#Xd?J;C>S_M)aESH9==H,G$`nJTj)O(Q[&DfMtdmQmm?e.dJbIIYY-*Tj6_8.^'ioW7Jj^8
%^b12Bb;K46j$Ks>g;eX&^'&Vk!:W^a\.'s4iTEC&h$(3iU$oT1GoofM_X?#Po1`2qMdBc.gd_UcMbdcBAESC-]Tesihg5?A4GBn9
%Z1C2'I`gNBg%dfN+)0n4r>(^qMc]B[YPQe#fK1!UTB+OJft05Ik'uhJm/2^DT#WU#?eglq$od:uUY0oV4""aqh_.Igj#5(fbiR-M
%^,<\f>Q**HmqgY-g?jjY48ZQE[6'TM`d2P3rQZS=q@:8o5P;ukqH2a:9=8iShKWb<%c,G#Hg;pEgrUA9F5s+1n`MfJhp+MmM2G"M
%2/#KhMNMe:Ej!,(>2,(fj#$#$p?aZhV&kCIHb@iQ50"4[\_gb85;K1L?*QHZ:[Q6q!mrkAHV?R]a=_u%hKhV-q%fU],n=q$>;kLi
%(udTj*kOV<h`di6ich+37K`q;[o8"U-q`BpNAm=6e7rT%Hh=TbdkVAjlrNNIU^;rn>cY^H.'#4>Z<st^)A`cET$>YR5qV8"o%,,u
%4X9]@3^kK$/Z"UU;,]':*is#d`A"4?Q5,V'Z9UeLU&<,VZ%lei(sYMuIE4%2@MI#5f@/bkS8(d!Ien5dNJO&<2(GolOA1(Mme\CJ
%pKa^(8@'`e+\kAS@muEX(PPNb2Nk$RMX1mR&[IXBFA-i%^s6&phSNe6JM:e4L5J]X7+Bq`j<f>oY.(SY!c;MH2#Sm^7q!e>n2?/C
%+1UtPiV#<ia5L@0_q;!#c0K2DBQZAKF'bI9aY8%,K@O_'>7eEB)Bn@Wq7g-9U<EArnPN:lR7YqBAee_%*@n11?Dg(oY:E`#IX\6?
%=pnOrH\pdN<2f!YAJ:.,XEI!=.9:P*g^&5mg2$J:71cuAOd;?5SjELW*f`7!C[2HkM)hZGrlkn6FM@X/?In0"+%<37CX2i[EQZlk
%c<[pBXuCFZ`jomZgieFTQFee5F094pg?Wp!Gh]++2uRlg2S<>5hVT$X^9iWDBhWr^L2OUtJ(9q_eAJl^FksK\^?HitFdrB11%hN$
%Fk>rjCQ&/>YIIa<^[s$?3X3&fLqi:XI'beL=s19pK5[1dG>3n.lrSSA2XX`kGMSF3Gi\_T!P:[UQY+oV;sh3rgO6-jY,-?orOZhZ
%hXhJrkrdf[.DN;HDgQ]c[/'.DJTm[&O5T]]b2,U6@utnhqpj-.0oA'Qq:<j*RcKIihOF;"1U)!?G5fGfb.bB`GFITN,J3Pkhg!.&
%++!*cmi9P1^?ERLh0ZV85Bu3@^[nL54n-._rp&#5[eEU!OSd.h=X!Hrf<]OYG(.=J(LuokCqZ.*K<oWPhY9c+pM/lG]r]9.GqY3U
%7n@hVs4>>"+$sdrNEoAdoAfQts"6-Q'1D3(NEoYl$"+s#h9A05KHp%C._-LtHo$1BG<,VP&go)@SH)_IRP*:EnE+=hD)^/A3renc
%:p*&:iL^].`T`Gl.;.i?RA27LYT<Y+]C@qYq[pC$YOfE=Z/7JR_H@X#5'i<<PcRr36/8JqI,@Vlm=s28_ej>Si&G"PrAn=1rb)tX
%*7&[DO7I0Rq$Y$T5Q7Rqs1<dU5Q5Hq^]*ghs53kOkPtLI^OH33$3&nurV<)bo&'KDkPs^proL>5s*+M8YCHP$s75R's8:4Cno'$W
%\%hjEl`\&$dpN.GYQ+;LJ,RR"J,LJho)Bll9D98%i?/'js7p%$rpTi9*sWm7~>
%AI9_PrivateDataEnd
